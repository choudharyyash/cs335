
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BLOCK_COMMENT BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_LITERAL CLASS COLON COMMA CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_LITERAL FOR GEQ GRT IDENTIFIER IF IMPORT INCREMENT INSTANCEOF INT INT_LITERAL LEQ LINE_COMMENT LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG LSHIFT_ASSIGN LST L_CURLYBR L_ROUNDBR L_SHIFT L_SQBR MINUS MINUS_ASSIGN MODULO MOD_ASSIGN MULT MULT_ASSIGN NATIVE NEW NOT_EQUAL NULL PACKAGE PLUS PLUS_ASSIGN PRIVATE PROTECTED PUBLIC QMARK RETURN RRSHIFT_ASSIGN RR_SHIFT RSHIFT_ASSIGN R_CURLYBR R_ROUNDBR R_SHIFT R_SQBR SHORT STATIC STMT_TERMINATOR STRING_LITERAL SUPER SWITCH SYNCHRONIZED THIS THROW THROWS TRANSIENT TRY VOID VOLATILE WHILEGoal : CompilationUnit Literal :   IntConst\n                  | FloatConst\n                  | CharConst\n                  | StringConst\n                  | NullConst\n    \n    IntConst : INT_LITERAL\n    \n    FloatConst : FLOAT_LITERAL\n    \n    CharConst : CHAR_LITERAL\n    \n    StringConst : STRING_LITERAL\n    \n    NullConst : NULL\n     Type : PrimitiveType\n            | ReferenceType  PrimitiveType :    NumericType\n                         | BOOLEAN\n     NumericType :   IntegralType\n                      | FloatingPointType\n     IntegralType :    BYTE\n                        | SHORT\n                        | INT\n                        | LONG\n                        | CHAR\n     FloatingPointType :   FLOAT\n                            | DOUBLE\n     ReferenceType :   ArrayType\n                        | ClassType\n     ClassType : Name\n     ArrayType :    PrimitiveType Dims\n                     | Name Dims\n     Name :    SimpleName\n                | QualifiedName  SimpleName : IDENTIFIER QualifiedName : Name DOT IDENTIFIER\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |\n    \n    ImportDeclarations : ImportDeclaration\n    | ImportDeclarations ImportDeclaration\n    \n    TypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclaration\n    \n    PackageDeclaration : PACKAGE Name STMT_TERMINATOR\n    \n    ImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclaration\n    \n    SingleTypeImportDeclaration : IMPORT Name STMT_TERMINATOR\n    \n    TypeImportOnDemandDeclaration : IMPORT Name DOT MULT STMT_TERMINATOR\n    \n    TypeDeclaration : ClassDeclaration\n    | STMT_TERMINATOR\n    \n    Modifiers : Modifier\n    | Modifiers Modifier\n    \n    Modifier : STATIC\n    | FINAL\n    | PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | ABSTRACT\n    | VOLATILE\n    | SYNCHRONIZED\n    | TRANSIENT\n    | NATIVE\n    \n    ClassDeclaration : Modifiers CLASS IDENTIFIER Super ClassBody\n    | Modifiers CLASS IDENTIFIER ClassBody\n    | CLASS IDENTIFIER Super ClassBody\n    | CLASS IDENTIFIER ClassBody\n    \n    Super : EXTENDS ClassType\n    \n    ClassBody : L_CURLYBR R_CURLYBR\n    | L_CURLYBR ClassBodyDeclarations R_CURLYBR\n    \n    ClassBodyDeclarations : ClassBodyDeclaration\n    | ClassBodyDeclarations ClassBodyDeclaration\n    \n    ClassBodyDeclaration : ClassMemberDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    \n    ClassMemberDeclaration : FieldDeclaration\n    | MethodDeclaration\n    \n    FieldDeclaration : Modifiers Type VariableDeclarators STMT_TERMINATOR\n    | Type VariableDeclarators STMT_TERMINATOR\n    \n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclarator\n    \n    VariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializer\n    \n    VariableDeclaratorId : IDENTIFIER\n    \n    VariableInitializer : Expression\n    | ArrayInitializer\n    \n    MethodDeclaration : MethodHeader MethodAddParentScope MethodBody\n    \n    MethodAddParentScope :\n    \n    MethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Type MethodDeclarator Throws\n    | Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator\n    | VOID MethodDeclarator Throws\n    | VOID MethodDeclarator\n    \n    MethodDeclarator : IDENTIFIER L_ROUNDBR MethodCreateScope R_ROUNDBR\n    | IDENTIFIER L_ROUNDBR MethodCreateScope FormalParameterList R_ROUNDBR\n    \n    MethodCreateScope :\n    \n    FormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameter\n    \n    FormalParameter : Type VariableDeclaratorId\n    \n    Throws : THROWS ClassTypeList\n    \n    ClassTypeList : ClassType\n    | ClassTypeList COMMA ClassType\n    \n    MethodBody : Block\n    | STMT_TERMINATOR\n    \n    StaticInitializer : STATIC Block\n    \n    ConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBody\n    \n    ConstructorDeclarator : SimpleName L_ROUNDBR FormalParameterList R_ROUNDBR\n    | SimpleName L_ROUNDBR R_ROUNDBR\n    \n    ConstructorBody : L_CURLYBR ExplicitConstructorInvocation BlockStatements R_CURLYBR\n    | L_CURLYBR ExplicitConstructorInvocation R_CURLYBR\n    | L_CURLYBR BlockStatements R_CURLYBR\n    | L_CURLYBR R_CURLYBR\n    \n    ExplicitConstructorInvocation : THIS L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR\n    | THIS L_ROUNDBR R_ROUNDBR STMT_TERMINATOR\n    | SUPER L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR\n    | SUPER L_ROUNDBR R_ROUNDBR STMT_TERMINATOR\n    \n    ArrayInitializer : L_CURLYBR VariableInitializers R_CURLYBR\n    | L_CURLYBR R_CURLYBR\n    \n    VariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializer\n    \n    Block : L_CURLYBR R_CURLYBR\n    | L_CURLYBR BlockStatements R_CURLYBR\n    \n    BlockStatements : BlockStatement\n    | BlockStatements BlockStatement\n    \n    BlockStatement : LocalVariableDeclarationStatement\n    | Statement\n    \n    LocalVariableDeclarationStatement : LocalVariableDeclaration STMT_TERMINATOR\n    \n    LocalVariableDeclaration : Type VariableDeclarators\n    \n    Statement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatement\n    \n    StatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIf\n    \n    StatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatement\n    \n    EmptyStatement : STMT_TERMINATOR\n    \n    LabeledStatement : IDENTIFIER COLON Statement\n    \n    LabeledStatementNoShortIf : IDENTIFIER COLON StatementNoShortIf\n    \n    ExpressionStatement : StatementExpression STMT_TERMINATOR\n    \n    StatementExpression : Assignment\n    | PreIncrementExpression\n    | PreDecrementExpression\n    | PostIncrementExpression\n    | PostDecrementExpression\n    | MethodInvocation\n    | ClassInstanceCreationExpression\n    \n    IfThenStatement : IF L_ROUNDBR Expression R_ROUNDBR IfstartSc Statement IfendSc\n    \n    IfThenElseStatement : IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc Statement ElseEndSc\n    \n    IfThenElseStatementNoShortIf : IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc StatementNoShortIf ElseEndSc\n    IfstartSc : IfendSc : ElseStartSc : ElseEndSc : \n    SwitchStatement : SWITCH L_ROUNDBR Expression R_ROUNDBR SwMark2 SwitchBlock SwMark3\n     SwMark2 :  SwMark3 : \n    SwitchBlock : L_CURLYBR R_CURLYBR\n    | L_CURLYBR SwitchBlockStatementGroups R_CURLYBR\n    \n    SwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroup\n    \n    SwitchBlockStatementGroup : SwitchLabel BlockStatements\n    \n    SwitchLabel : SwMark1 CASE ConstantExpression COLON\n    | SwMark1 DEFAULT COLON\n     SwMark1 : \n    WhileStatement : WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 Statement WhMark3\n    \n    WhileStatementNoShortIf : WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 StatementNoShortIf WhMark3\n    WhMark1 : WhMark2 : WhMark3 : \n    DoStatement : DO doWhMark1 Statement WHILE doWhMark2 L_ROUNDBR Expression R_ROUNDBR doWhMark3 STMT_TERMINATOR\n    doWhMark1 : doWhMark3 : doWhMark2 : \n    ForStatement : FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 Statement FoMark5\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 Statement FoMark5\n    \n    ForStatementNoShortIf : FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 StatementNoShortIf FoMark5\n    \n    ForExpression : Expression STMT_TERMINATOR\n    | STMT_TERMINATOR\n    FoMark0 : FoMark1 : FoMark2 : FoMark6 : FoMark4 : FoMark3 : FoMark5 : \n    ForInit : StatementExpressionList\n    | LocalVariableDeclaration\n    \n    ForUpdate : StatementExpressionList\n    \n    StatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpression\n    \n    BreakStatement : BREAK IDENTIFIER STMT_TERMINATOR\n    | BREAK STMT_TERMINATOR\n    \n    ContinueStatement : CONTINUE IDENTIFIER STMT_TERMINATOR\n    | CONTINUE STMT_TERMINATOR\n    \n    ReturnStatement : RETURN Expression STMT_TERMINATOR\n    | RETURN STMT_TERMINATOR\n    \n    ThrowStatement : THROW Expression STMT_TERMINATOR\n    \n    TryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block Finally\n    \n    Catches : CatchClause\n    | Catches CatchClause\n    \n    CatchClause : CATCH L_ROUNDBR FormalParameter R_ROUNDBR Block\n    \n    Finally : FINALLY Block\n    \n    Primary : PrimaryNoNewArray\n    | ArrayCreationExpression\n    \n    PrimaryNoNewArray : Literal\n    | THIS\n    | L_ROUNDBR Expression R_ROUNDBR\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccess\n    \n    ClassInstanceCreationExpression : NEW ClassType L_ROUNDBR R_ROUNDBR\n    | NEW ClassType L_ROUNDBR ArgumentList R_ROUNDBR\n    \n    ArgumentList : Expression\n    | ArgumentList COMMA Expression\n    \n    ArrayCreationExpression : NEW PrimitiveType DimExprs Dims\n    | NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs Dims\n    | NEW ClassType DimExprs\n    \n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    \n    DimExpr : L_SQBR Expression R_SQBR\n    \n    Dims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBR\n    \n    FieldAccess : Primary DOT IDENTIFIER\n    | SUPER DOT IDENTIFIER\n    \n    MethodInvocation : Name L_ROUNDBR ArgumentList R_ROUNDBR\n    | Name L_ROUNDBR R_ROUNDBR\n    | Primary DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR\n    | Primary DOT IDENTIFIER L_ROUNDBR R_ROUNDBR\n    | SUPER DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR\n    | SUPER DOT IDENTIFIER L_ROUNDBR R_ROUNDBR\n    \n    ArrayAccess : Name DimExprs\n    \n    PostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpression\n    \n    PostIncrementExpression : PostfixExpression INCREMENT\n    \n    PostDecrementExpression : PostfixExpression DECREMENT\n    \n    UnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinus\n    \n    PreIncrementExpression : INCREMENT UnaryExpression\n    \n    PreDecrementExpression : DECREMENT UnaryExpression\n    \n    UnaryExpressionNotPlusMinus : PostfixExpression\n    | BITWISE_NOT UnaryExpression\n    | LOGICAL_NOT UnaryExpression\n    | CastExpression\n    \n    CastExpression : L_ROUNDBR PrimitiveType Dims R_ROUNDBR UnaryExpression\n    | L_ROUNDBR PrimitiveType R_ROUNDBR UnaryExpression\n    | L_ROUNDBR Expression R_ROUNDBR UnaryExpressionNotPlusMinus\n    | L_ROUNDBR Name Dims R_ROUNDBR UnaryExpressionNotPlusMinus\n    \n    MultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIVIDE UnaryExpression\n    | MultiplicativeExpression MODULO UnaryExpression\n    \n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpression\n    \n    ShiftExpression : AdditiveExpression\n    | ShiftExpression L_SHIFT AdditiveExpression\n    | ShiftExpression R_SHIFT AdditiveExpression\n    | ShiftExpression RR_SHIFT AdditiveExpression\n    \n    RelationalExpression : ShiftExpression\n    | RelationalExpression LST ShiftExpression\n    | RelationalExpression GRT ShiftExpression\n    | RelationalExpression LEQ ShiftExpression\n    | RelationalExpression GEQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceType\n    \n    EqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOT_EQUAL RelationalExpression\n    \n    AndExpression : EqualityExpression\n    | AndExpression BITWISE_AND EqualityExpression\n    \n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BITWISE_XOR AndExpression\n    \n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BITWISE_OR ExclusiveOrExpression\n    \n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGICAL_AND InclusiveOrExpression\n    \n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGICAL_OR ConditionalAndExpression\n    \n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QMARK Expression COLON ConditionalExpression\n    \n    AssignmentExpression : ConditionalExpression\n    | Assignment\n    \n    Assignment : LeftHandSide AssignmentOperator AssignmentExpression\n    \n    LeftHandSide : Name\n    | FieldAccess\n    | ArrayAccess\n    \n    AssignmentOperator : ASSIGN\n    | MULT_ASSIGN\n    | DIVIDE_ASSIGN\n    | MOD_ASSIGN\n    | PLUS_ASSIGN\n    | MINUS_ASSIGN\n    | LSHIFT_ASSIGN\n    | RSHIFT_ASSIGN\n    | RRSHIFT_ASSIGN\n    \n    Expression : AssignmentExpression\n    \n    ConstantExpression : Expression\n    '
    
_lr_action_items = {'LEQ':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-287,-272,-238,-262,326,-269,-236,-290,-283,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,326,326,-286,-285,-284,-253,-299,-296,-297,-298,-295,-288,-289,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'VOID':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,96,111,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,54,54,-76,-55,-75,-74,-72,-78,102,-77,-73,-109,-113,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'PROTECTED':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[7,-62,-61,7,-44,-60,-58,-55,-48,-56,-64,-42,-59,7,-47,-53,-52,7,7,-63,-51,-57,-43,7,-54,7,7,-45,-49,7,-68,-46,7,7,-76,-55,-75,-74,-70,-72,-78,7,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'MINUS':([29,31,32,50,116,121,126,127,128,131,132,136,141,147,149,154,156,158,165,166,167,168,172,177,178,184,188,210,213,214,215,216,218,219,220,221,222,224,227,229,230,232,235,236,240,242,244,246,247,259,260,261,262,263,264,265,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,292,306,307,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,342,352,353,354,355,364,366,387,388,389,391,400,401,403,404,405,406,408,410,416,421,423,424,426,428,430,431,432,434,435,441,442,443,444,447,448,451,453,459,464,465,467,472,476,488,507,517,522,534,544,545,552,],[-31,-30,-32,-33,-251,-4,-231,-234,-9,216,-2,-232,-239,-10,-5,-233,-8,216,-237,-7,216,-6,-11,-3,216,216,216,-252,-267,-266,-265,216,-264,216,-268,216,216,-275,-287,-272,-238,-262,-269,-236,334,-283,-278,-263,216,216,-239,-263,216,-273,-237,-262,-274,-324,-327,-326,216,-329,-328,-323,-322,-325,-321,216,-261,216,-248,216,216,216,216,-271,-270,-277,-276,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,-263,216,-245,-247,216,-249,-256,-286,-285,-284,-253,-288,-289,334,334,334,216,-235,-254,-206,216,-244,-246,-240,-235,-250,-255,216,216,216,216,-280,216,-281,-206,216,-258,-241,-260,-279,-282,216,-257,216,-259,216,216,216,-206,-206,216,216,]),'L_CURLYBR':([29,31,32,33,45,46,50,58,74,76,83,84,87,91,95,98,104,107,108,109,113,118,119,123,125,129,134,135,138,140,142,143,144,152,153,155,160,161,163,169,170,173,175,181,183,187,188,189,191,192,196,201,202,207,208,211,212,239,255,266,267,269,271,272,292,296,298,301,303,309,332,345,346,347,348,351,358,360,371,381,382,417,418,419,427,433,435,438,440,452,454,457,461,462,471,473,475,477,487,490,493,494,496,497,500,502,504,506,508,510,513,514,516,521,525,527,528,531,535,537,538,539,540,541,542,543,546,547,548,549,550,551,554,556,557,559,562,563,564,566,569,570,573,576,578,581,],[-31,-30,-32,42,42,42,-33,95,-89,108,-27,-69,42,-97,95,-93,108,95,95,108,-96,-149,-133,-130,95,-154,-152,-138,-148,-139,-147,95,-155,-141,-153,-150,-151,-156,-140,-192,-137,-128,-132,-157,-136,-92,292,-95,-91,108,-115,95,95,-105,-104,-131,-129,-222,-220,95,-134,-218,95,-160,292,-94,-90,-114,95,-98,-221,-224,-226,-227,95,-219,-158,-217,-223,-106,-99,-225,-228,-230,-176,-171,292,-121,-123,-189,474,95,-120,-122,95,95,-177,-172,-136,-209,-229,-190,95,-178,-175,-168,-173,95,-209,95,-186,-179,95,95,95,-211,-207,-184,-174,-171,-211,-207,-198,95,-183,-191,-169,-189,95,-197,95,-210,95,-210,-196,-209,-173,-195,-209,95,95,95,-207,-207,95,95,]),'LONG':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,96,106,108,111,114,118,119,123,125,129,134,135,138,140,142,144,150,152,153,155,160,161,163,170,173,175,181,183,186,193,198,199,200,201,202,204,206,209,211,212,234,239,247,255,262,267,269,272,297,299,302,303,304,305,324,332,344,345,346,347,351,358,360,371,376,417,418,419,420,438,440,461,462,475,477,487,493,494,496,497,500,502,513,514,516,520,527,531,535,538,540,542,543,546,549,551,556,557,563,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,59,59,-76,-55,-75,-74,-72,-78,59,-77,-73,59,-109,59,59,-113,-100,-149,-133,-130,59,-154,-152,-138,-148,-139,-147,-155,59,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-80,-111,-88,-108,-107,59,59,-119,-112,59,-131,-129,59,-222,59,-220,59,-134,-218,-160,-79,-110,59,59,-117,-118,59,-221,59,-224,-226,-227,-219,-158,-217,-223,-116,-225,-228,-230,59,-121,-123,-120,-122,-177,-172,-136,-229,-190,59,-178,-175,-168,-186,-179,59,59,-211,-184,-174,-211,-198,-183,-191,-169,-197,-210,-210,-196,-195,]),'DEFAULT':([118,119,123,129,134,135,138,140,142,144,152,153,155,160,161,163,170,173,175,181,183,211,212,239,255,267,269,272,332,345,346,347,351,358,360,371,417,418,419,474,475,477,487,493,494,495,497,498,499,500,502,513,514,515,516,527,535,538,540,543,546,549,551,556,557,563,],[-149,-133,-130,-154,-152,-138,-148,-139,-147,-155,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-131,-129,-222,-220,-134,-218,-160,-221,-224,-226,-227,-219,-158,-217,-223,-225,-228,-230,-185,-177,-172,-136,-229,-190,-185,-178,518,-180,-175,-168,-186,-179,-181,-182,-211,-174,-211,-198,-191,-169,-197,-210,-210,-196,-195,]),'PLUS':([29,31,32,50,116,121,126,127,128,131,132,136,141,147,149,154,156,158,165,166,167,168,172,177,178,184,188,210,213,214,215,216,218,219,220,221,222,224,227,229,230,232,235,236,240,242,244,246,247,259,260,261,262,263,264,265,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,292,306,307,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,342,352,353,354,355,364,366,387,388,389,391,400,401,403,404,405,406,408,410,416,421,423,424,426,428,430,431,432,434,435,441,442,443,444,447,448,451,453,459,464,465,467,472,476,488,507,517,522,534,544,545,552,],[-31,-30,-32,-33,-251,-4,-231,-234,-9,219,-2,-232,-239,-10,-5,-233,-8,219,-237,-7,219,-6,-11,-3,219,219,219,-252,-267,-266,-265,219,-264,219,-268,219,219,-275,-287,-272,-238,-262,-269,-236,333,-283,-278,-263,219,219,-239,-263,219,-273,-237,-262,-274,-324,-327,-326,219,-329,-328,-323,-322,-325,-321,219,-261,219,-248,219,219,219,219,-271,-270,-277,-276,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,-263,219,-245,-247,219,-249,-256,-286,-285,-284,-253,-288,-289,333,333,333,219,-235,-254,-206,219,-244,-246,-240,-235,-250,-255,219,219,219,219,-280,219,-281,-206,219,-258,-241,-260,-279,-282,219,-257,219,-259,219,219,219,-206,-206,219,219,]),'IMPORT':([0,4,9,12,18,22,27,37,41,47,88,],[14,14,-48,-42,-47,14,-43,14,-49,-46,-50,]),'R_SQBR':([29,31,32,50,70,72,78,93,94,105,115,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,217,218,220,223,224,225,226,227,228,229,230,231,232,233,235,236,237,240,241,242,243,244,245,246,260,261,263,264,265,270,283,284,286,311,312,313,314,353,354,362,363,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,399,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,463,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,116,-29,210,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-316,-264,-268,-311,-275,-305,-303,-287,-330,-272,-238,-307,-262,-300,-269,-236,-313,-290,-315,-283,-309,-278,-294,-263,-239,-263,-273,-237,-262,-274,116,-261,-248,-271,-270,-277,-276,-245,-247,-317,430,-249,-256,-310,-304,-302,-301,-286,-285,-284,-306,-253,-299,-296,-297,-298,-295,-312,-288,-289,-308,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-314,-279,-282,-257,-259,]),'R_ROUNDBR':([29,31,32,50,52,57,59,62,64,66,70,72,75,77,78,79,80,81,93,105,106,114,116,117,120,121,122,124,126,127,128,132,136,139,141,147,149,151,154,156,165,166,168,172,177,179,194,197,209,210,213,214,215,217,218,220,223,224,225,226,227,228,229,230,231,232,233,235,236,237,240,241,242,243,244,245,246,250,260,261,263,264,265,270,284,285,286,287,300,306,307,310,311,312,313,314,340,341,342,353,354,355,356,357,362,364,365,366,367,369,375,377,379,383,384,385,386,387,388,389,390,391,393,394,395,396,397,399,400,401,402,403,404,405,407,408,409,410,411,421,422,423,424,425,426,428,430,431,434,442,444,449,450,451,453,456,458,459,463,464,465,466,468,470,472,488,489,492,501,511,512,524,526,536,553,558,567,571,],[-31,-30,-32,-33,-19,-22,-21,-16,-14,-15,-27,-25,-17,-20,-26,-23,-18,-24,-28,-29,196,-100,-251,-165,-161,-4,-164,-162,-231,-234,-9,-2,-232,-166,-239,-10,-5,-167,-233,-8,-237,-7,-6,-11,-3,-163,-101,301,309,-252,-267,-266,-265,-316,-264,-268,-311,-275,-305,-303,-287,-330,-272,-238,-307,-262,-300,-269,-236,-313,-290,-315,-283,-309,-278,-294,-263,-85,-239,-263,-273,-237,-262,-274,-261,366,-248,368,-103,378,380,382,-271,-270,-277,-276,406,408,-263,-245,-247,426,427,428,-317,-249,431,-256,-242,433,-102,437,439,-310,-304,-302,-301,-286,-285,-284,-306,-253,-299,-296,-297,-298,-295,-312,-288,-289,-308,-293,-292,-291,443,-235,445,-254,-215,451,452,-244,-246,453,-240,-235,-250,-255,459,-280,-281,471,472,-258,-241,-243,488,-260,-314,-279,-282,-216,490,-204,-257,-259,508,-203,519,-214,528,537,539,547,559,564,573,576,]),'MODULO':([29,31,32,50,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,235,236,242,244,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,387,388,389,391,400,401,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,319,-272,-238,-262,-269,-236,-283,-278,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,-286,-285,-284,-253,319,319,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'EXTENDS':([33,46,],[43,43,]),'BITWISE_NOT':([131,158,167,178,184,188,216,219,221,222,247,259,262,273,274,275,276,277,278,279,280,281,282,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,416,421,428,432,434,435,441,443,445,447,448,467,476,507,517,522,534,544,545,552,],[222,222,222,222,222,222,222,222,222,222,222,222,222,-324,-327,-326,222,-329,-328,-323,-322,-325,-321,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,-206,222,222,222,222,222,222,222,222,-206,222,222,222,222,222,222,-206,-206,222,222,]),'BITWISE_XOR':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,225,226,227,229,230,231,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,384,385,386,387,388,389,390,391,393,394,395,396,397,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-305,-303,-287,-272,-238,322,-262,-300,-269,-236,-290,-283,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,-304,-302,-301,-286,-285,-284,-306,-253,-299,-296,-297,-298,-295,-288,-289,322,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'LOGICAL_NOT':([131,158,167,178,184,188,216,219,221,222,247,259,262,273,274,275,276,277,278,279,280,281,282,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,416,421,428,432,434,435,441,443,445,447,448,467,476,507,517,522,534,544,545,552,],[221,221,221,221,221,221,221,221,221,221,221,221,221,-324,-327,-326,221,-329,-328,-323,-322,-325,-321,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,-206,221,221,221,221,221,221,221,221,-206,221,221,221,221,221,221,-206,-206,221,221,]),'THIS':([95,108,118,119,123,125,129,131,134,135,138,140,142,144,152,153,155,158,160,161,163,167,169,170,173,175,178,181,183,184,188,201,202,211,212,216,219,221,222,239,247,255,259,262,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,332,333,334,335,336,337,338,339,344,345,346,347,351,352,355,358,360,371,406,408,416,417,418,419,421,428,432,433,434,435,438,440,441,443,445,446,447,448,452,457,461,462,467,468,470,473,475,476,477,487,489,490,491,492,493,494,496,497,500,502,504,506,507,508,509,510,513,514,516,517,520,521,522,525,527,528,531,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,556,557,558,559,560,562,563,564,565,566,569,570,573,576,578,581,],[127,203,-149,-133,-130,127,-154,127,-152,-138,-148,-139,-147,-155,-141,-153,-150,127,-151,-156,-140,127,-192,-137,-128,-132,127,-157,-136,127,127,127,127,-131,-129,127,127,127,127,-222,127,-220,127,127,127,-134,-218,127,-160,-324,-327,-326,127,-329,-328,-323,-322,-325,-321,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-221,127,127,127,127,127,127,127,127,-224,-226,-227,-219,127,127,-158,-217,-223,127,127,-206,-225,-228,-230,127,127,127,-171,127,127,-121,-123,127,127,127,127,-206,127,-189,127,-120,-122,127,-208,-204,127,-177,127,-172,-136,-208,-209,127,-203,-229,-190,127,-178,-175,-168,-173,127,127,-209,127,127,-186,-179,127,127,127,127,127,127,-211,-207,-184,-206,-174,-171,-211,-207,-198,127,-183,-191,-206,127,-169,-189,127,-197,127,-210,127,-208,127,-210,-196,-208,-209,127,-173,-195,-209,127,127,127,127,-207,-207,127,127,]),'DOUBLE':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,96,106,108,111,114,118,119,123,125,129,134,135,138,140,142,144,150,152,153,155,160,161,163,170,173,175,181,183,186,193,198,199,200,201,202,204,206,209,211,212,234,239,247,255,262,267,269,272,297,299,302,303,304,305,324,332,344,345,346,347,351,358,360,371,376,417,418,419,420,438,440,461,462,475,477,487,493,494,496,497,500,502,513,514,516,520,527,531,535,538,540,542,543,546,549,551,556,557,563,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,81,81,-76,-55,-75,-74,-72,-78,81,-77,-73,81,-109,81,81,-113,-100,-149,-133,-130,81,-154,-152,-138,-148,-139,-147,-155,81,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-80,-111,-88,-108,-107,81,81,-119,-112,81,-131,-129,81,-222,81,-220,81,-134,-218,-160,-79,-110,81,81,-117,-118,81,-221,81,-224,-226,-227,-219,-158,-217,-223,-116,-225,-228,-230,81,-121,-123,-120,-122,-177,-172,-136,-229,-190,81,-178,-175,-168,-186,-179,81,81,-211,-184,-174,-211,-198,-183,-191,-169,-197,-210,-210,-196,-195,]),'CHAR_LITERAL':([95,108,118,119,123,125,129,131,134,135,138,140,142,144,152,153,155,158,160,161,163,167,169,170,173,175,178,181,183,184,188,201,202,211,212,216,219,221,222,239,247,255,259,262,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,332,333,334,335,336,337,338,339,344,345,346,347,351,352,355,358,360,371,406,408,416,417,418,419,421,428,432,433,434,435,438,440,441,443,445,446,447,448,452,457,461,462,467,468,470,473,475,476,477,487,489,490,491,492,493,494,496,497,500,502,504,506,507,508,509,510,513,514,516,517,520,521,522,525,527,528,531,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,556,557,558,559,560,562,563,564,565,566,569,570,573,576,578,581,],[128,128,-149,-133,-130,128,-154,128,-152,-138,-148,-139,-147,-155,-141,-153,-150,128,-151,-156,-140,128,-192,-137,-128,-132,128,-157,-136,128,128,128,128,-131,-129,128,128,128,128,-222,128,-220,128,128,128,-134,-218,128,-160,-324,-327,-326,128,-329,-328,-323,-322,-325,-321,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-221,128,128,128,128,128,128,128,128,-224,-226,-227,-219,128,128,-158,-217,-223,128,128,-206,-225,-228,-230,128,128,128,-171,128,128,-121,-123,128,128,128,128,-206,128,-189,128,-120,-122,128,-208,-204,128,-177,128,-172,-136,-208,-209,128,-203,-229,-190,128,-178,-175,-168,-173,128,128,-209,128,128,-186,-179,128,128,128,128,128,128,-211,-207,-184,-206,-174,-171,-211,-207,-198,128,-183,-191,-206,128,-169,-189,128,-197,128,-210,128,-208,128,-210,-196,-208,-209,128,-173,-195,-209,128,128,128,128,-207,-207,128,128,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,44,47,49,65,85,86,88,89,112,],[15,-62,-61,15,-44,-60,-58,-55,-48,-56,-64,-42,-59,35,-47,-53,-52,15,15,-63,-51,-57,-43,15,-54,15,15,-45,-49,-68,-46,15,-70,-67,-66,-50,-71,-65,]),'TRANSIENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[24,-62,-61,24,-44,-60,-58,-55,-48,-56,-64,-42,-59,24,-47,-53,-52,24,24,-63,-51,-57,-43,24,-54,24,24,-45,-49,24,-68,-46,24,24,-76,-55,-75,-74,-70,-72,-78,24,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'R_SHIFT':([29,31,32,50,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,387,388,389,391,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-287,-272,-238,-262,-269,-236,-290,-283,-278,337,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,-286,-285,-284,-253,337,337,337,337,-288,-289,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'MULT_ASSIGN':([29,31,32,50,141,159,165,174,176,246,284,286,342,350,359,364,370,391,410,412,430,482,],[-31,-30,-32,-33,-320,-32,-319,280,-318,-318,-261,-248,-318,-253,-318,-249,-254,-253,-254,-318,-250,-32,]),'L_SHIFT':([29,31,32,50,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,387,388,389,391,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-287,-272,-238,-262,-269,-236,-290,-283,-278,338,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,-286,-285,-284,-253,338,338,338,338,-288,-289,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'SHORT':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,96,106,108,111,114,118,119,123,125,129,134,135,138,140,142,144,150,152,153,155,160,161,163,170,173,175,181,183,186,193,198,199,200,201,202,204,206,209,211,212,234,239,247,255,262,267,269,272,297,299,302,303,304,305,324,332,344,345,346,347,351,358,360,371,376,417,418,419,420,438,440,461,462,475,477,487,493,494,496,497,500,502,513,514,516,520,527,531,535,538,540,542,543,546,549,551,556,557,563,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,52,52,-76,-55,-75,-74,-72,-78,52,-77,-73,52,-109,52,52,-113,-100,-149,-133,-130,52,-154,-152,-138,-148,-139,-147,-155,52,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-80,-111,-88,-108,-107,52,52,-119,-112,52,-131,-129,52,-222,52,-220,52,-134,-218,-160,-79,-110,52,52,-117,-118,52,-221,52,-224,-226,-227,-219,-158,-217,-223,-116,-225,-228,-230,52,-121,-123,-120,-122,-177,-172,-136,-229,-190,52,-178,-175,-168,-186,-179,52,52,-211,-184,-174,-211,-198,-183,-191,-169,-197,-210,-210,-196,-195,]),'RETURN':([95,108,118,119,123,125,129,134,135,138,140,142,144,152,153,155,160,161,163,169,170,173,175,181,183,201,202,211,212,239,255,266,267,269,271,272,303,332,345,346,347,351,358,360,371,417,418,419,433,438,440,452,457,461,462,473,475,477,487,490,493,494,496,497,500,502,504,506,508,510,513,514,516,521,525,527,528,531,535,537,538,539,540,541,542,543,546,547,548,549,550,551,554,556,557,559,562,563,564,566,569,570,573,576,578,581,],[131,131,-149,-133,-130,131,-154,-152,-138,-148,-139,-147,-155,-141,-153,-150,-151,-156,-140,-192,-137,-128,-132,-157,-136,131,131,-131,-129,-222,-220,131,-134,-218,131,-160,131,-221,-224,-226,-227,-219,-158,-217,-223,-225,-228,-230,-171,-121,-123,-189,131,-120,-122,131,-177,-172,-136,-209,-229,-190,131,-178,-175,-168,-173,131,-209,131,-186,-179,131,131,131,-211,-207,-184,-174,-171,-211,-207,-198,131,-183,-191,-169,-189,131,-197,131,-210,131,-210,-196,-209,-173,-195,-209,131,131,131,-207,-207,131,131,]),'SYNCHRONIZED':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[2,-62,-61,2,-44,-60,-58,-55,-48,-56,-64,-42,-59,2,-47,-53,-52,2,2,-63,-51,-57,-43,2,-54,2,2,-45,-49,2,-68,-46,2,2,-76,-55,-75,-74,-70,-72,-78,2,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'LOGICAL_AND':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,223,224,225,226,227,229,230,231,232,233,235,236,240,242,243,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,399,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,315,-275,-305,-303,-287,-272,-238,-307,-262,-300,-269,-236,-290,-283,-309,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,-310,-304,-302,-301,-286,-285,-284,-306,-253,-299,-296,-297,-298,-295,315,-288,-289,-308,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'FINAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[10,-62,-61,10,-44,-60,-58,-55,-48,-56,-64,-42,-59,10,-47,-53,-52,10,10,-63,-51,-57,-43,10,-54,10,10,-45,-49,10,-68,-46,10,10,-76,-55,-75,-74,-70,-72,-78,10,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'GEQ':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-287,-272,-238,-262,327,-269,-236,-290,-283,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,327,327,-286,-285,-284,-253,-299,-296,-297,-298,-295,-288,-289,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'NOT_EQUAL':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,226,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,384,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,317,-287,-272,-238,-262,-300,-269,-236,-290,-283,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,317,-302,-301,-286,-285,-284,-253,-299,-296,-297,-298,-295,-288,-289,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'BITWISE_OR':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,225,226,227,229,230,231,232,233,235,236,240,242,243,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-305,-303,-287,-272,-238,-307,-262,-300,-269,-236,-290,-283,335,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,335,-304,-302,-301,-286,-285,-284,-306,-253,-299,-296,-297,-298,-295,-288,-289,-308,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'LST':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,472,488,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,-237,-7,-6,-11,-3,-252,-267,-266,-265,-264,-268,-275,-287,-272,-238,-262,328,-269,-236,-290,-283,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-263,-245,-247,-249,-256,328,328,-286,-285,-284,-253,-299,-296,-297,-298,-295,-288,-289,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-279,-282,-257,-259,]),'COLON':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,159,165,166,168,172,177,210,213,214,215,217,218,220,223,224,225,226,227,228,229,230,231,232,233,235,236,237,240,241,242,243,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,353,354,362,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,463,464,465,472,482,488,518,529,530,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-251,-4,-231,-234,-9,-2,-232,-239,-10,-5,-233,-8,266,-237,-7,-6,-11,-3,-252,-267,-266,-265,-316,-264,-268,-311,-275,-305,-303,-287,-330,-272,-238,-307,-262,-300,-269,-236,-313,-290,-315,-283,-309,-278,-294,-263,-239,-263,-273,-237,-262,-274,-261,-248,-271,-270,-277,-276,-245,-247,-317,-249,-256,-310,-304,-302,-301,-286,-285,-284,-306,-253,-299,-296,-297,-298,-295,441,-312,-288,-289,-308,-293,-292,-291,-235,-254,-244,-246,-240,-235,-250,-255,-280,-281,-258,-241,-260,-314,-279,-282,-257,506,-259,531,542,-331,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'ClassBodyDeclarations':([42,],[53,]),'PostDecrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[117,117,117,215,215,215,215,215,215,117,117,215,215,215,215,215,215,215,117,117,215,215,215,215,215,117,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,117,215,215,215,215,215,215,215,215,215,215,215,215,117,215,117,215,117,215,117,117,117,215,117,117,117,215,117,117,215,117,117,215,117,117,215,117,117,117,117,117,117,117,117,]),'ExpressionStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'PrimitiveType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,516,520,],[55,55,55,55,55,55,55,257,55,55,55,257,340,340,55,55,392,55,55,55,55,55,]),'ElseEndSc':([535,574,],[546,579,]),'Statement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[119,119,119,119,119,358,361,119,477,494,119,358,527,119,535,538,551,477,556,494,527,535,538,551,556,]),'IntConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'ConstructorBody':([76,104,109,192,],[111,193,206,299,]),'ArgumentList':([285,306,307,355,421,434,],[365,377,379,425,450,458,]),'ClassMemberDeclaration':([42,53,],[63,63,]),'Assignment':([95,108,125,131,178,184,188,201,202,247,259,262,266,271,276,283,285,288,292,303,306,307,330,339,344,352,355,421,432,434,435,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[120,120,120,217,217,217,217,120,120,217,217,217,120,120,217,217,217,217,217,120,217,217,217,217,120,217,217,217,217,217,217,120,217,120,217,120,217,120,120,120,217,120,120,120,217,120,120,217,120,120,217,120,120,217,120,120,120,120,120,120,120,120,]),'CharConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'CatchClause':([252,345,],[347,418,]),'PostIncrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[122,122,122,218,218,218,218,218,218,122,122,218,218,218,218,218,218,218,122,122,218,218,218,218,218,122,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,122,218,218,218,218,218,218,218,218,218,218,218,218,122,218,122,218,122,218,122,122,122,218,122,122,122,218,122,122,218,122,122,218,122,122,218,122,122,122,122,122,122,122,122,]),'ClassBodyDeclaration':([42,53,],[67,90,]),'SwMark1':([474,495,],[498,498,]),'SwMark2':([427,],[454,]),'SwMark3':([475,],[500,]),'BlockStatement':([95,108,125,201,202,303,496,516,],[123,123,211,123,211,211,123,211,]),'SwitchBlockStatementGroups':([474,],[495,]),'SingleTypeImportDeclaration':([0,4,22,37,],[18,18,18,18,]),'ConditionalExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,463,241,241,241,241,241,241,241,241,]),'PreIncrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,421,432,434,435,441,443,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[124,124,124,220,220,220,220,220,220,124,124,220,220,220,220,220,220,220,124,124,220,220,220,220,220,124,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,124,220,220,220,220,220,220,220,220,220,124,220,124,220,124,220,124,124,124,220,124,124,124,220,124,124,220,124,124,220,124,124,220,124,124,124,124,124,124,124,124,]),'ExplicitConstructorInvocation':([108,],[201,]),'UnaryExpression':([131,158,167,178,184,188,216,219,221,222,247,259,262,276,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,421,432,434,435,441,443,448,467,476,507,517,522,545,552,],[242,263,270,242,242,242,311,312,313,314,242,242,242,242,242,242,242,242,242,242,242,242,242,242,387,388,389,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,442,242,242,242,242,242,464,242,242,242,242,242,242,242,242,]),'VariableInitializers':([292,],[372,]),'DimExpr':([176,246,257,258,261,284,329,342,353,354,359,412,],[286,286,286,286,286,364,286,286,364,364,286,286,]),'Throws':([76,91,98,104,189,191,],[109,113,187,192,296,298,]),'BlockStatements':([95,108,201,496,],[125,202,303,516,]),'ClassTypeList':([110,],[208,]),'PrimaryNoNewArray':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'AssignmentOperator':([174,],[276,]),'ConditionalAndExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,331,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,399,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'EmptyStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'ReturnStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'VariableDeclarator':([61,103,133,185,],[101,101,101,291,]),'PostfixExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[130,130,130,224,224,224,224,224,224,130,130,224,224,224,224,224,224,224,130,130,224,224,224,224,224,130,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,130,224,224,224,224,224,224,224,224,224,224,224,224,130,224,130,224,130,224,130,130,130,224,130,130,130,224,130,130,224,130,130,224,130,130,224,130,130,130,130,130,130,130,130,]),'ForExpression':([448,467,545,552,],[468,489,553,558,]),'ArrayInitializer':([188,292,435,],[293,293,293,]),'FormalParameter':([106,209,302,420,],[194,194,375,449,]),'AndExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,322,330,331,335,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,390,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,]),'Type':([42,53,69,95,106,108,125,201,202,209,302,303,344,420,496,516,520,],[61,61,103,133,195,133,133,133,133,195,195,133,133,195,133,133,133,]),'EqualityExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,322,330,331,335,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,384,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,]),'MultiplicativeExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,400,401,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,]),'BreakStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'IfThenStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'doWhMark2':([429,],[455,]),'ElseStartSc':([504,562,],[521,569,]),'Super':([33,46,],[45,87,]),'ArrayCreationExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'AssignmentExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,339,352,355,421,432,434,435,448,467,476,507,517,522,545,552,],[228,228,228,228,228,228,228,362,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,]),'UnaryExpressionNotPlusMinus':([131,158,167,178,184,188,216,219,221,222,247,259,262,276,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,421,428,432,434,435,441,443,445,448,467,476,507,517,522,545,552,],[229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,444,229,444,229,229,229,229,229,465,229,229,229,229,229,229,229,229,]),'SwitchBlock':([454,],[475,]),'IfstartSc':([433,537,],[457,548,]),'FieldDeclaration':([42,53,],[82,82,]),'StatementNoShortIf':([457,506,548,554,566,569,570,578,581,],[479,523,555,561,572,574,575,582,583,]),'MethodCreateScope':([114,],[209,]),'MethodInvocation':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[139,139,139,230,230,230,230,230,230,139,139,230,230,230,230,230,230,230,139,139,230,230,230,230,230,139,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,139,230,230,230,230,230,230,230,230,230,230,230,230,139,230,139,230,139,230,139,139,139,230,139,139,139,230,139,139,230,139,139,230,139,139,230,139,139,139,139,139,139,139,139,]),'IfThenElseStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'ArrayAccess':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[141,141,141,141,260,260,141,141,141,141,141,260,260,260,260,141,141,141,141,141,141,141,141,141,141,141,141,141,260,260,260,260,260,260,260,260,260,260,260,260,141,260,260,260,260,260,260,260,141,141,141,141,260,260,141,260,141,141,141,260,260,260,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'Modifier':([0,4,16,22,23,28,37,38,42,49,53,69,],[19,19,34,19,19,19,19,19,19,19,19,34,]),'Block':([58,95,107,108,125,143,201,202,266,271,303,348,457,471,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[96,142,200,142,142,252,142,142,142,142,142,419,142,493,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'ForUpdate':([491,509,560,565,],[512,526,567,571,]),'ForInit':([344,520,],[415,533,]),'VariableDeclarators':([61,103,133,],[97,190,249,]),'ThrowStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'ExclusiveOrExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,330,331,335,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,402,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,]),'Primary':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[145,145,145,232,265,265,232,232,232,145,145,265,265,265,265,232,232,232,145,145,232,232,232,232,232,145,232,232,265,265,265,265,265,265,265,265,265,265,265,265,232,265,265,265,265,265,265,265,232,145,232,232,265,265,232,265,232,232,232,265,265,265,145,232,145,232,145,232,145,145,145,232,145,145,145,232,145,145,232,145,145,232,145,145,232,145,145,145,145,145,145,145,145,]),'PackageDeclaration':([0,],[22,]),'RelationalExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,330,331,335,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,385,386,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),'WhileStatementNoShortIf':([457,506,548,554,566,569,570,578,581,],[480,480,480,480,480,480,480,480,480,]),'ConstantExpression':([517,],[529,]),'VariableInitializer':([188,292,435,],[294,373,460,]),'StaticInitializer':([42,53,],[56,56,]),'Literal':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'StringConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'ConstructorDeclaration':([42,53,],[60,60,]),'TypeImportOnDemandDeclaration':([0,4,22,37,],[9,9,9,9,]),'ReferenceType':([42,53,69,95,106,108,125,201,202,209,302,303,324,344,420,496,516,520,],[73,73,73,73,73,73,73,73,73,73,73,73,393,73,73,73,73,73,]),'ClassInstanceCreationExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[151,151,151,236,236,236,236,236,236,151,151,236,236,236,236,236,236,236,151,151,236,236,236,236,236,151,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,151,236,236,236,236,236,236,236,236,236,236,236,236,151,236,151,236,151,236,151,151,151,236,151,151,151,236,151,151,236,151,151,236,151,151,236,151,151,151,151,151,151,151,151,]),'ForStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'IfendSc':([477,],[502,]),'FoMark3':([551,556,582,583,],[557,563,584,585,]),'ContinueStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'ImportDeclaration':([0,4,22,37,],[12,27,12,27,]),'SwitchStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'Dims':([55,70,176,340,342,353,354,392,412,],[93,105,105,407,409,423,424,93,105,]),'ClassBody':([33,45,46,87,],[44,85,86,112,]),'ConditionalOrExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,]),'SwitchBlockStatementGroup':([474,495,],[499,515,]),'MethodDeclaration':([42,53,],[68,68,]),'Catches':([252,],[345,]),'Modifiers':([0,4,22,23,28,37,38,42,49,53,],[16,16,16,16,16,16,16,69,16,69,]),'DoStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'TryStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'FormalParameterList':([106,209,],[197,310,]),'Expression':([131,178,184,188,247,259,262,283,285,288,292,306,307,330,339,352,355,421,432,434,435,448,467,476,507,517,522,545,552,],[238,287,290,295,341,356,357,363,367,369,295,367,367,398,363,422,367,367,456,367,295,469,469,501,524,530,536,469,469,]),'doWhMark3':([519,],[532,]),'StatementExpressionList':([344,491,509,520,560,565,],[414,511,511,414,511,511,]),'doWhMark1':([169,],[271,]),'AdditiveExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,325,326,327,328,330,331,335,336,337,338,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,403,404,405,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,]),'FloatingPointType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,516,520,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'LocalVariableDeclaration':([95,108,125,201,202,303,344,496,516,520,],[162,162,162,162,162,162,413,162,162,413,]),'ConstructorDeclarator':([42,53,69,],[76,76,104,]),'Finally':([252,345,],[346,417,]),'InclusiveOrExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,330,331,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[243,243,243,243,243,243,243,243,243,243,243,243,243,243,383,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,]),'ClassType':([42,43,53,69,95,106,108,110,125,150,201,202,209,234,302,303,308,324,344,420,496,516,520,],[78,84,78,78,78,78,78,207,78,258,78,78,78,329,78,78,381,78,78,78,78,78,78,]),'WhileStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'SwitchLabel':([474,495,],[496,496,]),'ClassDeclaration':([0,4,22,23,28,37,38,49,],[25,25,25,25,25,25,25,25,]),'NullConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'CastExpression':([131,158,167,178,184,188,216,219,221,222,247,259,262,276,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,421,428,432,434,435,441,443,445,448,467,476,507,517,522,545,552,],[244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,]),'ImportDeclarations':([0,22,],[4,37,]),'TypeDeclaration':([0,4,22,23,28,37,38,49,],[5,5,5,39,39,5,39,39,]),'LabeledStatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'ArrayType':([42,53,69,95,106,108,125,201,202,209,302,303,324,344,420,496,516,520,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'FoMark5':([527,538,572,575,],[540,549,577,580,]),'FoMark4':([490,508,559,564,],[510,525,566,570,]),'StatementExpression':([95,108,125,201,202,266,271,303,344,446,457,473,491,496,506,509,510,516,520,521,525,541,548,550,554,560,565,566,569,570,578,581,],[171,171,171,171,171,171,171,171,411,466,171,171,411,171,171,411,171,171,411,171,171,171,171,171,171,411,411,171,171,171,171,171,]),'FoMark6':([468,489,553,558,],[491,509,560,565,]),'FoMark1':([416,447,534,544,],[448,467,545,552,]),'FoMark0':([137,478,],[251,503,]),'MethodDeclarator':([54,61,102,103,],[91,98,189,191,]),'FoMark2':([528,539,573,576,],[541,550,578,581,]),'VariableDeclaratorId':([61,103,133,185,195,],[99,99,99,99,300,]),'IntegralType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,516,520,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'QualifiedName':([14,17,42,43,53,69,95,106,108,110,125,131,150,158,167,178,184,188,201,202,209,216,219,221,222,234,247,259,262,266,271,276,283,285,288,292,302,303,306,307,308,315,316,317,318,319,320,321,322,324,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,420,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NumericType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,516,520,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LeftHandSide':([95,108,125,131,178,184,188,201,202,247,259,262,266,271,276,283,285,288,292,303,306,307,330,339,344,352,355,421,432,434,435,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'IfThenElseStatementNoShortIf':([457,506,548,554,566,569,570,578,581,],[483,483,483,483,483,483,483,483,483,]),'LocalVariableDeclarationStatement':([95,108,125,201,202,303,496,516,],[175,175,175,175,175,175,175,175,]),'ShiftExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,325,326,327,328,330,331,335,339,352,355,421,432,434,435,441,448,467,476,507,517,522,545,552,],[245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,394,395,396,397,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,]),'MethodBody':([107,],[198,]),'Name':([14,17,42,43,53,69,95,106,108,110,125,131,150,158,167,178,184,188,201,202,209,216,219,221,222,234,247,259,262,266,271,276,283,285,288,292,302,303,306,307,308,315,316,317,318,319,320,321,322,324,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,420,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[30,36,70,83,70,70,176,70,176,83,176,246,83,261,261,246,246,246,176,176,70,261,261,261,261,83,342,246,342,359,359,246,246,246,246,246,70,176,246,246,83,261,261,261,261,261,261,261,261,70,261,261,261,261,246,261,261,261,261,261,261,261,246,412,246,246,261,261,70,246,261,246,246,246,261,261,261,359,246,359,246,359,246,359,176,359,246,359,359,176,246,412,359,246,359,359,246,359,359,246,359,359,359,359,359,359,359,359,]),'FloatConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'MethodAddParentScope':([74,],[107,]),'SimpleName':([14,17,42,43,53,69,95,106,108,110,125,131,150,158,167,178,184,188,201,202,209,216,219,221,222,234,247,259,262,266,271,276,283,285,288,292,302,303,306,307,308,315,316,317,318,319,320,321,322,324,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,420,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[31,31,71,31,71,71,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PreDecrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,421,432,434,435,441,443,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[179,179,179,235,235,235,235,235,235,179,179,235,235,235,235,235,235,235,179,179,235,235,235,235,235,179,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,179,235,235,235,235,235,235,235,235,235,179,235,179,235,179,235,179,179,179,235,179,179,179,235,179,179,235,179,179,235,179,179,235,179,179,179,179,179,179,179,179,]),'CompilationUnit':([0,],[20,]),'ForStatementNoShortIf':([457,506,548,554,566,569,570,578,581,],[484,484,484,484,484,484,484,484,484,]),'MethodHeader':([42,53,],[74,74,]),'LabeledStatementNoShortIf':([457,506,548,554,566,569,570,578,581,],[486,486,486,486,486,486,486,486,486,]),'WhMark1':([148,481,],[256,505,]),'WhMark3':([494,561,],[513,568,]),'WhMark2':([452,547,],[473,554,]),'FieldAccess':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,473,476,491,496,506,507,509,510,516,517,520,521,522,525,541,545,548,550,552,554,560,565,566,569,570,578,581,],[165,165,165,165,264,264,165,165,165,165,165,264,264,264,264,165,165,165,165,165,165,165,165,165,165,165,165,165,264,264,264,264,264,264,264,264,264,264,264,264,165,264,264,264,264,264,264,264,165,165,165,165,264,264,165,264,165,165,165,264,264,264,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'TypeDeclarations':([0,4,22,37,],[23,28,38,49,]),'StatementWithoutTrailingSubstatement':([95,108,125,201,202,266,271,303,457,473,496,506,510,516,521,525,541,548,550,554,566,569,570,578,581,],[183,183,183,183,183,183,183,183,487,183,183,487,183,183,183,183,183,487,183,487,487,487,487,487,487,]),'DimExprs':([176,246,257,258,261,329,342,359,412,],[284,284,353,354,284,354,284,284,284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','parser.py',23),
  ('Literal -> IntConst','Literal',1,'p_Literal','parser.py',26),
  ('Literal -> FloatConst','Literal',1,'p_Literal','parser.py',27),
  ('Literal -> CharConst','Literal',1,'p_Literal','parser.py',28),
  ('Literal -> StringConst','Literal',1,'p_Literal','parser.py',29),
  ('Literal -> NullConst','Literal',1,'p_Literal','parser.py',30),
  ('IntConst -> INT_LITERAL','IntConst',1,'p_IntConst','parser.py',38),
  ('FloatConst -> FLOAT_LITERAL','FloatConst',1,'p_FloatConst','parser.py',47),
  ('CharConst -> CHAR_LITERAL','CharConst',1,'p_CharConst','parser.py',56),
  ('StringConst -> STRING_LITERAL','StringConst',1,'p_StringConst','parser.py',65),
  ('NullConst -> NULL','NullConst',1,'p_NullConst','parser.py',74),
  ('Type -> PrimitiveType','Type',1,'p_Type','parser.py',82),
  ('Type -> ReferenceType','Type',1,'p_Type','parser.py',83),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser.py',87),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','parser.py',88),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser.py',99),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser.py',100),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','parser.py',105),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','parser.py',106),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','parser.py',107),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','parser.py',108),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','parser.py',109),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','parser.py',116),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser.py',117),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser.py',125),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','parser.py',126),
  ('ClassType -> Name','ClassType',1,'p_ClassType','parser.py',131),
  ('ArrayType -> PrimitiveType Dims','ArrayType',2,'p_ArrayType','parser.py',137),
  ('ArrayType -> Name Dims','ArrayType',2,'p_ArrayType','parser.py',138),
  ('Name -> SimpleName','Name',1,'p_Name','parser.py',153),
  ('Name -> QualifiedName','Name',1,'p_Name','parser.py',154),
  ('SimpleName -> IDENTIFIER','SimpleName',1,'p_SimpleName','parser.py',159),
  ('QualifiedName -> Name DOT IDENTIFIER','QualifiedName',3,'p_QualifiedName','parser.py',166),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','parser.py',173),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',174),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',175),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',176),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','parser.py',177),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',178),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',179),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','parser.py',180),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','parser.py',186),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','parser.py',187),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','parser.py',193),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','parser.py',194),
  ('PackageDeclaration -> PACKAGE Name STMT_TERMINATOR','PackageDeclaration',3,'p_PackageDeclaration','parser.py',200),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',206),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',207),
  ('SingleTypeImportDeclaration -> IMPORT Name STMT_TERMINATOR','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','parser.py',213),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT STMT_TERMINATOR','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser.py',219),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser.py',225),
  ('TypeDeclaration -> STMT_TERMINATOR','TypeDeclaration',1,'p_TypeDeclaration','parser.py',226),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','parser.py',232),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','parser.py',233),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','parser.py',239),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','parser.py',240),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','parser.py',241),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','parser.py',242),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','parser.py',243),
  ('Modifier -> ABSTRACT','Modifier',1,'p_Modifier','parser.py',244),
  ('Modifier -> VOLATILE','Modifier',1,'p_Modifier','parser.py',245),
  ('Modifier -> SYNCHRONIZED','Modifier',1,'p_Modifier','parser.py',246),
  ('Modifier -> TRANSIENT','Modifier',1,'p_Modifier','parser.py',247),
  ('Modifier -> NATIVE','Modifier',1,'p_Modifier','parser.py',248),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER Super ClassBody','ClassDeclaration',5,'p_ClassDeclaration','parser.py',253),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',254),
  ('ClassDeclaration -> CLASS IDENTIFIER Super ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',255),
  ('ClassDeclaration -> CLASS IDENTIFIER ClassBody','ClassDeclaration',3,'p_ClassDeclaration','parser.py',256),
  ('Super -> EXTENDS ClassType','Super',2,'p_Super','parser.py',262),
  ('ClassBody -> L_CURLYBR R_CURLYBR','ClassBody',2,'p_ClassBody','parser.py',267),
  ('ClassBody -> L_CURLYBR ClassBodyDeclarations R_CURLYBR','ClassBody',3,'p_ClassBody','parser.py',268),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','parser.py',274),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','parser.py',275),
  ('ClassBodyDeclaration -> ClassMemberDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',281),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',282),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',283),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',289),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',290),
  ('FieldDeclaration -> Modifiers Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',4,'p_FieldDeclaration','parser.py',296),
  ('FieldDeclaration -> Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',3,'p_FieldDeclaration','parser.py',297),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','parser.py',303),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','parser.py',304),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','parser.py',314),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser.py',315),
  ('VariableDeclaratorId -> IDENTIFIER','VariableDeclaratorId',1,'p_VariableDeclaratorId','parser.py',392),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser.py',399),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser.py',400),
  ('MethodDeclaration -> MethodHeader MethodAddParentScope MethodBody','MethodDeclaration',3,'p_MethodDeclaration','parser.py',407),
  ('MethodAddParentScope -> <empty>','MethodAddParentScope',0,'p_MethodAddParentScope','parser.py',419),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',430),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',431),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',432),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',433),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',434),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',435),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',436),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',437),
  ('MethodDeclarator -> IDENTIFIER L_ROUNDBR MethodCreateScope R_ROUNDBR','MethodDeclarator',4,'p_MethodDeclarator','parser.py',464),
  ('MethodDeclarator -> IDENTIFIER L_ROUNDBR MethodCreateScope FormalParameterList R_ROUNDBR','MethodDeclarator',5,'p_MethodDeclarator','parser.py',465),
  ('MethodCreateScope -> <empty>','MethodCreateScope',0,'p_MethodCreateScope','parser.py',498),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','parser.py',505),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','parser.py',506),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser.py',515),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','parser.py',527),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','parser.py',533),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','parser.py',534),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser.py',540),
  ('MethodBody -> STMT_TERMINATOR','MethodBody',1,'p_MethodBody','parser.py',541),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','parser.py',547),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','parser.py',553),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',554),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',555),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','parser.py',556),
  ('ConstructorDeclarator -> SimpleName L_ROUNDBR FormalParameterList R_ROUNDBR','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser.py',562),
  ('ConstructorDeclarator -> SimpleName L_ROUNDBR R_ROUNDBR','ConstructorDeclarator',3,'p_ConstructorDeclarator','parser.py',563),
  ('ConstructorBody -> L_CURLYBR ExplicitConstructorInvocation BlockStatements R_CURLYBR','ConstructorBody',4,'p_ConstructorBody','parser.py',569),
  ('ConstructorBody -> L_CURLYBR ExplicitConstructorInvocation R_CURLYBR','ConstructorBody',3,'p_ConstructorBody','parser.py',570),
  ('ConstructorBody -> L_CURLYBR BlockStatements R_CURLYBR','ConstructorBody',3,'p_ConstructorBody','parser.py',571),
  ('ConstructorBody -> L_CURLYBR R_CURLYBR','ConstructorBody',2,'p_ConstructorBody','parser.py',572),
  ('ExplicitConstructorInvocation -> THIS L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',578),
  ('ExplicitConstructorInvocation -> THIS L_ROUNDBR R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',579),
  ('ExplicitConstructorInvocation -> SUPER L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',580),
  ('ExplicitConstructorInvocation -> SUPER L_ROUNDBR R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',581),
  ('ArrayInitializer -> L_CURLYBR VariableInitializers R_CURLYBR','ArrayInitializer',3,'p_ArrayInitializer','parser.py',586),
  ('ArrayInitializer -> L_CURLYBR R_CURLYBR','ArrayInitializer',2,'p_ArrayInitializer','parser.py',587),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','parser.py',594),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','parser.py',595),
  ('Block -> L_CURLYBR R_CURLYBR','Block',2,'p_Block','parser.py',600),
  ('Block -> L_CURLYBR BlockStatements R_CURLYBR','Block',3,'p_Block','parser.py',601),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser.py',607),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','parser.py',608),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser.py',613),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser.py',614),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration STMT_TERMINATOR','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser.py',621),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser.py',628),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','parser.py',695),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','parser.py',696),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser.py',697),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','parser.py',698),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','parser.py',699),
  ('Statement -> ForStatement','Statement',1,'p_Statement','parser.py',700),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',707),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',708),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',709),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',710),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',711),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',719),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',720),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',721),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',722),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',723),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',724),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',725),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',726),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',727),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',728),
  ('EmptyStatement -> STMT_TERMINATOR','EmptyStatement',1,'p_EmptyStatement','parser.py',735),
  ('LabeledStatement -> IDENTIFIER COLON Statement','LabeledStatement',3,'p_LabeledStatement','parser.py',741),
  ('LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser.py',747),
  ('ExpressionStatement -> StatementExpression STMT_TERMINATOR','ExpressionStatement',2,'p_ExpressionStatement','parser.py',753),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser.py',761),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',762),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',763),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',764),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',765),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser.py',766),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser.py',767),
  ('IfThenStatement -> IF L_ROUNDBR Expression R_ROUNDBR IfstartSc Statement IfendSc','IfThenStatement',7,'p_IfThenStatement','parser.py',775),
  ('IfThenElseStatement -> IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc Statement ElseEndSc','IfThenElseStatement',10,'p_IfThenElseStatement','parser.py',781),
  ('IfThenElseStatementNoShortIf -> IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc StatementNoShortIf ElseEndSc','IfThenElseStatementNoShortIf',10,'p_IfThenElseStatementNoShortIf','parser.py',787),
  ('IfstartSc -> <empty>','IfstartSc',0,'p_IfstartSc','parser.py',792),
  ('IfendSc -> <empty>','IfendSc',0,'p_IfendSc','parser.py',802),
  ('ElseStartSc -> <empty>','ElseStartSc',0,'p_ElseStartSc','parser.py',807),
  ('ElseEndSc -> <empty>','ElseEndSc',0,'p_ElseEndSc','parser.py',816),
  ('SwitchStatement -> SWITCH L_ROUNDBR Expression R_ROUNDBR SwMark2 SwitchBlock SwMark3','SwitchStatement',7,'p_SwitchStatement','parser.py',824),
  ('SwMark2 -> <empty>','SwMark2',0,'p_SwMark2','parser.py',832),
  ('SwMark3 -> <empty>','SwMark3',0,'p_SwMark3','parser.py',840),
  ('SwitchBlock -> L_CURLYBR R_CURLYBR','SwitchBlock',2,'p_SwitchBlock','parser.py',854),
  ('SwitchBlock -> L_CURLYBR SwitchBlockStatementGroups R_CURLYBR','SwitchBlock',3,'p_SwitchBlock','parser.py',855),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','parser.py',862),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','parser.py',863),
  ('SwitchBlockStatementGroup -> SwitchLabel BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser.py',879),
  ('SwitchLabel -> SwMark1 CASE ConstantExpression COLON','SwitchLabel',4,'p_SwitchLabel','parser.py',885),
  ('SwitchLabel -> SwMark1 DEFAULT COLON','SwitchLabel',3,'p_SwitchLabel','parser.py',886),
  ('SwMark1 -> <empty>','SwMark1',0,'p_SwMark1','parser.py',899),
  ('WhileStatement -> WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 Statement WhMark3','WhileStatement',8,'p_WhileStatement','parser.py',906),
  ('WhileStatementNoShortIf -> WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 StatementNoShortIf WhMark3','WhileStatementNoShortIf',8,'p_WhileStatementNoShortIf','parser.py',912),
  ('WhMark1 -> <empty>','WhMark1',0,'p_WhMark1','parser.py',917),
  ('WhMark2 -> <empty>','WhMark2',0,'p_WhMark2','parser.py',926),
  ('WhMark3 -> <empty>','WhMark3',0,'p_WhMark3','parser.py',932),
  ('DoStatement -> DO doWhMark1 Statement WHILE doWhMark2 L_ROUNDBR Expression R_ROUNDBR doWhMark3 STMT_TERMINATOR','DoStatement',10,'p_DoStatement','parser.py',939),
  ('doWhMark1 -> <empty>','doWhMark1',0,'p_doWhMark1','parser.py',944),
  ('doWhMark3 -> <empty>','doWhMark3',0,'p_doWhMark3','parser.py',953),
  ('doWhMark2 -> <empty>','doWhMark2',0,'p_doWhMark2','parser.py',959),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3','ForStatement',13,'p_ForStatement','parser.py',966),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3','ForStatement',12,'p_ForStatement','parser.py',967),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','parser.py',968),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 Statement FoMark5','ForStatement',10,'p_ForStatement','parser.py',969),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',13,'p_ForStatementNoShortIf','parser.py',975),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','parser.py',976),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','parser.py',977),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 ForExpression R_ROUNDBR FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',10,'p_ForStatementNoShortIf','parser.py',978),
  ('ForExpression -> Expression STMT_TERMINATOR','ForExpression',2,'p_ForExpression','parser.py',984),
  ('ForExpression -> STMT_TERMINATOR','ForExpression',1,'p_ForExpression','parser.py',985),
  ('FoMark0 -> <empty>','FoMark0',0,'p_FoMark0','parser.py',991),
  ('FoMark1 -> <empty>','FoMark1',0,'p_FoMark1','parser.py',996),
  ('FoMark2 -> <empty>','FoMark2',0,'p_FoMark2','parser.py',1005),
  ('FoMark6 -> <empty>','FoMark6',0,'p_FoMark6','parser.py',1011),
  ('FoMark4 -> <empty>','FoMark4',0,'p_FoMark4','parser.py',1016),
  ('FoMark3 -> <empty>','FoMark3',0,'p_FoMark3','parser.py',1022),
  ('FoMark5 -> <empty>','FoMark5',0,'p_FoMark5','parser.py',1028),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','parser.py',1035),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','parser.py',1036),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','parser.py',1042),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','parser.py',1048),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','parser.py',1049),
  ('BreakStatement -> BREAK IDENTIFIER STMT_TERMINATOR','BreakStatement',3,'p_BreakStatement','parser.py',1055),
  ('BreakStatement -> BREAK STMT_TERMINATOR','BreakStatement',2,'p_BreakStatement','parser.py',1056),
  ('ContinueStatement -> CONTINUE IDENTIFIER STMT_TERMINATOR','ContinueStatement',3,'p_ContinueStatement','parser.py',1064),
  ('ContinueStatement -> CONTINUE STMT_TERMINATOR','ContinueStatement',2,'p_ContinueStatement','parser.py',1065),
  ('ReturnStatement -> RETURN Expression STMT_TERMINATOR','ReturnStatement',3,'p_ReturnStatement','parser.py',1074),
  ('ReturnStatement -> RETURN STMT_TERMINATOR','ReturnStatement',2,'p_ReturnStatement','parser.py',1075),
  ('ThrowStatement -> THROW Expression STMT_TERMINATOR','ThrowStatement',3,'p_ThrowStatement','parser.py',1101),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','parser.py',1106),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','parser.py',1107),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','parser.py',1108),
  ('Catches -> CatchClause','Catches',1,'p_Catches','parser.py',1113),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','parser.py',1114),
  ('CatchClause -> CATCH L_ROUNDBR FormalParameter R_ROUNDBR Block','CatchClause',5,'p_CatchClause','parser.py',1119),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','parser.py',1124),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser.py',1129),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','parser.py',1130),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1136),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1137),
  ('PrimaryNoNewArray -> L_ROUNDBR Expression R_ROUNDBR','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser.py',1138),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1139),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1140),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1141),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1142),
  ('ClassInstanceCreationExpression -> NEW ClassType L_ROUNDBR R_ROUNDBR','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','parser.py',1151),
  ('ClassInstanceCreationExpression -> NEW ClassType L_ROUNDBR ArgumentList R_ROUNDBR','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','parser.py',1152),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','parser.py',1158),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','parser.py',1159),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',1169),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',1170),
  ('ArrayCreationExpression -> NEW ClassType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',1171),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',1172),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','parser.py',1184),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','parser.py',1185),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','parser.py',1194),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','parser.py',1204),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','parser.py',1205),
  ('FieldAccess -> Primary DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',1214),
  ('FieldAccess -> SUPER DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',1215),
  ('MethodInvocation -> Name L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',4,'p_MethodInvocation','parser.py',1221),
  ('MethodInvocation -> Name L_ROUNDBR R_ROUNDBR','MethodInvocation',3,'p_MethodInvocation','parser.py',1222),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',6,'p_MethodInvocation','parser.py',1223),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodInvocation',5,'p_MethodInvocation','parser.py',1224),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',6,'p_MethodInvocation','parser.py',1225),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodInvocation',5,'p_MethodInvocation','parser.py',1226),
  ('ArrayAccess -> Name DimExprs','ArrayAccess',2,'p_ArrayAccess','parser.py',1311),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser.py',1348),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','parser.py',1349),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',1350),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',1351),
  ('PostIncrementExpression -> PostfixExpression INCREMENT','PostIncrementExpression',2,'p_PostIncrementExpression','parser.py',1389),
  ('PostDecrementExpression -> PostfixExpression DECREMENT','PostDecrementExpression',2,'p_PostDecrementExpression','parser.py',1402),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',1416),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',1417),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',1418),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',1419),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser.py',1420),
  ('PreIncrementExpression -> INCREMENT UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','parser.py',1432),
  ('PreDecrementExpression -> DECREMENT UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','parser.py',1445),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',1459),
  ('UnaryExpressionNotPlusMinus -> BITWISE_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',1460),
  ('UnaryExpressionNotPlusMinus -> LOGICAL_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',1461),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',1462),
  ('CastExpression -> L_ROUNDBR PrimitiveType Dims R_ROUNDBR UnaryExpression','CastExpression',5,'p_CastExpression','parser.py',1476),
  ('CastExpression -> L_ROUNDBR PrimitiveType R_ROUNDBR UnaryExpression','CastExpression',4,'p_CastExpression','parser.py',1477),
  ('CastExpression -> L_ROUNDBR Expression R_ROUNDBR UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser.py',1478),
  ('CastExpression -> L_ROUNDBR Name Dims R_ROUNDBR UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser.py',1479),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser.py',1485),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',1486),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVIDE UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',1487),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',1488),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser.py',1532),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',1533),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',1534),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser.py',1579),
  ('ShiftExpression -> ShiftExpression L_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',1580),
  ('ShiftExpression -> ShiftExpression R_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',1581),
  ('ShiftExpression -> ShiftExpression RR_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',1582),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser.py',1616),
  ('RelationalExpression -> RelationalExpression LST ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1617),
  ('RelationalExpression -> RelationalExpression GRT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1618),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1619),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1620),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser.py',1621),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser.py',1695),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',1696),
  ('EqualityExpression -> EqualityExpression NOT_EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',1697),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','parser.py',1750),
  ('AndExpression -> AndExpression BITWISE_AND EqualityExpression','AndExpression',3,'p_AndExpression','parser.py',1751),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','parser.py',1782),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BITWISE_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','parser.py',1783),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','parser.py',1815),
  ('InclusiveOrExpression -> InclusiveOrExpression BITWISE_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','parser.py',1816),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','parser.py',1848),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGICAL_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','parser.py',1849),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','parser.py',1884),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGICAL_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','parser.py',1885),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','parser.py',1922),
  ('ConditionalExpression -> ConditionalOrExpression QMARK Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','parser.py',1923),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','parser.py',1931),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','parser.py',1932),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','parser.py',1940),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','parser.py',1961),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',1962),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',1963),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1969),
  ('AssignmentOperator -> MULT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1970),
  ('AssignmentOperator -> DIVIDE_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1971),
  ('AssignmentOperator -> MOD_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1972),
  ('AssignmentOperator -> PLUS_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1973),
  ('AssignmentOperator -> MINUS_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1974),
  ('AssignmentOperator -> LSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1975),
  ('AssignmentOperator -> RSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1976),
  ('AssignmentOperator -> RRSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1977),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','parser.py',1985),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','parser.py',1991),
]
