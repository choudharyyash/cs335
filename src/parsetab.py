
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BLOCK_COMMENT BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_LITERAL CLASS COLON COMMA CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_LITERAL FOR GEQ GRT IDENTIFIER IF IMPORT INCREMENT INSTANCEOF INT INT_LITERAL LEQ LINE_COMMENT LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG LSHIFT_ASSIGN LST L_CURLYBR L_ROUNDBR L_SHIFT L_SQBR MINUS MINUS_ASSIGN MODULO MOD_ASSIGN MULT MULT_ASSIGN NATIVE NEW NOT_EQUAL NULL PACKAGE PLUS PLUS_ASSIGN PRIVATE PROTECTED PUBLIC QMARK RETURN RRSHIFT_ASSIGN RR_SHIFT RSHIFT_ASSIGN R_CURLYBR R_ROUNDBR R_SHIFT R_SQBR SHORT STATIC STMT_TERMINATOR STRING_LITERAL SUPER SWITCH SYNCHRONIZED THIS THROW THROWS TRANSIENT TRY VOID VOLATILE WHILEGoal : CompilationUnit Type : PrimitiveType \n            | ReferenceType  Literal :   INT_LITERAL\n                  | FLOAT_LITERAL\n                  | CHAR_LITERAL\n                  | STRING_LITERAL\n                  | NULL\n     PrimitiveType :    NumericType\n                         | BOOLEAN\n     NumericType :   IntegralType\n                      | FloatingPointType\n     IntegralType :    BYTE\n                        | SHORT\n                        | INT\n                        | LONG\n                        | CHAR\n     FloatingPointType :   FLOAT\n                            | DOUBLE\n     ReferenceType :   ArrayType\n                        | ClassType\n     ClassType : Name\n     ArrayType :    PrimitiveType L_SQBR R_SQBR\n                     | Name L_SQBR R_SQBR\n                     | ArrayType L_SQBR R_SQBR\n     Name :    SimpleName\n                | QualifiedName  SimpleName : IDENTIFIER QualifiedName : Name DOT IDENTIFIER\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |\n    \n    ImportDeclarations : ImportDeclaration\n    | ImportDeclarations ImportDeclaration\n    \n    TypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclaration\n    \n    PackageDeclaration : PACKAGE Name STMT_TERMINATOR\n    \n    ImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclaration\n    \n    SingleTypeImportDeclaration : IMPORT Name STMT_TERMINATOR\n    \n    TypeImportOnDemandDeclaration : IMPORT Name DOT MULT STMT_TERMINATOR\n    \n    TypeDeclaration : ClassDeclaration\n    | STMT_TERMINATOR\n    \n    Modifiers : Modifier\n    | Modifiers Modifier\n    \n    Modifier : STATIC\n    | FINAL\n    | PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | ABSTRACT\n    | VOLATILE\n    | SYNCHRONIZED\n    | TRANSIENT\n    | NATIVE\n    \n    ClassDeclaration : Modifiers CLASS IDENTIFIER Super ClassBody\n    | Modifiers CLASS IDENTIFIER ClassBody\n    | CLASS IDENTIFIER Super ClassBody\n    | CLASS IDENTIFIER ClassBody\n    \n    Super : EXTENDS ClassType\n    \n    ClassBody : L_CURLYBR R_CURLYBR\n    | L_CURLYBR ClassBodyDeclarations R_CURLYBR\n    \n    ClassBodyDeclarations : ClassBodyDeclaration\n    | ClassBodyDeclarations ClassBodyDeclaration\n    \n    ClassBodyDeclaration : ClassMemberDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    \n    ClassMemberDeclaration : FieldDeclaration\n    | MethodDeclaration\n    \n    FieldDeclaration : Modifiers Type VariableDeclarators STMT_TERMINATOR\n    | Type VariableDeclarators STMT_TERMINATOR\n    \n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclarator\n    \n    VariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializer\n    \n    VariableDeclaratorId : IDENTIFIER\n    | VariableDeclaratorId L_SQBR R_SQBR\n    \n    VariableInitializer : Expression\n    | ArrayInitializer\n    \n    MethodDeclaration : MethodHeader MethodBody\n    \n    MethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Type MethodDeclarator Throws\n    | Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator\n    | VOID MethodDeclarator Throws\n    | VOID MethodDeclarator\n    \n    MethodDeclarator : IDENTIFIER L_ROUNDBR R_ROUNDBR\n    | IDENTIFIER L_ROUNDBR FormalParameterList R_ROUNDBR\n    \n    FormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameter\n    \n    FormalParameter : Type VariableDeclaratorId\n    \n    Throws : THROWS ClassTypeList\n    \n    ClassTypeList : ClassType\n    | ClassTypeList COMMA ClassType\n    \n    MethodBody : Block\n    | STMT_TERMINATOR\n    \n    StaticInitializer : STATIC Block\n    \n    ConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBody\n    \n    ConstructorDeclarator : SimpleName L_ROUNDBR FormalParameterList R_ROUNDBR\n    | SimpleName L_ROUNDBR R_ROUNDBR\n    \n    ConstructorBody : L_CURLYBR ExplicitConstructorInvocation BlockStatements R_CURLYBR\n    | L_CURLYBR ExplicitConstructorInvocation R_CURLYBR\n    | L_CURLYBR BlockStatements R_CURLYBR\n    | L_CURLYBR R_CURLYBR\n    \n    ExplicitConstructorInvocation : THIS L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR\n    | THIS L_ROUNDBR R_ROUNDBR STMT_TERMINATOR\n    | SUPER L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR\n    | SUPER L_ROUNDBR R_ROUNDBR STMT_TERMINATOR\n    \n    ArrayInitializer : L_CURLYBR VariableInitializers R_CURLYBR\n    | L_CURLYBR R_CURLYBR\n    \n    VariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializer\n    \n    Block : L_CURLYBR R_CURLYBR\n    | L_CURLYBR BlockStatements R_CURLYBR\n    \n    BlockStatements : BlockStatement\n    | BlockStatements BlockStatement\n    \n    BlockStatement : LocalVariableDeclarationStatement\n    | Statement\n    \n    LocalVariableDeclarationStatement : LocalVariableDeclaration STMT_TERMINATOR\n    \n    LocalVariableDeclaration : Type VariableDeclarators\n    \n    Statement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatement\n    \n    StatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIf\n    \n    StatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatement\n    \n    EmptyStatement : STMT_TERMINATOR\n    \n    LabeledStatement : IDENTIFIER COLON Statement\n    \n    LabeledStatementNoShortIf : IDENTIFIER COLON StatementNoShortIf\n    \n    ExpressionStatement : StatementExpression STMT_TERMINATOR\n    \n    StatementExpression : Assignment\n    | PreIncrementExpression\n    | PreDecrementExpression\n    | PostIncrementExpression\n    | PostDecrementExpression\n    | MethodInvocation\n    | ClassInstanceCreationExpression\n    \n    IfThenStatement : IF L_ROUNDBR Expression R_ROUNDBR Statement\n    \n    IfThenElseStatement : IF L_ROUNDBR Expression R_ROUNDBR StatementNoShortIf ELSE Statement\n    \n    IfThenElseStatementNoShortIf : IF L_ROUNDBR Expression R_ROUNDBR StatementNoShortIf ELSE StatementNoShortIf\n    \n    SwitchStatement : SWITCH L_ROUNDBR Expression R_ROUNDBR SwitchBlock\n    \n    SwitchBlock : L_CURLYBR R_CURLYBR\n    | L_CURLYBR SwitchBlockStatementGroups SwitchLabels R_CURLYBR\n    | L_CURLYBR SwitchBlockStatementGroups R_CURLYBR\n    | L_CURLYBR SwitchLabels R_CURLYBR\n    \n    SwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroup\n    \n    SwitchBlockStatementGroup : SwitchLabels BlockStatements\n    \n    SwitchLabels : SwitchLabel\n    | SwitchLabels SwitchLabel\n    \n    SwitchLabel : CASE ConstantExpression COLON\n    | DEFAULT COLON\n    \n    WhileStatement : WHILE L_ROUNDBR Expression R_ROUNDBR Statement\n    \n    WhileStatementNoShortIf : WHILE L_ROUNDBR Expression R_ROUNDBR StatementNoShortIf\n    \n    DoStatement : DO Statement WHILE L_ROUNDBR Expression R_ROUNDBR STMT_TERMINATOR\n    \n    ForStatement : FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR Statement\n    | FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR Statement\n    | FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR Statement\n    | FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR Statement\n    | FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR Statement\n    | FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR Statement\n    | FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR Statement\n    | FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR Statement\n    \n    ForStatementNoShortIf : FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf\n    | FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR StatementNoShortIf\n    \n    ForInit : StatementExpressionList\n    | LocalVariableDeclaration\n    \n    ForUpdate : StatementExpressionList\n    \n    StatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpression\n    \n    BreakStatement : BREAK IDENTIFIER STMT_TERMINATOR\n    | BREAK STMT_TERMINATOR\n    \n    ContinueStatement : CONTINUE IDENTIFIER STMT_TERMINATOR\n    | CONTINUE STMT_TERMINATOR\n    \n    ReturnStatement : RETURN Expression STMT_TERMINATOR\n    | RETURN STMT_TERMINATOR\n    \n    ThrowStatement : THROW Expression STMT_TERMINATOR\n    \n    TryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block Finally\n    \n    Catches : CatchClause\n    | Catches CatchClause\n    \n    CatchClause : CATCH L_ROUNDBR FormalParameter R_ROUNDBR Block\n    \n    Finally : FINALLY Block\n    \n    Primary : PrimaryNoNewArray\n    | ArrayCreationExpression\n    \n    PrimaryNoNewArray : Literal\n    | THIS\n    | L_ROUNDBR Expression R_ROUNDBR\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccess\n    \n    ClassInstanceCreationExpression : NEW ClassType L_ROUNDBR R_ROUNDBR\n    | NEW ClassType L_ROUNDBR ArgumentList R_ROUNDBR\n    \n    ArgumentList : Expression\n    | ArgumentList COMMA Expression\n    \n    ArrayCreationExpression : NEW PrimitiveType DimExprs Dims\n    | NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs Dims\n    | NEW ClassType DimExprs\n    \n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    \n    DimExpr : L_SQBR Expression R_SQBR\n    \n    Dims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBR\n    \n    FieldAccess : Primary DOT IDENTIFIER\n    | SUPER DOT IDENTIFIER\n    \n    MethodInvocation : Name L_ROUNDBR ArgumentList R_ROUNDBR\n    | Name L_ROUNDBR R_ROUNDBR\n    | Primary DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR\n    | Primary DOT IDENTIFIER L_ROUNDBR R_ROUNDBR\n    | SUPER DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR\n    | SUPER DOT IDENTIFIER L_ROUNDBR R_ROUNDBR\n    \n    ArrayAccess : Name L_SQBR Expression R_SQBR\n    | PrimaryNoNewArray L_SQBR Expression R_SQBR\n    \n    PostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpression\n    \n    PostIncrementExpression : PostfixExpression INCREMENT\n    \n    PostDecrementExpression : PostfixExpression DECREMENT\n    \n    UnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinus\n    \n    PreIncrementExpression : INCREMENT UnaryExpression\n    \n    PreDecrementExpression : DECREMENT UnaryExpression\n    \n    UnaryExpressionNotPlusMinus : PostfixExpression\n    | BITWISE_NOT UnaryExpression\n    | LOGICAL_NOT UnaryExpression\n    | CastExpression\n    \n    CastExpression : L_ROUNDBR PrimitiveType Dims R_ROUNDBR UnaryExpression\n    | L_ROUNDBR PrimitiveType R_ROUNDBR UnaryExpression\n    | L_ROUNDBR Expression R_ROUNDBR UnaryExpressionNotPlusMinus\n    | L_ROUNDBR Name Dims R_ROUNDBR UnaryExpressionNotPlusMinus\n    \n    MultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIVIDE UnaryExpression\n    | MultiplicativeExpression MODULO UnaryExpression\n    \n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpression\n    \n    ShiftExpression : AdditiveExpression\n    | ShiftExpression L_SHIFT AdditiveExpression\n    | ShiftExpression R_SHIFT AdditiveExpression\n    | ShiftExpression RR_SHIFT AdditiveExpression\n    \n    RelationalExpression : ShiftExpression\n    | RelationalExpression LST ShiftExpression\n    | RelationalExpression GRT ShiftExpression\n    | RelationalExpression LEQ ShiftExpression\n    | RelationalExpression GEQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceType\n    \n    EqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOT_EQUAL RelationalExpression\n    \n    AndExpression : EqualityExpression\n    | AndExpression BITWISE_AND EqualityExpression\n    \n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BITWISE_XOR AndExpression\n    \n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BITWISE_OR ExclusiveOrExpression\n    \n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGICAL_AND InclusiveOrExpression\n    \n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGICAL_OR ConditionalAndExpression\n    \n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QMARK Expression COLON ConditionalExpression\n    \n    AssignmentExpression : ConditionalExpression\n    | Assignment\n    \n    Assignment : LeftHandSide AssignmentOperator AssignmentExpression\n    \n    LeftHandSide : Name\n    | FieldAccess\n    | ArrayAccess\n    \n    AssignmentOperator : ASSIGN\n    | MULT_ASSIGN\n    | DIVIDE_ASSIGN\n    | MOD_ASSIGN\n    | PLUS_ASSIGN\n    | MINUS_ASSIGN\n    | LSHIFT_ASSIGN\n    | RSHIFT_ASSIGN\n    | RRSHIFT_ASSIGN\n    \n    Expression : AssignmentExpression\n    \n    ConstantExpression : Expression\n    '
    
_lr_action_items = {'LEQ':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,220,222,224,225,229,231,232,234,237,241,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,396,397,398,399,400,406,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,311,-248,-276,-221,-273,-251,-250,-255,-249,-258,-223,-269,-216,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,311,311,-272,-271,-270,-220,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'VOID':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,107,108,109,113,170,182,190,200,202,208,295,297,302,303,379,],[-58,-57,-56,-54,-51,-52,-60,-55,-49,-59,-53,-50,54,54,-72,-51,-71,-70,-68,-74,101,-73,-69,-104,-85,-103,-102,-108,-123,-76,-106,-114,-107,-124,-75,-105,-112,-113,-111,]),'PROTECTED':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,95,107,108,109,113,114,170,182,190,200,202,208,295,297,302,303,379,],[7,-58,-57,7,-40,-56,-54,-51,-44,-52,-60,-38,-55,7,-43,-49,-48,7,7,-59,-47,-53,-39,7,-50,7,7,-41,-45,7,-64,-42,7,7,-72,-51,-71,-70,-66,-68,-74,7,-73,-63,-62,-46,-67,-69,-104,-85,-103,-102,-108,-61,-123,-76,-106,-114,-107,-124,-75,-105,-112,-113,-111,]),'MINUS':([29,31,32,50,126,127,128,132,136,141,151,153,155,159,163,164,165,169,174,180,185,209,210,211,212,213,215,216,219,220,222,224,225,227,228,229,231,232,233,234,237,240,241,245,254,257,258,259,260,261,262,263,268,272,273,274,275,276,277,278,279,280,281,282,283,285,290,304,305,310,311,312,313,315,316,317,319,320,321,322,323,324,325,326,327,328,329,332,334,335,336,337,338,339,340,347,356,357,358,359,360,369,385,392,393,394,398,399,400,404,406,407,412,413,414,415,417,424,427,428,429,430,432,434,435,436,437,438,440,441,447,448,449,451,452,463,465,466,483,488,489,490,499,501,510,512,513,533,544,],[-27,-26,-28,-29,-216,-219,-6,219,-217,-224,-218,-5,219,-7,-222,-4,219,-8,219,219,219,219,-253,-252,-261,-264,-248,316,219,-221,-273,-251,-250,219,219,-255,-249,-258,219,-223,-269,219,-216,-254,219,219,-224,-249,219,-259,-222,-248,-260,-310,-313,-312,219,-315,-314,-309,-308,-311,-307,219,219,219,219,219,219,219,219,219,219,219,219,219,-257,219,219,219,219,219,219,219,-256,-262,219,-249,219,-263,219,219,219,219,219,219,219,-230,-233,-232,219,-241,-247,-238,-274,-275,-272,-271,-270,219,-220,219,316,316,316,-239,219,219,219,-229,-234,-231,-225,-220,219,-246,-240,219,219,219,219,-236,-266,219,-267,-243,-235,-226,-245,-237,-265,-268,-242,219,219,219,-244,219,219,]),'L_CURLYBR':([29,31,32,33,45,46,50,58,74,76,83,84,87,91,94,97,103,110,111,115,119,120,123,125,129,130,134,135,138,140,142,143,149,150,152,157,158,161,166,167,170,172,177,178,183,185,186,188,189,194,197,198,203,204,205,207,208,238,253,264,265,267,271,290,294,296,299,301,307,333,348,349,350,351,354,363,364,374,384,420,421,422,425,433,439,441,444,446,458,464,468,471,477,485,486,492,494,496,497,498,502,504,505,509,511,514,516,517,518,519,520,521,522,523,527,528,529,530,531,534,538,539,540,541,542,543,547,548,549,553,558,560,563,564,565,568,570,574,],[-27,-26,-28,42,42,42,-29,94,94,110,-22,-65,42,-93,94,-89,110,94,110,-92,-144,-128,-125,94,-143,-149,-147,-133,94,-134,-142,-150,-136,-148,-145,-146,-151,-135,94,-132,-123,-127,-152,-131,-88,290,-91,-87,110,-110,94,94,-100,-99,-94,-126,-124,-207,-205,94,-129,-203,-155,290,-90,-86,-109,94,-95,-206,-209,-211,-212,94,-204,-153,-202,-208,-101,-210,-213,-215,94,467,94,290,-116,-118,94,-178,-166,-163,-131,-115,-117,94,94,-188,94,94,-174,-167,94,94,94,94,-185,94,-186,94,-187,-214,-169,94,-177,94,-175,-170,-180,-164,-184,94,-183,-182,-168,-176,94,94,-181,94,94,94,94,94,94,94,94,94,]),'LONG':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,94,95,105,107,108,109,110,113,116,119,120,123,125,129,130,134,135,140,142,143,147,149,150,152,157,158,161,167,170,172,177,178,182,190,197,198,200,202,207,208,218,233,238,249,253,260,265,267,271,295,297,300,301,302,303,309,333,348,349,350,354,363,364,374,379,420,421,422,423,444,446,464,468,471,477,485,486,496,502,504,505,508,516,518,520,521,522,523,527,528,529,530,531,534,538,540,541,542,543,549,],[-58,-57,-56,-54,-51,-52,-60,-55,-49,-59,-53,-50,59,59,-72,-51,-71,-70,-68,-74,59,-73,-69,59,-104,59,-85,-103,-102,59,-108,59,-144,-128,-125,59,-143,-149,-147,-133,-134,-142,-150,59,-136,-148,-145,-146,-151,-135,-132,-123,-127,-152,-131,-76,-106,59,59,-114,-107,-126,-124,59,59,-207,59,-205,59,-129,-203,-155,-75,-105,59,59,-112,-113,59,-206,-209,-211,-212,-204,-153,-202,-208,-111,-210,-213,-215,59,-116,-118,-178,-166,-163,-131,-115,-117,-188,-174,-167,59,59,-185,-186,-187,-214,-169,59,-177,59,-175,-170,-180,-164,-184,-183,-182,-168,-176,-181,]),'DEFAULT':([119,120,123,129,130,134,135,140,142,143,149,150,152,157,158,161,167,170,172,177,178,207,208,238,253,265,267,271,333,348,349,350,354,363,364,374,420,421,422,464,467,468,471,477,496,500,502,504,505,506,516,518,520,521,522,523,524,527,528,529,530,531,534,538,540,541,542,543,549,],[-144,-128,-125,-143,-149,-147,-133,-134,-142,-150,-136,-148,-145,-146,-151,-135,-132,-123,-127,-152,-131,-126,-124,-207,-205,-129,-203,-155,-206,-209,-211,-212,-204,-153,-202,-208,-210,-213,-215,-178,503,-166,-163,-131,-188,503,-174,-167,503,-171,-185,-186,-187,-214,-169,503,-172,-177,-173,-175,-170,-180,-164,-184,-183,-182,-168,-176,-181,]),'PLUS':([29,31,32,50,126,127,128,132,136,141,151,153,155,159,163,164,165,169,174,180,185,209,210,211,212,213,215,216,219,220,222,224,225,227,228,229,231,232,233,234,237,240,241,245,254,257,258,259,260,261,262,263,268,272,273,274,275,276,277,278,279,280,281,282,283,285,290,304,305,310,311,312,313,315,316,317,319,320,321,322,323,324,325,326,327,328,329,332,334,335,336,337,338,339,340,347,356,357,358,359,360,369,385,392,393,394,398,399,400,404,406,407,412,413,414,415,417,424,427,428,429,430,432,434,435,436,437,438,440,441,447,448,449,451,452,463,465,466,483,488,489,490,499,501,510,512,513,533,544,],[-27,-26,-28,-29,-216,-219,-6,227,-217,-224,-218,-5,227,-7,-222,-4,227,-8,227,227,227,227,-253,-252,-261,-264,-248,315,227,-221,-273,-251,-250,227,227,-255,-249,-258,227,-223,-269,227,-216,-254,227,227,-224,-249,227,-259,-222,-248,-260,-310,-313,-312,227,-315,-314,-309,-308,-311,-307,227,227,227,227,227,227,227,227,227,227,227,227,227,-257,227,227,227,227,227,227,227,-256,-262,227,-249,227,-263,227,227,227,227,227,227,227,-230,-233,-232,227,-241,-247,-238,-274,-275,-272,-271,-270,227,-220,227,315,315,315,-239,227,227,227,-229,-234,-231,-225,-220,227,-246,-240,227,227,227,227,-236,-266,227,-267,-243,-235,-226,-245,-237,-265,-268,-242,227,227,227,-244,227,227,]),'IMPORT':([0,4,9,12,18,22,27,37,41,47,88,],[14,14,-44,-38,-43,14,-39,14,-45,-42,-46,]),'R_SQBR':([29,31,32,50,70,72,78,93,104,106,117,126,127,128,136,141,151,153,159,163,164,169,184,191,196,210,211,212,213,214,215,216,217,220,221,222,223,224,225,226,229,230,231,232,234,236,237,239,241,242,243,244,245,258,259,261,262,263,268,282,308,319,327,328,335,357,358,359,366,367,369,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,403,406,407,409,410,411,412,413,414,415,426,427,428,429,430,432,434,436,437,448,449,450,452,463,465,466,483,487,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,117,191,196,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,289,-24,-25,-253,-252,-261,-264,-286,-248,-276,-291,-221,-289,-273,-302,-251,-250,-299,-255,-316,-249,-258,-223,-301,-269,-295,-216,-293,-297,-280,-254,-224,-249,-259,-222,-248,-260,191,385,-257,-256,-262,-263,-230,-233,-232,-303,436,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,-290,-288,-287,-272,-271,-270,-298,448,-220,448,-294,-292,-296,-279,-278,-277,-239,465,448,-229,-234,-231,-225,-220,-246,-240,-236,-266,488,-267,-243,-235,-226,-245,-300,-237,-265,-268,-242,-244,]),'R_ROUNDBR':([29,31,32,50,52,57,59,62,64,66,70,72,75,77,78,79,80,81,105,116,117,118,121,122,124,126,127,128,136,139,141,148,151,153,159,163,164,169,175,191,192,195,196,206,210,211,212,213,214,215,216,217,220,221,222,223,224,225,226,229,230,231,232,234,236,237,239,241,242,243,244,245,248,258,259,261,262,263,268,283,284,289,298,304,305,319,327,328,330,331,332,335,342,355,357,358,359,360,361,362,366,368,369,370,372,378,380,382,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,405,406,408,409,410,411,412,413,414,415,419,424,428,429,430,431,432,434,436,437,440,448,449,452,454,456,457,459,460,461,462,463,465,466,469,470,482,483,487,488,489,490,491,493,495,499,513,515,535,537,546,551,552,554,557,559,561,566,],[-27,-26,-28,-29,-14,-17,-16,-11,-9,-10,-22,-20,-12,-15,-21,-18,-13,-19,194,205,-23,-160,-156,-159,-157,-216,-219,-6,-217,-161,-224,-162,-218,-5,-7,-222,-4,-8,-158,-24,-96,299,-25,307,-253,-252,-261,-264,-286,-248,-276,-291,-221,-289,-273,-302,-251,-250,-299,-255,-316,-249,-258,-223,-301,-269,-295,-216,-293,-297,-280,-254,-81,-224,-249,-259,-222,-248,-260,369,371,-82,-98,381,383,-257,-256,-262,404,406,-249,-263,-200,425,-230,-233,-232,432,433,434,-303,437,-241,-227,439,-97,443,445,-247,-285,-282,-283,-284,-281,-238,-274,-275,-290,-288,-287,-272,-271,-270,-298,451,-220,453,-294,-292,-296,-279,-278,-277,-239,458,463,-229,-234,-231,466,-225,-220,-246,-240,483,-236,-266,-267,-201,492,494,-199,497,498,499,-243,-235,-226,507,-228,513,-245,-300,-237,-265,-268,514,517,519,-242,-244,539,547,548,553,558,560,563,565,568,570,574,]),'MODULO':([29,31,32,50,126,127,128,136,141,151,153,159,163,164,169,210,211,212,213,215,220,222,224,225,229,231,232,234,237,241,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,392,393,394,398,399,400,406,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-253,-252,-261,-264,-248,-221,322,-251,-250,-255,-249,-258,-223,-269,-216,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-238,322,322,-272,-271,-270,-220,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'EXTENDS':([33,46,],[43,43,]),'BITWISE_NOT':([132,155,165,174,180,185,209,219,227,228,233,240,254,257,260,272,273,274,275,276,277,278,279,280,281,282,283,285,290,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,417,424,427,434,435,438,440,441,447,451,453,501,510,512,533,544,],[228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,-310,-313,-312,228,-315,-314,-309,-308,-311,-307,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,]),'BITWISE_XOR':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,217,220,221,222,224,225,229,231,232,234,237,241,242,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,406,409,410,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,-286,-248,-276,-291,-221,-289,-273,-251,-250,-255,-249,-258,-223,-269,-216,336,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,-290,-288,-287,-272,-271,-270,-220,336,-292,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'LOGICAL_NOT':([132,155,165,174,180,185,209,219,227,228,233,240,254,257,260,272,273,274,275,276,277,278,279,280,281,282,283,285,290,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,417,424,427,434,435,438,440,441,447,451,453,501,510,512,533,544,],[240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,-310,-313,-312,240,-315,-314,-309,-308,-311,-307,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,]),'THIS':([94,110,119,120,123,125,129,130,132,134,135,140,142,143,149,150,152,155,157,158,161,165,166,167,170,172,174,177,178,180,185,197,198,207,208,209,219,227,228,233,238,240,249,253,254,257,260,264,265,267,271,272,273,274,275,276,277,278,279,280,281,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,333,334,336,337,338,339,340,347,348,349,350,354,356,360,363,364,374,404,406,407,416,417,419,420,421,422,424,425,427,434,435,438,439,440,441,444,446,447,451,453,456,457,458,464,468,471,477,485,486,491,492,494,496,497,501,502,504,505,508,509,510,511,512,514,516,517,518,519,520,521,522,523,527,528,529,530,531,533,534,538,539,540,541,542,543,544,546,547,548,549,551,552,553,557,558,560,563,564,565,568,570,574,],[127,199,-144,-128,-125,127,-143,-149,127,-147,-133,-134,-142,-150,-136,-148,-145,127,-146,-151,-135,127,127,-132,-123,-127,127,-152,-131,127,127,127,127,-126,-124,127,127,127,127,127,-207,127,127,-205,127,127,127,127,-129,-203,-155,-310,-313,-312,127,-315,-314,-309,-308,-311,-307,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-206,127,127,127,127,127,127,127,-209,-211,-212,-204,127,127,-153,-202,-208,127,127,127,127,127,127,-210,-213,-215,127,127,127,127,127,127,127,127,127,-116,-118,127,127,127,127,127,127,-178,-166,-163,-131,-115,-117,127,127,127,-188,127,127,-174,-167,127,127,127,127,127,127,127,-185,127,-186,127,-187,-214,-169,127,-177,127,-175,-170,-180,127,-164,-184,127,-183,-182,-168,-176,127,127,127,127,-181,127,127,127,127,127,127,127,127,127,127,127,127,]),'DOUBLE':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,94,95,105,107,108,109,110,113,116,119,120,123,125,129,130,134,135,140,142,143,147,149,150,152,157,158,161,167,170,172,177,178,182,190,197,198,200,202,207,208,218,233,238,249,253,260,265,267,271,295,297,300,301,302,303,309,333,348,349,350,354,363,364,374,379,420,421,422,423,444,446,464,468,471,477,485,486,496,502,504,505,508,516,518,520,521,522,523,527,528,529,530,531,534,538,540,541,542,543,549,],[-58,-57,-56,-54,-51,-52,-60,-55,-49,-59,-53,-50,81,81,-72,-51,-71,-70,-68,-74,81,-73,-69,81,-104,81,-85,-103,-102,81,-108,81,-144,-128,-125,81,-143,-149,-147,-133,-134,-142,-150,81,-136,-148,-145,-146,-151,-135,-132,-123,-127,-152,-131,-76,-106,81,81,-114,-107,-126,-124,81,81,-207,81,-205,81,-129,-203,-155,-75,-105,81,81,-112,-113,81,-206,-209,-211,-212,-204,-153,-202,-208,-111,-210,-213,-215,81,-116,-118,-178,-166,-163,-131,-115,-117,-188,-174,-167,81,81,-185,-186,-187,-214,-169,81,-177,81,-175,-170,-180,-164,-184,-183,-182,-168,-176,-181,]),'CHAR_LITERAL':([94,110,119,120,123,125,129,130,132,134,135,140,142,143,149,150,152,155,157,158,161,165,166,167,170,172,174,177,178,180,185,197,198,207,208,209,219,227,228,233,238,240,249,253,254,257,260,264,265,267,271,272,273,274,275,276,277,278,279,280,281,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,333,334,336,337,338,339,340,347,348,349,350,354,356,360,363,364,374,404,406,407,416,417,419,420,421,422,424,425,427,434,435,438,439,440,441,444,446,447,451,453,456,457,458,464,468,471,477,485,486,491,492,494,496,497,501,502,504,505,508,509,510,511,512,514,516,517,518,519,520,521,522,523,527,528,529,530,531,533,534,538,539,540,541,542,543,544,546,547,548,549,551,552,553,557,558,560,563,564,565,568,570,574,],[128,128,-144,-128,-125,128,-143,-149,128,-147,-133,-134,-142,-150,-136,-148,-145,128,-146,-151,-135,128,128,-132,-123,-127,128,-152,-131,128,128,128,128,-126,-124,128,128,128,128,128,-207,128,128,-205,128,128,128,128,-129,-203,-155,-310,-313,-312,128,-315,-314,-309,-308,-311,-307,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-206,128,128,128,128,128,128,128,-209,-211,-212,-204,128,128,-153,-202,-208,128,128,128,128,128,128,-210,-213,-215,128,128,128,128,128,128,128,128,128,-116,-118,128,128,128,128,128,128,-178,-166,-163,-131,-115,-117,128,128,128,-188,128,128,-174,-167,128,128,128,128,128,128,128,-185,128,-186,128,-187,-214,-169,128,-177,128,-175,-170,-180,128,-164,-184,128,-183,-182,-168,-176,128,128,128,128,-181,128,128,128,128,128,128,128,128,128,128,128,128,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,44,47,49,65,85,86,88,89,114,],[15,-58,-57,15,-40,-56,-54,-51,-44,-52,-60,-38,-55,35,-43,-49,-48,15,15,-59,-47,-53,-39,15,-50,15,15,-41,-45,-64,-42,15,-66,-63,-62,-46,-67,-61,]),'TRANSIENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,95,107,108,109,113,114,170,182,190,200,202,208,295,297,302,303,379,],[24,-58,-57,24,-40,-56,-54,-51,-44,-52,-60,-38,-55,24,-43,-49,-48,24,24,-59,-47,-53,-39,24,-50,24,24,-41,-45,24,-64,-42,24,24,-72,-51,-71,-70,-66,-68,-74,24,-73,-63,-62,-46,-67,-69,-104,-85,-103,-102,-108,-61,-123,-76,-106,-114,-107,-124,-75,-105,-112,-113,-111,]),'R_SHIFT':([29,31,32,50,126,127,128,136,141,151,153,159,163,164,169,210,211,212,213,215,216,220,222,224,225,229,231,232,234,237,241,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,388,389,390,391,392,393,394,398,399,400,406,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-253,-252,-261,-264,-248,-276,-221,-273,-251,-250,-255,-249,-258,-223,-269,-216,339,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,339,339,339,339,-238,-274,-275,-272,-271,-270,-220,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'MULT_ASSIGN':([29,31,32,50,141,156,163,171,173,231,269,332,343,353,373,385,392,415,436,476,],[-27,-26,-28,-29,-306,-28,-305,279,-304,-304,-304,-304,-304,-238,-239,-247,-238,-239,-246,-28,]),'L_SHIFT':([29,31,32,50,126,127,128,136,141,151,153,159,163,164,169,210,211,212,213,215,216,220,222,224,225,229,231,232,234,237,241,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,388,389,390,391,392,393,394,398,399,400,406,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-253,-252,-261,-264,-248,-276,-221,-273,-251,-250,-255,-249,-258,-223,-269,-216,340,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,340,340,340,340,-238,-274,-275,-272,-271,-270,-220,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'SHORT':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,94,95,105,107,108,109,110,113,116,119,120,123,125,129,130,134,135,140,142,143,147,149,150,152,157,158,161,167,170,172,177,178,182,190,197,198,200,202,207,208,218,233,238,249,253,260,265,267,271,295,297,300,301,302,303,309,333,348,349,350,354,363,364,374,379,420,421,422,423,444,446,464,468,471,477,485,486,496,502,504,505,508,516,518,520,521,522,523,527,528,529,530,531,534,538,540,541,542,543,549,],[-58,-57,-56,-54,-51,-52,-60,-55,-49,-59,-53,-50,52,52,-72,-51,-71,-70,-68,-74,52,-73,-69,52,-104,52,-85,-103,-102,52,-108,52,-144,-128,-125,52,-143,-149,-147,-133,-134,-142,-150,52,-136,-148,-145,-146,-151,-135,-132,-123,-127,-152,-131,-76,-106,52,52,-114,-107,-126,-124,52,52,-207,52,-205,52,-129,-203,-155,-75,-105,52,52,-112,-113,52,-206,-209,-211,-212,-204,-153,-202,-208,-111,-210,-213,-215,52,-116,-118,-178,-166,-163,-131,-115,-117,-188,-174,-167,52,52,-185,-186,-187,-214,-169,52,-177,52,-175,-170,-180,-164,-184,-183,-182,-168,-176,-181,]),'RETURN':([94,110,119,120,123,125,129,130,134,135,140,142,143,149,150,152,157,158,161,166,167,170,172,177,178,197,198,207,208,238,253,264,265,267,271,301,333,348,349,350,354,363,364,374,420,421,422,425,439,444,446,458,464,468,471,477,485,486,492,494,496,497,502,504,505,509,511,514,516,517,518,519,520,521,522,523,527,528,529,530,531,534,538,539,540,541,542,543,547,548,549,553,558,560,563,564,565,568,570,574,],[132,132,-144,-128,-125,132,-143,-149,-147,-133,-134,-142,-150,-136,-148,-145,-146,-151,-135,132,-132,-123,-127,-152,-131,132,132,-126,-124,-207,-205,132,-129,-203,-155,132,-206,-209,-211,-212,-204,-153,-202,-208,-210,-213,-215,132,132,-116,-118,132,-178,-166,-163,-131,-115,-117,132,132,-188,132,-174,-167,132,132,132,132,-185,132,-186,132,-187,-214,-169,132,-177,132,-175,-170,-180,-164,-184,132,-183,-182,-168,-176,132,132,-181,132,132,132,132,132,132,132,132,132,]),'SYNCHRONIZED':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,95,107,108,109,113,114,170,182,190,200,202,208,295,297,302,303,379,],[2,-58,-57,2,-40,-56,-54,-51,-44,-52,-60,-38,-55,2,-43,-49,-48,2,2,-59,-47,-53,-39,2,-50,2,2,-41,-45,2,-64,-42,2,2,-72,-51,-71,-70,-66,-68,-74,2,-73,-63,-62,-46,-67,-69,-104,-85,-103,-102,-108,-61,-123,-76,-106,-114,-107,-124,-75,-105,-112,-113,-111,]),'LOGICAL_AND':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,217,220,221,222,224,225,229,231,232,234,237,239,241,242,243,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,406,409,410,411,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,-286,-248,-276,-291,-221,-289,-273,-251,-250,-255,-249,-258,-223,-269,-295,-216,-293,337,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,-290,-288,-287,-272,-271,-270,337,-220,-294,-292,-296,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'FINAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,95,107,108,109,113,114,170,182,190,200,202,208,295,297,302,303,379,],[10,-58,-57,10,-40,-56,-54,-51,-44,-52,-60,-38,-55,10,-43,-49,-48,10,10,-59,-47,-53,-39,10,-50,10,10,-41,-45,10,-64,-42,10,10,-72,-51,-71,-70,-66,-68,-74,10,-73,-63,-62,-46,-67,-69,-104,-85,-103,-102,-108,-61,-123,-76,-106,-114,-107,-124,-75,-105,-112,-113,-111,]),'GEQ':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,220,222,224,225,229,231,232,234,237,241,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,396,397,398,399,400,406,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,312,-248,-276,-221,-273,-251,-250,-255,-249,-258,-223,-269,-216,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,312,312,-272,-271,-270,-220,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'NOT_EQUAL':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,220,221,222,224,225,229,231,232,234,237,241,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,406,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,-286,-248,-276,-221,320,-273,-251,-250,-255,-249,-258,-223,-269,-216,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,320,-288,-287,-272,-271,-270,-220,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'BITWISE_OR':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,217,220,221,222,224,225,229,231,232,234,237,239,241,242,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,406,409,410,411,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,-286,-248,-276,-291,-221,-289,-273,-251,-250,-255,-249,-258,-223,-269,334,-216,-293,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,-290,-288,-287,-272,-271,-270,-220,-294,-292,334,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'LST':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,159,163,164,169,191,196,210,211,212,213,214,215,216,220,222,224,225,229,231,232,234,237,241,244,245,258,259,261,262,263,268,319,327,328,332,335,357,358,359,369,385,387,388,389,390,391,392,393,394,396,397,398,399,400,406,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,483,488,489,490,499,513,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,313,-248,-276,-221,-273,-251,-250,-255,-249,-258,-223,-269,-216,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-249,-263,-230,-233,-232,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,313,313,-272,-271,-270,-220,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,-245,-237,-265,-268,-242,-244,]),'COLON':([29,31,32,50,70,72,78,117,126,127,128,136,141,151,153,156,159,163,164,169,191,196,210,211,212,213,214,215,216,217,220,221,222,223,224,225,226,229,230,231,232,234,236,237,239,241,242,243,244,245,258,259,261,262,263,268,319,327,328,335,357,358,359,366,369,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,406,409,410,411,412,413,414,415,428,429,430,432,434,436,437,448,449,452,463,465,466,476,483,487,488,489,490,499,503,513,525,526,],[-27,-26,-28,-29,-22,-20,-21,-23,-216,-219,-6,-217,-224,-218,-5,264,-7,-222,-4,-8,-24,-25,-253,-252,-261,-264,-286,-248,-276,-291,-221,-289,-273,-302,-251,-250,-299,-255,-316,-249,-258,-223,-301,-269,-295,-216,-293,-297,-280,-254,-224,-249,-259,-222,-248,-260,-257,-256,-262,-263,-230,-233,-232,-303,-241,-247,-285,-282,-283,-284,-281,-238,-274,-275,-290,-288,-287,-272,-271,-270,447,-298,-220,-294,-292,-296,-279,-278,-277,-239,-229,-234,-231,-225,-220,-246,-240,-236,-266,-267,-243,-235,-226,511,-245,-300,-237,-265,-268,-242,527,-244,543,-317,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'ClassBodyDeclarations':([42,],[53,]),'PostDecrementExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[118,118,118,224,224,224,118,224,224,224,118,118,224,224,224,224,224,224,118,224,224,224,118,224,224,224,224,224,118,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,118,224,118,224,118,224,224,224,224,118,224,224,224,224,224,118,118,118,118,118,118,118,224,118,118,118,224,118,224,118,118,118,118,118,224,118,224,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'ExpressionStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'PrimitiveType':([42,53,69,94,105,110,116,125,147,197,198,218,233,249,260,300,301,309,423,505,508,523,528,],[55,55,55,55,55,55,55,55,255,55,55,255,330,55,330,55,55,386,55,55,55,55,55,]),'Statement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[120,120,120,270,120,120,363,120,464,471,496,516,518,520,120,534,363,538,540,541,120,120,549,464,471,496,516,518,520,534,538,540,541,549,]),'AndExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,326,329,334,336,337,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,410,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,]),'ConstructorBody':([76,103,111,189,],[113,190,202,297,]),'ArgumentList':([283,304,305,360,424,440,],[368,380,382,431,462,482,]),'ClassMemberDeclaration':([42,53,],[63,63,]),'Assignment':([94,110,125,132,166,174,180,185,197,198,209,233,249,254,257,260,264,275,282,283,285,290,301,304,305,325,329,347,356,360,407,416,417,419,424,425,427,435,438,439,440,441,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[121,121,121,223,121,223,223,223,121,121,223,223,121,223,223,223,121,223,223,223,223,223,121,223,223,223,223,223,223,223,223,121,223,121,223,121,223,223,223,121,223,223,121,121,121,121,121,121,121,223,121,121,121,223,121,223,121,121,121,121,121,223,121,223,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'CatchClause':([250,348,],[350,421,]),'PostIncrementExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[122,122,122,225,225,225,122,225,225,225,122,122,225,225,225,225,225,225,122,225,225,225,122,225,225,225,225,225,122,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,122,225,122,225,122,225,225,225,225,122,225,225,225,225,225,122,122,122,122,122,122,122,225,122,122,122,225,122,225,122,122,122,122,122,225,122,225,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ClassBodyDeclaration':([42,53,],[67,90,]),'BlockStatement':([94,110,125,197,198,301,505,523,528,],[123,123,207,123,207,207,123,123,207,]),'SwitchBlockStatementGroups':([467,],[500,]),'SingleTypeImportDeclaration':([0,4,22,37,],[18,18,18,18,]),'ConditionalExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,329,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,487,236,236,236,236,236,]),'PreIncrementExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,407,416,417,419,424,425,427,435,438,439,440,441,447,451,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[124,124,124,245,245,245,124,245,245,245,124,124,245,245,245,245,245,245,124,245,245,245,124,245,245,245,245,245,124,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,124,245,124,245,124,245,245,245,124,245,245,245,245,124,124,124,124,124,124,124,245,124,124,124,245,124,245,124,124,124,124,124,245,124,245,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ExplicitConstructorInvocation':([110,],[197,]),'UnaryExpression':([132,155,165,174,180,185,209,219,227,228,233,240,254,257,260,275,282,283,285,290,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,407,417,424,427,435,438,440,441,447,451,501,510,512,533,544,],[237,261,268,237,237,237,237,319,327,328,237,335,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,398,399,400,237,237,237,237,237,237,237,237,237,237,237,237,449,237,237,237,237,237,237,237,237,237,489,237,237,237,237,237,]),'VariableInitializers':([290,],[375,]),'DimExpr':([255,256,318,357,359,],[358,358,358,429,429,]),'Throws':([76,91,97,103,186,188,],[111,115,183,189,294,296,]),'BlockStatements':([94,110,197,505,523,],[125,198,301,528,528,]),'ClassTypeList':([112,],[204,]),'PrimaryNoNewArray':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[126,126,126,241,126,126,126,241,241,241,126,126,241,126,126,126,241,126,126,241,241,241,126,241,241,241,241,241,126,241,241,126,126,126,126,126,126,126,126,126,126,126,126,241,126,241,126,126,126,126,126,126,241,241,241,126,126,241,126,241,126,241,126,241,126,241,241,126,241,241,126,126,126,126,126,126,126,126,126,126,241,126,126,126,241,126,241,126,126,126,126,126,241,126,241,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'AssignmentOperator':([171,],[275,]),'ConditionalAndExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,326,329,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,402,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,]),'EmptyStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'ReturnStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'VariableDeclarator':([61,102,133,181,],[100,100,100,288,]),'PostfixExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[131,131,131,212,212,212,131,212,212,212,131,131,212,212,212,212,212,212,131,212,212,212,131,212,212,212,212,212,131,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,131,212,131,212,131,212,212,212,212,131,212,212,212,212,212,131,131,131,131,131,131,131,212,131,131,131,212,131,212,131,131,131,131,131,212,131,212,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'SwitchLabel':([467,500,505,523,],[502,502,529,529,]),'ArrayInitializer':([185,290,441,],[291,291,291,]),'FormalParameter':([105,116,300,423,],[192,192,378,461,]),'Type':([42,53,69,94,105,110,116,125,197,198,249,300,301,423,505,508,523,528,],[61,61,102,133,193,133,193,133,133,133,133,193,133,193,133,133,133,133,]),'EqualityExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,317,325,326,329,334,336,337,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,395,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'MultiplicativeExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,310,311,312,313,315,316,317,320,321,325,326,329,334,336,337,338,339,340,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,393,394,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),'BreakStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'IfThenStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'Super':([33,46,],[45,87,]),'ArrayCreationExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'AssignmentExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,329,347,356,360,407,417,424,427,435,438,440,441,501,510,512,533,544,],[230,230,230,230,230,230,230,230,230,366,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,]),'UnaryExpressionNotPlusMinus':([132,155,165,174,180,185,209,219,227,228,233,240,254,257,260,275,282,283,285,290,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,417,424,427,434,435,438,440,441,447,451,453,501,510,512,533,544,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,452,232,232,232,232,452,232,232,232,232,232,232,490,232,232,232,232,232,]),'SwitchBlock':([433,],[468,]),'FieldDeclaration':([42,53,],[82,82,]),'StatementNoShortIf':([439,511,547,548,553,558,560,563,564,565,568,570,574,],[473,536,555,556,562,567,569,571,572,573,575,576,577,]),'MethodInvocation':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[139,139,139,234,234,234,139,234,234,234,139,139,234,234,234,234,234,234,139,234,234,234,139,234,234,234,234,234,139,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,139,234,139,234,139,234,234,234,234,139,234,234,234,234,234,139,139,139,139,139,139,139,234,139,139,139,234,139,234,139,139,139,139,139,234,139,234,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'IfThenElseStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'ArrayAccess':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[141,141,141,141,258,258,141,141,141,141,141,141,141,258,258,258,141,258,141,141,141,141,141,141,141,141,141,141,141,141,141,258,258,258,258,258,258,258,258,258,258,258,258,141,258,141,258,258,258,258,258,258,141,141,141,258,258,141,141,141,141,141,141,141,258,141,141,141,141,141,258,258,258,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'Modifier':([0,4,16,22,23,28,37,38,42,49,53,69,],[19,19,34,19,19,19,19,19,19,19,19,34,]),'Block':([58,74,94,110,125,138,166,197,198,264,301,351,425,439,458,492,494,497,498,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[95,109,142,142,142,250,142,142,142,142,142,422,142,142,142,142,142,142,521,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'ForUpdate':([419,456,457,491,546,551,552,557,],[460,493,495,515,554,559,561,566,]),'ForInit':([249,508,],[346,532,]),'VariableDeclarators':([61,102,133,],[96,187,247,]),'ThrowStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'ExclusiveOrExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,326,329,334,337,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,409,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,]),'Primary':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[144,144,144,215,263,263,144,215,215,215,144,144,215,263,263,263,215,263,144,215,215,215,144,215,215,215,215,215,144,215,215,263,263,263,263,263,263,263,263,263,263,263,263,215,263,215,263,263,263,263,263,263,215,215,215,263,263,215,144,215,144,215,144,215,263,215,215,144,215,215,263,263,263,144,144,144,144,144,144,144,215,144,144,144,215,144,215,144,144,144,144,144,215,144,215,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'PackageDeclaration':([0,],[22,]),'RelationalExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,317,320,321,325,326,329,334,336,337,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,396,397,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'WhileStatementNoShortIf':([439,511,547,548,553,558,560,563,564,565,568,570,574,],[474,474,474,474,474,474,474,474,474,474,474,474,474,]),'ConstantExpression':([501,],[525,]),'VariableInitializer':([185,290,441,],[292,376,484,]),'StaticInitializer':([42,53,],[56,56,]),'Literal':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'ConstructorDeclaration':([42,53,],[60,60,]),'TypeImportOnDemandDeclaration':([0,4,22,37,],[9,9,9,9,]),'ReferenceType':([42,53,69,94,105,110,116,125,197,198,249,300,301,309,423,505,508,523,528,],[73,73,73,73,73,73,73,73,73,73,73,73,73,387,73,73,73,73,73,]),'ClassInstanceCreationExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[148,148,148,220,220,220,148,220,220,220,148,148,220,220,220,220,220,220,148,220,220,220,148,220,220,220,220,220,148,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,148,220,148,220,148,220,220,220,220,148,220,220,220,220,220,148,148,148,148,148,148,148,220,148,148,148,220,148,220,148,148,148,148,148,220,148,220,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'ForStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'ContinueStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'ImportDeclaration':([0,4,22,37,],[12,27,12,27,]),'SwitchStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'Dims':([330,332,357,359,],[405,408,428,430,]),'ClassBody':([33,45,46,87,],[44,85,86,114,]),'ConditionalOrExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,329,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,]),'SwitchBlockStatementGroup':([467,500,],[506,524,]),'MethodDeclaration':([42,53,],[68,68,]),'Catches':([250,],[348,]),'Modifiers':([0,4,22,23,28,37,38,42,49,53,],[16,16,16,16,16,16,16,69,16,69,]),'DoStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'TryStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'SwitchLabels':([467,500,],[505,523,]),'FormalParameterList':([105,116,],[195,206,]),'Expression':([132,174,180,185,209,233,254,257,260,282,283,285,290,304,305,325,329,347,356,360,407,417,424,427,435,438,440,441,501,510,512,533,544,],[235,284,287,293,308,331,355,361,362,367,370,372,293,370,370,401,367,418,426,370,367,455,370,426,469,470,370,293,526,535,537,545,550,]),'StatementExpressionList':([249,419,456,457,491,508,546,551,552,557,],[345,459,459,459,459,345,459,459,459,459,]),'AdditiveExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,310,311,312,313,317,320,321,325,326,329,334,336,337,338,339,340,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,412,413,414,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'FloatingPointType':([42,53,69,94,105,110,116,125,147,197,198,218,233,249,260,300,301,309,423,505,508,523,528,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'LocalVariableDeclaration':([94,110,125,197,198,249,301,505,508,523,528,],[160,160,160,160,160,344,160,160,344,160,160,]),'ConstructorDeclarator':([42,53,69,],[76,76,103,]),'Finally':([250,348,],[349,420,]),'InclusiveOrExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,325,326,329,337,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,411,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,]),'ClassType':([42,43,53,69,94,105,110,112,116,125,147,197,198,218,249,300,301,306,309,423,505,508,523,528,],[78,84,78,78,78,78,78,203,78,78,256,78,78,318,78,78,78,384,78,78,78,78,78,78,]),'WhileStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'ClassDeclaration':([0,4,22,23,28,37,38,49,],[25,25,25,25,25,25,25,25,]),'CastExpression':([132,155,165,174,180,185,209,219,227,228,233,240,254,257,260,275,282,283,285,290,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,417,424,427,434,435,438,440,441,447,451,453,501,510,512,533,544,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'ImportDeclarations':([0,22,],[4,37,]),'TypeDeclaration':([0,4,22,23,28,37,38,49,],[5,5,5,39,39,5,39,39,]),'LabeledStatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'ArrayType':([42,53,69,94,105,110,116,125,197,198,249,300,301,309,423,505,508,523,528,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'StatementExpression':([94,110,125,166,197,198,249,264,301,416,419,425,439,456,457,458,491,492,494,497,505,508,509,511,514,517,519,523,528,539,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[168,168,168,168,168,168,342,168,168,454,342,168,168,342,342,168,342,168,168,168,168,342,168,168,168,168,168,168,168,168,342,168,168,342,342,168,342,168,168,168,168,168,168,168,168,]),'MethodDeclarator':([54,61,101,102,],[91,97,186,188,]),'VariableDeclaratorId':([61,102,133,181,193,],[98,98,98,98,298,]),'IntegralType':([42,53,69,94,105,110,116,125,147,197,198,218,233,249,260,300,301,309,423,505,508,523,528,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'QualifiedName':([14,17,42,43,53,69,94,105,110,112,116,125,132,147,155,165,166,174,180,185,197,198,209,218,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,300,301,304,305,306,309,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,423,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NumericType':([42,53,69,94,105,110,116,125,147,197,198,218,233,249,260,300,301,309,423,505,508,523,528,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LeftHandSide':([94,110,125,132,166,174,180,185,197,198,209,233,249,254,257,260,264,275,282,283,285,290,301,304,305,325,329,347,356,360,407,416,417,419,424,425,427,435,438,439,440,441,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'IfThenElseStatementNoShortIf':([439,511,547,548,553,558,560,563,564,565,568,570,574,],[478,478,478,478,478,478,478,478,478,478,478,478,478,]),'LocalVariableDeclarationStatement':([94,110,125,197,198,301,505,523,528,],[172,172,172,172,172,172,172,172,172,]),'ShiftExpression':([132,174,180,185,209,233,254,257,260,275,282,283,285,290,304,305,310,311,312,313,317,320,321,325,326,329,334,336,337,347,356,360,407,417,424,427,435,438,440,441,447,501,510,512,533,544,],[244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,388,389,390,391,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,]),'MethodBody':([74,],[107,]),'Name':([14,17,42,43,53,69,94,105,110,112,116,125,132,147,155,165,166,174,180,185,197,198,209,218,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,300,301,304,305,306,309,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,423,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[30,36,70,83,70,70,173,70,173,83,70,173,231,83,259,259,269,231,231,231,173,173,231,83,259,259,259,332,259,343,231,231,332,269,231,231,231,231,231,70,173,231,231,83,70,259,259,259,259,259,259,259,259,259,259,259,259,231,259,231,259,259,259,259,259,259,231,231,231,259,259,231,269,231,269,70,231,269,231,259,231,231,269,231,231,259,259,259,269,269,269,269,269,269,269,231,173,343,269,231,269,231,269,269,269,173,173,231,269,231,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,]),'SimpleName':([14,17,42,43,53,69,94,105,110,112,116,125,132,147,155,165,166,174,180,185,197,198,209,218,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,300,301,304,305,306,309,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,423,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[31,31,71,31,71,71,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PreDecrementExpression':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,407,416,417,419,424,425,427,435,438,439,440,441,447,451,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[175,175,175,229,229,229,175,229,229,229,175,175,229,229,229,229,229,229,175,229,229,229,175,229,229,229,229,229,175,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,175,229,175,229,175,229,229,229,175,229,229,229,229,175,175,175,175,175,175,175,229,175,175,175,229,175,229,175,175,175,175,175,229,175,229,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'CompilationUnit':([0,],[20,]),'ForStatementNoShortIf':([439,511,547,548,553,558,560,563,564,565,568,570,574,],[479,479,479,479,479,479,479,479,479,479,479,479,479,]),'MethodHeader':([42,53,],[74,74,]),'LabeledStatementNoShortIf':([439,511,547,548,553,558,560,563,564,565,568,570,574,],[481,481,481,481,481,481,481,481,481,481,481,481,481,]),'FieldAccess':([94,110,125,132,155,165,166,174,180,185,197,198,209,219,227,228,233,240,249,254,257,260,264,275,282,283,285,290,301,304,305,310,311,312,313,315,316,317,320,321,322,323,324,325,326,329,334,336,337,338,339,340,347,356,360,404,406,407,416,417,419,424,425,427,434,435,438,439,440,441,447,451,453,456,457,458,491,492,494,497,501,505,508,509,510,511,512,514,517,519,523,528,533,539,544,546,547,548,551,552,553,557,558,560,563,564,565,568,570,574,],[163,163,163,163,262,262,163,163,163,163,163,163,163,262,262,262,163,262,163,163,163,163,163,163,163,163,163,163,163,163,163,262,262,262,262,262,262,262,262,262,262,262,262,163,262,163,262,262,262,262,262,262,163,163,163,262,262,163,163,163,163,163,163,163,262,163,163,163,163,163,262,262,262,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'TypeDeclarations':([0,4,22,37,],[23,28,38,49,]),'StatementWithoutTrailingSubstatement':([94,110,125,166,197,198,264,301,425,439,458,492,494,497,505,509,511,514,517,519,523,528,539,547,548,553,558,560,563,564,565,568,570,574,],[178,178,178,178,178,178,178,178,178,477,178,178,178,178,178,178,477,178,178,178,178,178,178,477,477,477,477,477,477,477,477,477,477,477,]),'DimExprs':([255,256,318,],[357,359,359,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','parser.py',12),
  ('Type -> PrimitiveType','Type',1,'p_Type','parser.py',16),
  ('Type -> ReferenceType','Type',1,'p_Type','parser.py',17),
  ('Literal -> INT_LITERAL','Literal',1,'p_Literal','parser.py',21),
  ('Literal -> FLOAT_LITERAL','Literal',1,'p_Literal','parser.py',22),
  ('Literal -> CHAR_LITERAL','Literal',1,'p_Literal','parser.py',23),
  ('Literal -> STRING_LITERAL','Literal',1,'p_Literal','parser.py',24),
  ('Literal -> NULL','Literal',1,'p_Literal','parser.py',25),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser.py',29),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','parser.py',30),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser.py',34),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser.py',35),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','parser.py',39),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','parser.py',40),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','parser.py',41),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','parser.py',42),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','parser.py',43),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','parser.py',48),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser.py',49),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser.py',54),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','parser.py',55),
  ('ClassType -> Name','ClassType',1,'p_ClassType','parser.py',59),
  ('ArrayType -> PrimitiveType L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser.py',64),
  ('ArrayType -> Name L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser.py',65),
  ('ArrayType -> ArrayType L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser.py',66),
  ('Name -> SimpleName','Name',1,'p_Name','parser.py',70),
  ('Name -> QualifiedName','Name',1,'p_Name','parser.py',71),
  ('SimpleName -> IDENTIFIER','SimpleName',1,'p_SimpleName','parser.py',75),
  ('QualifiedName -> Name DOT IDENTIFIER','QualifiedName',3,'p_QualifiedName','parser.py',79),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','parser.py',86),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',87),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',88),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',89),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','parser.py',90),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',91),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',92),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','parser.py',93),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','parser.py',99),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','parser.py',100),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','parser.py',106),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','parser.py',107),
  ('PackageDeclaration -> PACKAGE Name STMT_TERMINATOR','PackageDeclaration',3,'p_PackageDeclaration','parser.py',113),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',119),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',120),
  ('SingleTypeImportDeclaration -> IMPORT Name STMT_TERMINATOR','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','parser.py',126),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT STMT_TERMINATOR','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser.py',132),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser.py',138),
  ('TypeDeclaration -> STMT_TERMINATOR','TypeDeclaration',1,'p_TypeDeclaration','parser.py',139),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','parser.py',145),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','parser.py',146),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','parser.py',152),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','parser.py',153),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','parser.py',154),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','parser.py',155),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','parser.py',156),
  ('Modifier -> ABSTRACT','Modifier',1,'p_Modifier','parser.py',157),
  ('Modifier -> VOLATILE','Modifier',1,'p_Modifier','parser.py',158),
  ('Modifier -> SYNCHRONIZED','Modifier',1,'p_Modifier','parser.py',159),
  ('Modifier -> TRANSIENT','Modifier',1,'p_Modifier','parser.py',160),
  ('Modifier -> NATIVE','Modifier',1,'p_Modifier','parser.py',161),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER Super ClassBody','ClassDeclaration',5,'p_ClassDeclaration','parser.py',168),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',169),
  ('ClassDeclaration -> CLASS IDENTIFIER Super ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',170),
  ('ClassDeclaration -> CLASS IDENTIFIER ClassBody','ClassDeclaration',3,'p_ClassDeclaration','parser.py',171),
  ('Super -> EXTENDS ClassType','Super',2,'p_Super','parser.py',177),
  ('ClassBody -> L_CURLYBR R_CURLYBR','ClassBody',2,'p_ClassBody','parser.py',183),
  ('ClassBody -> L_CURLYBR ClassBodyDeclarations R_CURLYBR','ClassBody',3,'p_ClassBody','parser.py',184),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','parser.py',190),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','parser.py',191),
  ('ClassBodyDeclaration -> ClassMemberDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',197),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',198),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',199),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',205),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',206),
  ('FieldDeclaration -> Modifiers Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',4,'p_FieldDeclaration','parser.py',212),
  ('FieldDeclaration -> Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',3,'p_FieldDeclaration','parser.py',213),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','parser.py',219),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','parser.py',220),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','parser.py',226),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser.py',227),
  ('VariableDeclaratorId -> IDENTIFIER','VariableDeclaratorId',1,'p_VariableDeclaratorId','parser.py',233),
  ('VariableDeclaratorId -> VariableDeclaratorId L_SQBR R_SQBR','VariableDeclaratorId',3,'p_VariableDeclaratorId','parser.py',234),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser.py',240),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser.py',241),
  ('MethodDeclaration -> MethodHeader MethodBody','MethodDeclaration',2,'p_MethodDeclaration','parser.py',247),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',253),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',254),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',255),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',256),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',257),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',258),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',259),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',260),
  ('MethodDeclarator -> IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodDeclarator',3,'p_MethodDeclarator','parser.py',266),
  ('MethodDeclarator -> IDENTIFIER L_ROUNDBR FormalParameterList R_ROUNDBR','MethodDeclarator',4,'p_MethodDeclarator','parser.py',267),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','parser.py',273),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','parser.py',274),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser.py',280),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','parser.py',286),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','parser.py',292),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','parser.py',293),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser.py',299),
  ('MethodBody -> STMT_TERMINATOR','MethodBody',1,'p_MethodBody','parser.py',300),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','parser.py',306),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','parser.py',312),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',313),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',314),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','parser.py',315),
  ('ConstructorDeclarator -> SimpleName L_ROUNDBR FormalParameterList R_ROUNDBR','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser.py',321),
  ('ConstructorDeclarator -> SimpleName L_ROUNDBR R_ROUNDBR','ConstructorDeclarator',3,'p_ConstructorDeclarator','parser.py',322),
  ('ConstructorBody -> L_CURLYBR ExplicitConstructorInvocation BlockStatements R_CURLYBR','ConstructorBody',4,'p_ConstructorBody','parser.py',328),
  ('ConstructorBody -> L_CURLYBR ExplicitConstructorInvocation R_CURLYBR','ConstructorBody',3,'p_ConstructorBody','parser.py',329),
  ('ConstructorBody -> L_CURLYBR BlockStatements R_CURLYBR','ConstructorBody',3,'p_ConstructorBody','parser.py',330),
  ('ConstructorBody -> L_CURLYBR R_CURLYBR','ConstructorBody',2,'p_ConstructorBody','parser.py',331),
  ('ExplicitConstructorInvocation -> THIS L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',337),
  ('ExplicitConstructorInvocation -> THIS L_ROUNDBR R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',338),
  ('ExplicitConstructorInvocation -> SUPER L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',339),
  ('ExplicitConstructorInvocation -> SUPER L_ROUNDBR R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',340),
  ('ArrayInitializer -> L_CURLYBR VariableInitializers R_CURLYBR','ArrayInitializer',3,'p_ArrayInitializer','parser.py',349),
  ('ArrayInitializer -> L_CURLYBR R_CURLYBR','ArrayInitializer',2,'p_ArrayInitializer','parser.py',350),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','parser.py',356),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','parser.py',357),
  ('Block -> L_CURLYBR R_CURLYBR','Block',2,'p_Block','parser.py',364),
  ('Block -> L_CURLYBR BlockStatements R_CURLYBR','Block',3,'p_Block','parser.py',365),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser.py',371),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','parser.py',372),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser.py',378),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser.py',379),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration STMT_TERMINATOR','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser.py',385),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser.py',391),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','parser.py',397),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','parser.py',398),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser.py',399),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','parser.py',400),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','parser.py',401),
  ('Statement -> ForStatement','Statement',1,'p_Statement','parser.py',402),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',408),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',409),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',410),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',411),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',412),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',418),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',419),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',420),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',421),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',422),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',423),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',424),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',425),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',426),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',427),
  ('EmptyStatement -> STMT_TERMINATOR','EmptyStatement',1,'p_EmptyStatement','parser.py',433),
  ('LabeledStatement -> IDENTIFIER COLON Statement','LabeledStatement',3,'p_LabeledStatement','parser.py',439),
  ('LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser.py',445),
  ('ExpressionStatement -> StatementExpression STMT_TERMINATOR','ExpressionStatement',2,'p_ExpressionStatement','parser.py',451),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser.py',457),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',458),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',459),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',460),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',461),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser.py',462),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser.py',463),
  ('IfThenStatement -> IF L_ROUNDBR Expression R_ROUNDBR Statement','IfThenStatement',5,'p_IfThenStatement','parser.py',469),
  ('IfThenElseStatement -> IF L_ROUNDBR Expression R_ROUNDBR StatementNoShortIf ELSE Statement','IfThenElseStatement',7,'p_IfThenElseStatement','parser.py',475),
  ('IfThenElseStatementNoShortIf -> IF L_ROUNDBR Expression R_ROUNDBR StatementNoShortIf ELSE StatementNoShortIf','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser.py',481),
  ('SwitchStatement -> SWITCH L_ROUNDBR Expression R_ROUNDBR SwitchBlock','SwitchStatement',5,'p_SwitchStatement','parser.py',487),
  ('SwitchBlock -> L_CURLYBR R_CURLYBR','SwitchBlock',2,'p_SwitchBlock','parser.py',493),
  ('SwitchBlock -> L_CURLYBR SwitchBlockStatementGroups SwitchLabels R_CURLYBR','SwitchBlock',4,'p_SwitchBlock','parser.py',494),
  ('SwitchBlock -> L_CURLYBR SwitchBlockStatementGroups R_CURLYBR','SwitchBlock',3,'p_SwitchBlock','parser.py',495),
  ('SwitchBlock -> L_CURLYBR SwitchLabels R_CURLYBR','SwitchBlock',3,'p_SwitchBlock','parser.py',496),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','parser.py',502),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','parser.py',503),
  ('SwitchBlockStatementGroup -> SwitchLabels BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser.py',509),
  ('SwitchLabels -> SwitchLabel','SwitchLabels',1,'p_SwitchLabels','parser.py',515),
  ('SwitchLabels -> SwitchLabels SwitchLabel','SwitchLabels',2,'p_SwitchLabels','parser.py',516),
  ('SwitchLabel -> CASE ConstantExpression COLON','SwitchLabel',3,'p_SwitchLabel','parser.py',522),
  ('SwitchLabel -> DEFAULT COLON','SwitchLabel',2,'p_SwitchLabel','parser.py',523),
  ('WhileStatement -> WHILE L_ROUNDBR Expression R_ROUNDBR Statement','WhileStatement',5,'p_WhileStatement','parser.py',529),
  ('WhileStatementNoShortIf -> WHILE L_ROUNDBR Expression R_ROUNDBR StatementNoShortIf','WhileStatementNoShortIf',5,'p_WhileStatementNoShortIf','parser.py',535),
  ('DoStatement -> DO Statement WHILE L_ROUNDBR Expression R_ROUNDBR STMT_TERMINATOR','DoStatement',7,'p_DoStatement','parser.py',541),
  ('ForStatement -> FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR Statement','ForStatement',9,'p_ForStatement','parser.py',547),
  ('ForStatement -> FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR Statement','ForStatement',8,'p_ForStatement','parser.py',548),
  ('ForStatement -> FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR Statement','ForStatement',8,'p_ForStatement','parser.py',549),
  ('ForStatement -> FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR Statement','ForStatement',8,'p_ForStatement','parser.py',550),
  ('ForStatement -> FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR Statement','ForStatement',7,'p_ForStatement','parser.py',551),
  ('ForStatement -> FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR Statement','ForStatement',7,'p_ForStatement','parser.py',552),
  ('ForStatement -> FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR Statement','ForStatement',7,'p_ForStatement','parser.py',553),
  ('ForStatement -> FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR Statement','ForStatement',6,'p_ForStatement','parser.py',554),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',9,'p_ForStatementNoShortIf','parser.py',560),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser.py',561),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser.py',562),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser.py',563),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR ForInit STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser.py',564),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR STMT_TERMINATOR Expression STMT_TERMINATOR R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser.py',565),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser.py',566),
  ('ForStatementNoShortIf -> FOR L_ROUNDBR STMT_TERMINATOR STMT_TERMINATOR R_ROUNDBR StatementNoShortIf','ForStatementNoShortIf',6,'p_ForStatementNoShortIf','parser.py',567),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','parser.py',573),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','parser.py',574),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','parser.py',580),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','parser.py',586),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','parser.py',587),
  ('BreakStatement -> BREAK IDENTIFIER STMT_TERMINATOR','BreakStatement',3,'p_BreakStatement','parser.py',593),
  ('BreakStatement -> BREAK STMT_TERMINATOR','BreakStatement',2,'p_BreakStatement','parser.py',594),
  ('ContinueStatement -> CONTINUE IDENTIFIER STMT_TERMINATOR','ContinueStatement',3,'p_ContinueStatement','parser.py',600),
  ('ContinueStatement -> CONTINUE STMT_TERMINATOR','ContinueStatement',2,'p_ContinueStatement','parser.py',601),
  ('ReturnStatement -> RETURN Expression STMT_TERMINATOR','ReturnStatement',3,'p_ReturnStatement','parser.py',607),
  ('ReturnStatement -> RETURN STMT_TERMINATOR','ReturnStatement',2,'p_ReturnStatement','parser.py',608),
  ('ThrowStatement -> THROW Expression STMT_TERMINATOR','ThrowStatement',3,'p_ThrowStatement','parser.py',614),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','parser.py',620),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','parser.py',621),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','parser.py',622),
  ('Catches -> CatchClause','Catches',1,'p_Catches','parser.py',628),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','parser.py',629),
  ('CatchClause -> CATCH L_ROUNDBR FormalParameter R_ROUNDBR Block','CatchClause',5,'p_CatchClause','parser.py',635),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','parser.py',641),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser.py',650),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','parser.py',651),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',657),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',658),
  ('PrimaryNoNewArray -> L_ROUNDBR Expression R_ROUNDBR','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser.py',659),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',660),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',661),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',662),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',663),
  ('ClassInstanceCreationExpression -> NEW ClassType L_ROUNDBR R_ROUNDBR','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','parser.py',669),
  ('ClassInstanceCreationExpression -> NEW ClassType L_ROUNDBR ArgumentList R_ROUNDBR','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','parser.py',670),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','parser.py',676),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','parser.py',677),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',683),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',684),
  ('ArrayCreationExpression -> NEW ClassType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',685),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',686),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','parser.py',692),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','parser.py',693),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','parser.py',699),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','parser.py',705),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','parser.py',706),
  ('FieldAccess -> Primary DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',712),
  ('FieldAccess -> SUPER DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',713),
  ('MethodInvocation -> Name L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',4,'p_MethodInvocation','parser.py',719),
  ('MethodInvocation -> Name L_ROUNDBR R_ROUNDBR','MethodInvocation',3,'p_MethodInvocation','parser.py',720),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',6,'p_MethodInvocation','parser.py',721),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodInvocation',5,'p_MethodInvocation','parser.py',722),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',6,'p_MethodInvocation','parser.py',723),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodInvocation',5,'p_MethodInvocation','parser.py',724),
  ('ArrayAccess -> Name L_SQBR Expression R_SQBR','ArrayAccess',4,'p_ArrayAccess','parser.py',730),
  ('ArrayAccess -> PrimaryNoNewArray L_SQBR Expression R_SQBR','ArrayAccess',4,'p_ArrayAccess','parser.py',731),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser.py',737),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','parser.py',738),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',739),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',740),
  ('PostIncrementExpression -> PostfixExpression INCREMENT','PostIncrementExpression',2,'p_PostIncrementExpression','parser.py',746),
  ('PostDecrementExpression -> PostfixExpression DECREMENT','PostDecrementExpression',2,'p_PostDecrementExpression','parser.py',752),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',758),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',759),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',760),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',761),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser.py',762),
  ('PreIncrementExpression -> INCREMENT UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','parser.py',768),
  ('PreDecrementExpression -> DECREMENT UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','parser.py',774),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',780),
  ('UnaryExpressionNotPlusMinus -> BITWISE_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',781),
  ('UnaryExpressionNotPlusMinus -> LOGICAL_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',782),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',783),
  ('CastExpression -> L_ROUNDBR PrimitiveType Dims R_ROUNDBR UnaryExpression','CastExpression',5,'p_CastExpression','parser.py',789),
  ('CastExpression -> L_ROUNDBR PrimitiveType R_ROUNDBR UnaryExpression','CastExpression',4,'p_CastExpression','parser.py',790),
  ('CastExpression -> L_ROUNDBR Expression R_ROUNDBR UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser.py',791),
  ('CastExpression -> L_ROUNDBR Name Dims R_ROUNDBR UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser.py',792),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser.py',798),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',799),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVIDE UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',800),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',801),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser.py',807),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',808),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',809),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser.py',815),
  ('ShiftExpression -> ShiftExpression L_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',816),
  ('ShiftExpression -> ShiftExpression R_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',817),
  ('ShiftExpression -> ShiftExpression RR_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',818),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser.py',824),
  ('RelationalExpression -> RelationalExpression LST ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',825),
  ('RelationalExpression -> RelationalExpression GRT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',826),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',827),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',828),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser.py',829),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser.py',835),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',836),
  ('EqualityExpression -> EqualityExpression NOT_EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',837),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','parser.py',843),
  ('AndExpression -> AndExpression BITWISE_AND EqualityExpression','AndExpression',3,'p_AndExpression','parser.py',844),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','parser.py',850),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BITWISE_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','parser.py',851),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','parser.py',857),
  ('InclusiveOrExpression -> InclusiveOrExpression BITWISE_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','parser.py',858),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','parser.py',864),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGICAL_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','parser.py',865),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','parser.py',871),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGICAL_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','parser.py',872),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','parser.py',878),
  ('ConditionalExpression -> ConditionalOrExpression QMARK Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','parser.py',879),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','parser.py',885),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','parser.py',886),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','parser.py',892),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','parser.py',898),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',899),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',900),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',906),
  ('AssignmentOperator -> MULT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',907),
  ('AssignmentOperator -> DIVIDE_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',908),
  ('AssignmentOperator -> MOD_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',909),
  ('AssignmentOperator -> PLUS_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',910),
  ('AssignmentOperator -> MINUS_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',911),
  ('AssignmentOperator -> LSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',912),
  ('AssignmentOperator -> RSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',913),
  ('AssignmentOperator -> RRSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',914),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','parser.py',921),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','parser.py',927),
]
