
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BLOCK_COMMENT BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_LITERAL CLASS COLON COMMA CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_LITERAL FOR GEQ GRT IDENTIFIER IF IMPORT INCREMENT INSTANCEOF INT INT_LITERAL LEQ LINE_COMMENT LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG LSHIFT_ASSIGN LST L_CURLYBR L_ROUNDBR L_SHIFT L_SQBR MINUS MINUS_ASSIGN MODULO MOD_ASSIGN MULT MULT_ASSIGN NATIVE NEW NOT_EQUAL NULL PACKAGE PLUS PLUS_ASSIGN PRIVATE PROTECTED PUBLIC QMARK RETURN RRSHIFT_ASSIGN RR_SHIFT RSHIFT_ASSIGN R_CURLYBR R_ROUNDBR R_SHIFT R_SQBR SHORT STATIC STMT_TERMINATOR STRING_LITERAL SUPER SWITCH SYNCHRONIZED THIS THROW THROWS TRANSIENT TRY VOID VOLATILE WHILEGoal : CompilationUnit Literal :   IntConst\n                  | FloatConst\n                  | CharConst\n                  | StringConst\n                  | NullConst\n    \n    IntConst : INT_LITERAL\n    \n    FloatConst : FLOAT_LITERAL\n    \n    CharConst : CHAR_LITERAL\n    \n    StringConst : STRING_LITERAL\n    \n    NullConst : NULL\n     Type : PrimitiveType\n            | ReferenceType  PrimitiveType :    NumericType\n                         | BOOLEAN\n     NumericType :   IntegralType\n                      | FloatingPointType\n     IntegralType :    BYTE\n                        | SHORT\n                        | INT\n                        | LONG\n                        | CHAR\n     FloatingPointType :   FLOAT\n                            | DOUBLE\n     ReferenceType :   ArrayType\n                        | ClassType\n     ClassType : Name\n     ArrayType :    PrimitiveType Dims\n                     | Name Dims\n     Name :    SimpleName\n                | QualifiedName  SimpleName : IDENTIFIER QualifiedName : Name DOT IDENTIFIER\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |\n    \n    ImportDeclarations : ImportDeclaration\n    | ImportDeclarations ImportDeclaration\n    \n    TypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclaration\n    \n    PackageDeclaration : PACKAGE Name STMT_TERMINATOR\n    \n    ImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclaration\n    \n    SingleTypeImportDeclaration : IMPORT Name STMT_TERMINATOR\n    \n    TypeImportOnDemandDeclaration : IMPORT Name DOT MULT STMT_TERMINATOR\n    \n    TypeDeclaration : ClassDeclaration\n    | STMT_TERMINATOR\n    \n    Modifiers : Modifier\n    | Modifiers Modifier\n    \n    Modifier : STATIC\n    | FINAL\n    | PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | ABSTRACT\n    | VOLATILE\n    | SYNCHRONIZED\n    | TRANSIENT\n    | NATIVE\n    \n    ClassDeclaration : Modifiers CLASS IDENTIFIER Super ClassBody\n    | Modifiers CLASS IDENTIFIER ClassBody\n    | CLASS IDENTIFIER Super ClassBody\n    | CLASS IDENTIFIER ClassBody\n    \n    Super : EXTENDS ClassType\n    \n    ClassBody : L_CURLYBR R_CURLYBR\n    | L_CURLYBR ClassBodyDeclarations R_CURLYBR\n    \n    ClassBodyDeclarations : ClassBodyDeclaration\n    | ClassBodyDeclarations ClassBodyDeclaration\n    \n    ClassBodyDeclaration : ClassMemberDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    \n    ClassMemberDeclaration : FieldDeclaration\n    | MethodDeclaration\n    \n    FieldDeclaration : Modifiers Type VariableDeclarators STMT_TERMINATOR\n    | Type VariableDeclarators STMT_TERMINATOR\n    \n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclarator\n    \n    VariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializer\n    \n    VariableDeclaratorId : IDENTIFIER\n    \n    VariableInitializer : Expression\n    | ArrayInitializer\n    \n    MethodDeclaration : MethodHeader MethodAddParentScope MethodBody\n    \n    MethodAddParentScope :\n    \n    MethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Type MethodDeclarator Throws\n    | Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator\n    | VOID MethodDeclarator Throws\n    | VOID MethodDeclarator\n    \n    MethodDeclarator : IDENTIFIER L_ROUNDBR MethodCreateScope R_ROUNDBR\n    | IDENTIFIER L_ROUNDBR MethodCreateScope FormalParameterList R_ROUNDBR\n    \n    MethodCreateScope :\n    \n    FormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameter\n    \n    FormalParameter : Type VariableDeclaratorId\n    \n    Throws : THROWS ClassTypeList\n    \n    ClassTypeList : ClassType\n    | ClassTypeList COMMA ClassType\n    \n    MethodBody : Block\n    | STMT_TERMINATOR\n    \n    StaticInitializer : STATIC Block\n    \n    ConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBody\n    \n    ConstructorDeclarator : SimpleName L_ROUNDBR FormalParameterList R_ROUNDBR\n    | SimpleName L_ROUNDBR R_ROUNDBR\n    \n    ConstructorBody : L_CURLYBR ExplicitConstructorInvocation BlockStatements R_CURLYBR\n    | L_CURLYBR ExplicitConstructorInvocation R_CURLYBR\n    | L_CURLYBR BlockStatements R_CURLYBR\n    | L_CURLYBR R_CURLYBR\n    \n    ExplicitConstructorInvocation : THIS L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR\n    | THIS L_ROUNDBR R_ROUNDBR STMT_TERMINATOR\n    | SUPER L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR\n    | SUPER L_ROUNDBR R_ROUNDBR STMT_TERMINATOR\n    \n    ArrayInitializer : L_CURLYBR VariableInitializers R_CURLYBR\n    | L_CURLYBR R_CURLYBR\n    \n    VariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializer\n    \n    Block : L_CURLYBR R_CURLYBR\n    | L_CURLYBR BlockStatements R_CURLYBR\n    \n    BlockStatements : BlockStatement\n    | BlockStatements BlockStatement\n    \n    BlockStatement : LocalVariableDeclarationStatement\n    | Statement\n    \n    LocalVariableDeclarationStatement : LocalVariableDeclaration STMT_TERMINATOR\n    \n    LocalVariableDeclaration : Type VariableDeclarators\n    \n    Statement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatement\n    \n    StatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIf\n    \n    StatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatement\n    \n    EmptyStatement : STMT_TERMINATOR\n    \n    LabeledStatement : IDENTIFIER COLON Statement\n    \n    LabeledStatementNoShortIf : IDENTIFIER COLON StatementNoShortIf\n    \n    ExpressionStatement : StatementExpression STMT_TERMINATOR\n    \n    StatementExpression : Assignment\n    | PreIncrementExpression\n    | PreDecrementExpression\n    | PostIncrementExpression\n    | PostDecrementExpression\n    | MethodInvocation\n    | ClassInstanceCreationExpression\n    \n    IfThenStatement : IF L_ROUNDBR Expression R_ROUNDBR IfstartSc Statement IfendSc\n    \n    IfThenElseStatement : IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc Statement ElseEndSc\n    \n    IfThenElseStatementNoShortIf : IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc StatementNoShortIf ElseEndSc\n    IfstartSc : IfendSc : ElseStartSc : ElseEndSc : \n    SwitchStatement : SWITCH L_ROUNDBR Expression R_ROUNDBR SwMark2 SwitchBlock SwMark3\n     SwMark2 :  SwMark3 : \n    SwitchBlock : L_CURLYBR R_CURLYBR\n    | L_CURLYBR SwitchBlockStatementGroups R_CURLYBR\n    \n    SwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroup\n    \n    SwitchBlockStatementGroup : SwitchLabel BlockStatements\n    \n    SwitchLabel : SwMark1 CASE ConstantExpression COLON\n    | SwMark1 DEFAULT COLON\n     SwMark1 : \n    WhileStatement : WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 Statement WhMark3\n    \n    WhileStatementNoShortIf : WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 StatementNoShortIf WhMark3\n    WhMark1 : WhMark2 : WhMark3 : \n    DoStatement : DO doWhMark1 Statement WHILE doWhMark2 L_ROUNDBR Expression R_ROUNDBR doWhMark3 STMT_TERMINATOR\n    doWhMark1 : doWhMark3 : doWhMark2 : \n    ForStatement : FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5\n    \n    ForStatementNoShortIf : FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5\n    FoMark0 : FoMark1 : FoMark2 : FoMark6 : FoMark4 : FoMark3 : FoMark5 : \n    ForInit : StatementExpressionList\n    | LocalVariableDeclaration\n    \n    ForUpdate : StatementExpressionList\n    \n    StatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpression\n    \n    BreakStatement : BREAK IDENTIFIER STMT_TERMINATOR\n    | BREAK STMT_TERMINATOR\n    \n    ContinueStatement : CONTINUE IDENTIFIER STMT_TERMINATOR\n    | CONTINUE STMT_TERMINATOR\n    \n    ReturnStatement : RETURN Expression STMT_TERMINATOR\n    | RETURN STMT_TERMINATOR\n    \n    ThrowStatement : THROW Expression STMT_TERMINATOR\n    \n    TryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block Finally\n    \n    Catches : CatchClause\n    | Catches CatchClause\n    \n    CatchClause : CATCH L_ROUNDBR FormalParameter R_ROUNDBR Block\n    \n    Finally : FINALLY Block\n    \n    Primary : PrimaryNoNewArray\n    | ArrayCreationExpression\n    \n    PrimaryNoNewArray : Literal\n    | THIS\n    | L_ROUNDBR Expression R_ROUNDBR\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccess\n    \n    ClassInstanceCreationExpression : NEW ClassType L_ROUNDBR R_ROUNDBR\n    | NEW ClassType L_ROUNDBR ArgumentList R_ROUNDBR\n    \n    ArgumentList : Expression\n    | ArgumentList COMMA Expression\n    \n    ArrayCreationExpression : NEW PrimitiveType DimExprs Dims\n    | NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs Dims\n    | NEW ClassType DimExprs\n    \n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    \n    DimExpr : L_SQBR Expression R_SQBR\n    \n    Dims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBR\n    \n    FieldAccess : Primary DOT IDENTIFIER\n    | SUPER DOT IDENTIFIER\n    \n    MethodInvocation : Name L_ROUNDBR ArgumentList R_ROUNDBR\n    | Name L_ROUNDBR R_ROUNDBR\n    | Primary DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR\n    | Primary DOT IDENTIFIER L_ROUNDBR R_ROUNDBR\n    | SUPER DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR\n    | SUPER DOT IDENTIFIER L_ROUNDBR R_ROUNDBR\n    \n    ArrayAccess : Name DimExprs\n    \n    PostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpression\n    \n    PostIncrementExpression : PostfixExpression INCREMENT\n    \n    PostDecrementExpression : PostfixExpression DECREMENT\n    \n    UnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinus\n    \n    PreIncrementExpression : INCREMENT UnaryExpression\n    \n    PreDecrementExpression : DECREMENT UnaryExpression\n    \n    UnaryExpressionNotPlusMinus : PostfixExpression\n    | BITWISE_NOT UnaryExpression\n    | LOGICAL_NOT UnaryExpression\n    | CastExpression\n    \n    CastExpression : L_ROUNDBR PrimitiveType Dims R_ROUNDBR UnaryExpression\n    | L_ROUNDBR PrimitiveType R_ROUNDBR UnaryExpression\n    | L_ROUNDBR Expression R_ROUNDBR UnaryExpressionNotPlusMinus\n    | L_ROUNDBR Name Dims R_ROUNDBR UnaryExpressionNotPlusMinus\n    \n    MultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIVIDE UnaryExpression\n    | MultiplicativeExpression MODULO UnaryExpression\n    \n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpression\n    \n    ShiftExpression : AdditiveExpression\n    | ShiftExpression L_SHIFT AdditiveExpression\n    | ShiftExpression R_SHIFT AdditiveExpression\n    | ShiftExpression RR_SHIFT AdditiveExpression\n    \n    RelationalExpression : ShiftExpression\n    | RelationalExpression LST ShiftExpression\n    | RelationalExpression GRT ShiftExpression\n    | RelationalExpression LEQ ShiftExpression\n    | RelationalExpression GEQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceType\n    \n    EqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOT_EQUAL RelationalExpression\n    \n    AndExpression : EqualityExpression\n    | AndExpression BITWISE_AND EqualityExpression\n    \n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BITWISE_XOR AndExpression\n    \n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BITWISE_OR ExclusiveOrExpression\n    \n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGICAL_AND InclusiveOrExpression\n    \n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGICAL_OR ConditionalAndExpression\n    \n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QMARK Expression COLON ConditionalExpression\n    \n    AssignmentExpression : ConditionalExpression\n    | Assignment\n    \n    Assignment : LeftHandSide AssignmentOperator AssignmentExpression\n    \n    LeftHandSide : Name\n    | FieldAccess\n    | ArrayAccess\n    \n    AssignmentOperator : ASSIGN\n    | MULT_ASSIGN\n    | DIVIDE_ASSIGN\n    | MOD_ASSIGN\n    | PLUS_ASSIGN\n    | MINUS_ASSIGN\n    | LSHIFT_ASSIGN\n    | RSHIFT_ASSIGN\n    | RRSHIFT_ASSIGN\n    \n    Expression : AssignmentExpression\n    \n    ConstantExpression : Expression\n    '
    
_lr_action_items = {'LEQ':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-293,-278,-244,-268,326,-275,-242,-296,-289,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,326,326,-292,-291,-290,-259,-305,-302,-303,-304,-301,-294,-295,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'VOID':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,96,111,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,54,54,-76,-55,-75,-74,-72,-78,102,-77,-73,-109,-113,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'PROTECTED':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[7,-62,-61,7,-44,-60,-58,-55,-48,-56,-64,-42,-59,7,-47,-53,-52,7,7,-63,-51,-57,-43,7,-54,7,7,-45,-49,7,-68,-46,7,7,-76,-55,-75,-74,-70,-72,-78,7,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'MINUS':([29,31,32,50,116,121,126,127,128,131,132,136,141,147,149,154,156,158,165,166,167,168,172,177,178,184,188,210,213,214,215,216,218,219,220,221,222,224,227,229,230,232,235,236,240,242,244,246,247,259,260,261,262,263,264,265,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,292,306,307,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,342,352,353,354,355,364,366,387,388,389,391,400,401,403,404,405,406,408,410,416,421,423,424,426,428,430,431,432,434,435,441,442,443,444,447,448,451,453,459,464,465,467,471,475,487,507,520,525,541,555,556,567,],[-31,-30,-32,-33,-257,-4,-237,-240,-9,216,-2,-238,-245,-10,-5,-239,-8,216,-243,-7,216,-6,-11,-3,216,216,216,-258,-273,-272,-271,216,-270,216,-274,216,216,-281,-293,-278,-244,-268,-275,-242,334,-289,-284,-269,216,216,-245,-269,216,-279,-243,-268,-280,-330,-333,-332,216,-335,-334,-329,-328,-331,-327,216,-267,216,-254,216,216,216,216,-277,-276,-283,-282,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,-269,216,-251,-253,216,-255,-262,-292,-291,-290,-259,-294,-295,334,334,334,216,-241,-260,-212,216,-250,-252,-246,-241,-256,-261,216,216,216,216,-286,216,-287,-212,216,-264,-247,-266,-285,-288,216,-263,216,-265,216,216,216,-212,-212,216,216,]),'L_CURLYBR':([29,31,32,33,45,46,50,58,74,76,83,84,87,91,95,98,104,107,108,109,113,118,119,123,125,129,134,135,138,140,142,143,144,152,153,155,160,161,163,169,170,173,175,181,183,187,188,189,191,192,196,201,202,207,208,211,212,239,255,266,267,269,271,272,292,296,298,301,303,309,332,345,346,347,348,351,358,360,371,381,382,417,418,419,427,433,435,438,440,452,454,457,461,462,470,472,474,476,486,491,493,494,496,497,500,502,504,506,509,511,513,516,517,519,524,528,530,532,534,535,538,542,544,545,547,548,549,550,551,552,553,554,557,558,559,560,561,562,563,564,565,566,570,572,573,574,575,576,580,583,584,585,586,588,590,592,595,596,597,599,601,604,606,609,611,613,616,618,620,623,],[-31,-30,-32,42,42,42,-33,95,-89,108,-27,-69,42,-97,95,-93,108,95,95,108,-96,-149,-133,-130,95,-154,-152,-138,-148,-139,-147,95,-155,-141,-153,-150,-151,-156,-140,-192,-137,-128,-132,-157,-136,-92,292,-95,-91,108,-115,95,95,-105,-104,-131,-129,-228,-226,95,-134,-224,95,-160,292,-94,-90,-114,95,-98,-227,-230,-232,-233,95,-225,-158,-223,-229,-106,-99,-231,-234,-236,-176,-171,292,-121,-123,-189,473,95,-120,-122,95,95,-177,-172,-136,-215,-235,-190,95,-178,-175,-168,-173,95,-215,-215,95,-186,-179,95,95,-215,95,95,-217,-213,-184,-174,-171,95,-217,-213,-217,-213,-202,95,-183,-191,-169,-189,95,-217,-213,-199,95,-200,95,-216,95,-198,95,-216,-216,-201,-215,-173,-216,-197,-196,-215,-215,95,95,-195,-215,95,95,-213,95,-213,-213,95,-213,95,95,95,]),'LONG':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,96,106,108,111,114,118,119,123,125,129,134,135,138,140,142,144,150,152,153,155,160,161,163,170,173,175,181,183,186,193,198,199,200,201,202,204,206,209,211,212,234,239,247,255,262,267,269,272,297,299,302,303,304,305,324,332,344,345,346,347,351,358,360,371,376,417,418,419,420,438,440,461,462,474,476,486,493,494,496,497,500,502,516,517,519,523,534,538,542,547,549,551,553,554,557,560,562,564,566,572,574,575,576,584,585,586,596,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,59,59,-76,-55,-75,-74,-72,-78,59,-77,-73,59,-109,59,59,-113,-100,-149,-133,-130,59,-154,-152,-138,-148,-139,-147,-155,59,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-80,-111,-88,-108,-107,59,59,-119,-112,59,-131,-129,59,-228,59,-226,59,-134,-224,-160,-79,-110,59,59,-117,-118,59,-227,59,-230,-232,-233,-225,-158,-223,-229,-116,-231,-234,-236,59,-121,-123,-120,-122,-177,-172,-136,-235,-190,59,-178,-175,-168,-186,-179,59,59,-217,-184,-174,-217,-217,-202,-183,-191,-169,-217,-199,-200,-216,-198,-216,-216,-201,-216,-197,-196,-195,]),'DEFAULT':([118,119,123,129,134,135,138,140,142,144,152,153,155,160,161,163,170,173,175,181,183,211,212,239,255,267,269,272,332,345,346,347,351,358,360,371,417,418,419,473,474,476,486,493,494,495,497,498,499,500,502,516,517,518,519,534,542,547,549,551,554,557,560,562,564,566,572,574,575,576,584,585,586,596,],[-149,-133,-130,-154,-152,-138,-148,-139,-147,-155,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-131,-129,-228,-226,-134,-224,-160,-227,-230,-232,-233,-225,-158,-223,-229,-231,-234,-236,-185,-177,-172,-136,-235,-190,-185,-178,521,-180,-175,-168,-186,-179,-181,-182,-217,-174,-217,-217,-202,-191,-169,-217,-199,-200,-216,-198,-216,-216,-201,-216,-197,-196,-195,]),'PLUS':([29,31,32,50,116,121,126,127,128,131,132,136,141,147,149,154,156,158,165,166,167,168,172,177,178,184,188,210,213,214,215,216,218,219,220,221,222,224,227,229,230,232,235,236,240,242,244,246,247,259,260,261,262,263,264,265,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,292,306,307,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,342,352,353,354,355,364,366,387,388,389,391,400,401,403,404,405,406,408,410,416,421,423,424,426,428,430,431,432,434,435,441,442,443,444,447,448,451,453,459,464,465,467,471,475,487,507,520,525,541,555,556,567,],[-31,-30,-32,-33,-257,-4,-237,-240,-9,219,-2,-238,-245,-10,-5,-239,-8,219,-243,-7,219,-6,-11,-3,219,219,219,-258,-273,-272,-271,219,-270,219,-274,219,219,-281,-293,-278,-244,-268,-275,-242,333,-289,-284,-269,219,219,-245,-269,219,-279,-243,-268,-280,-330,-333,-332,219,-335,-334,-329,-328,-331,-327,219,-267,219,-254,219,219,219,219,-277,-276,-283,-282,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,-269,219,-251,-253,219,-255,-262,-292,-291,-290,-259,-294,-295,333,333,333,219,-241,-260,-212,219,-250,-252,-246,-241,-256,-261,219,219,219,219,-286,219,-287,-212,219,-264,-247,-266,-285,-288,219,-263,219,-265,219,219,219,-212,-212,219,219,]),'IMPORT':([0,4,9,12,18,22,27,37,41,47,88,],[14,14,-48,-42,-47,14,-43,14,-49,-46,-50,]),'R_SQBR':([29,31,32,50,70,72,78,93,94,105,115,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,217,218,220,223,224,225,226,227,228,229,230,231,232,233,235,236,237,240,241,242,243,244,245,246,260,261,263,264,265,270,283,284,286,311,312,313,314,353,354,362,363,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,399,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,463,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,116,-29,210,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-322,-270,-274,-317,-281,-311,-309,-293,-336,-278,-244,-313,-268,-306,-275,-242,-319,-296,-321,-289,-315,-284,-300,-269,-245,-269,-279,-243,-268,-280,116,-267,-254,-277,-276,-283,-282,-251,-253,-323,430,-255,-262,-316,-310,-308,-307,-292,-291,-290,-312,-259,-305,-302,-303,-304,-301,-318,-294,-295,-314,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-320,-285,-288,-263,-265,]),'R_ROUNDBR':([29,31,32,50,52,57,59,62,64,66,70,72,75,77,78,79,80,81,93,105,106,114,116,117,120,121,122,124,126,127,128,132,136,139,141,147,149,151,154,156,165,166,168,172,177,179,194,197,209,210,213,214,215,217,218,220,223,224,225,226,227,228,229,230,231,232,233,235,236,237,240,241,242,243,244,245,246,250,260,261,263,264,265,270,284,285,286,287,300,306,307,310,311,312,313,314,340,341,342,353,354,355,356,357,362,364,365,366,367,369,375,377,379,383,384,385,386,387,388,389,390,391,393,394,395,396,397,399,400,401,402,403,404,405,407,408,409,410,411,421,422,423,424,425,426,428,430,431,434,442,444,449,450,451,453,456,458,459,463,464,465,466,469,471,487,489,490,501,508,514,515,527,531,533,543,546,569,578,579,587,593,600,602,607,],[-31,-30,-32,-33,-19,-22,-21,-16,-14,-15,-27,-25,-17,-20,-26,-23,-18,-24,-28,-29,196,-100,-257,-165,-161,-4,-164,-162,-237,-240,-9,-2,-238,-166,-245,-10,-5,-167,-239,-8,-243,-7,-6,-11,-3,-163,-101,301,309,-258,-273,-272,-271,-322,-270,-274,-317,-281,-311,-309,-293,-336,-278,-244,-313,-268,-306,-275,-242,-319,-296,-321,-289,-315,-284,-300,-269,-85,-245,-269,-279,-243,-268,-280,-267,366,-254,368,-103,378,380,382,-277,-276,-283,-282,406,408,-269,-251,-253,426,427,428,-323,-255,431,-262,-248,433,-102,437,439,-316,-310,-308,-307,-292,-291,-290,-312,-259,-305,-302,-303,-304,-301,-318,-294,-295,-314,-299,-298,-297,443,-241,445,-260,-221,451,452,-250,-252,453,-246,-241,-256,-261,459,-286,-287,470,471,-264,-247,-249,487,-266,-320,-285,-288,-222,491,-263,-265,509,511,522,528,-220,535,544,548,550,558,561,580,588,590,597,604,609,611,616,]),'MODULO':([29,31,32,50,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,235,236,242,244,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,387,388,389,391,400,401,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,319,-278,-244,-268,-275,-242,-289,-284,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,-292,-291,-290,-259,319,319,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'EXTENDS':([33,46,],[43,43,]),'BITWISE_NOT':([131,158,167,178,184,188,216,219,221,222,247,259,262,273,274,275,276,277,278,279,280,281,282,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,416,421,428,432,434,435,441,443,445,447,448,467,475,507,520,525,541,555,556,567,],[222,222,222,222,222,222,222,222,222,222,222,222,222,-330,-333,-332,222,-335,-334,-329,-328,-331,-327,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,-212,222,222,222,222,222,222,222,222,-212,222,222,222,222,222,222,-212,-212,222,222,]),'BITWISE_XOR':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,225,226,227,229,230,231,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,384,385,386,387,388,389,390,391,393,394,395,396,397,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-311,-309,-293,-278,-244,322,-268,-306,-275,-242,-296,-289,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,-310,-308,-307,-292,-291,-290,-312,-259,-305,-302,-303,-304,-301,-294,-295,322,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'LOGICAL_NOT':([131,158,167,178,184,188,216,219,221,222,247,259,262,273,274,275,276,277,278,279,280,281,282,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,416,421,428,432,434,435,441,443,445,447,448,467,475,507,520,525,541,555,556,567,],[221,221,221,221,221,221,221,221,221,221,221,221,221,-330,-333,-332,221,-335,-334,-329,-328,-331,-327,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,-212,221,221,221,221,221,221,221,221,-212,221,221,221,221,221,221,-212,-212,221,221,]),'THIS':([95,108,118,119,123,125,129,131,134,135,138,140,142,144,152,153,155,158,160,161,163,167,169,170,173,175,178,181,183,184,188,201,202,211,212,216,219,221,222,239,247,255,259,262,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,332,333,334,335,336,337,338,339,344,345,346,347,351,352,355,358,360,371,406,408,416,417,418,419,421,428,432,433,434,435,438,440,441,443,445,446,447,448,452,457,461,462,467,469,472,474,475,476,486,489,490,491,492,493,494,496,497,500,502,504,506,507,508,509,510,511,512,513,516,517,519,520,523,524,525,528,529,530,532,534,535,538,541,542,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,572,573,574,575,576,578,579,580,581,583,584,585,586,587,588,589,590,591,592,595,596,597,598,599,601,604,606,609,611,613,616,618,620,623,],[127,203,-149,-133,-130,127,-154,127,-152,-138,-148,-139,-147,-155,-141,-153,-150,127,-151,-156,-140,127,-192,-137,-128,-132,127,-157,-136,127,127,127,127,-131,-129,127,127,127,127,-228,127,-226,127,127,127,-134,-224,127,-160,-330,-333,-332,127,-335,-334,-329,-328,-331,-327,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-227,127,127,127,127,127,127,127,127,-230,-232,-233,-225,127,127,-158,-223,-229,127,127,-212,-231,-234,-236,127,127,127,-171,127,127,-121,-123,127,127,127,127,-212,127,-189,127,-120,-122,127,-214,127,-177,127,-172,-136,-214,-214,-215,127,-235,-190,127,-178,-175,-168,-173,127,127,-214,-215,127,-215,127,127,-186,-179,127,127,127,127,127,-215,127,127,127,-217,-213,-184,-212,-174,-171,127,-217,-213,-217,-213,-202,127,-183,-191,-212,127,-169,-189,127,-217,-213,-199,127,-200,127,-216,127,-214,127,-198,127,-216,-216,-201,-214,-214,-215,127,-173,-216,-197,-196,-214,-215,127,-215,127,127,127,-195,-215,127,127,127,-213,127,-213,-213,127,-213,127,127,127,]),'DOUBLE':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,96,106,108,111,114,118,119,123,125,129,134,135,138,140,142,144,150,152,153,155,160,161,163,170,173,175,181,183,186,193,198,199,200,201,202,204,206,209,211,212,234,239,247,255,262,267,269,272,297,299,302,303,304,305,324,332,344,345,346,347,351,358,360,371,376,417,418,419,420,438,440,461,462,474,476,486,493,494,496,497,500,502,516,517,519,523,534,538,542,547,549,551,553,554,557,560,562,564,566,572,574,575,576,584,585,586,596,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,81,81,-76,-55,-75,-74,-72,-78,81,-77,-73,81,-109,81,81,-113,-100,-149,-133,-130,81,-154,-152,-138,-148,-139,-147,-155,81,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-80,-111,-88,-108,-107,81,81,-119,-112,81,-131,-129,81,-228,81,-226,81,-134,-224,-160,-79,-110,81,81,-117,-118,81,-227,81,-230,-232,-233,-225,-158,-223,-229,-116,-231,-234,-236,81,-121,-123,-120,-122,-177,-172,-136,-235,-190,81,-178,-175,-168,-186,-179,81,81,-217,-184,-174,-217,-217,-202,-183,-191,-169,-217,-199,-200,-216,-198,-216,-216,-201,-216,-197,-196,-195,]),'CHAR_LITERAL':([95,108,118,119,123,125,129,131,134,135,138,140,142,144,152,153,155,158,160,161,163,167,169,170,173,175,178,181,183,184,188,201,202,211,212,216,219,221,222,239,247,255,259,262,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,332,333,334,335,336,337,338,339,344,345,346,347,351,352,355,358,360,371,406,408,416,417,418,419,421,428,432,433,434,435,438,440,441,443,445,446,447,448,452,457,461,462,467,469,472,474,475,476,486,489,490,491,492,493,494,496,497,500,502,504,506,507,508,509,510,511,512,513,516,517,519,520,523,524,525,528,529,530,532,534,535,538,541,542,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,572,573,574,575,576,578,579,580,581,583,584,585,586,587,588,589,590,591,592,595,596,597,598,599,601,604,606,609,611,613,616,618,620,623,],[128,128,-149,-133,-130,128,-154,128,-152,-138,-148,-139,-147,-155,-141,-153,-150,128,-151,-156,-140,128,-192,-137,-128,-132,128,-157,-136,128,128,128,128,-131,-129,128,128,128,128,-228,128,-226,128,128,128,-134,-224,128,-160,-330,-333,-332,128,-335,-334,-329,-328,-331,-327,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-227,128,128,128,128,128,128,128,128,-230,-232,-233,-225,128,128,-158,-223,-229,128,128,-212,-231,-234,-236,128,128,128,-171,128,128,-121,-123,128,128,128,128,-212,128,-189,128,-120,-122,128,-214,128,-177,128,-172,-136,-214,-214,-215,128,-235,-190,128,-178,-175,-168,-173,128,128,-214,-215,128,-215,128,128,-186,-179,128,128,128,128,128,-215,128,128,128,-217,-213,-184,-212,-174,-171,128,-217,-213,-217,-213,-202,128,-183,-191,-212,128,-169,-189,128,-217,-213,-199,128,-200,128,-216,128,-214,128,-198,128,-216,-216,-201,-214,-214,-215,128,-173,-216,-197,-196,-214,-215,128,-215,128,128,128,-195,-215,128,128,128,-213,128,-213,-213,128,-213,128,128,128,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,44,47,49,65,85,86,88,89,112,],[15,-62,-61,15,-44,-60,-58,-55,-48,-56,-64,-42,-59,35,-47,-53,-52,15,15,-63,-51,-57,-43,15,-54,15,15,-45,-49,-68,-46,15,-70,-67,-66,-50,-71,-65,]),'TRANSIENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[24,-62,-61,24,-44,-60,-58,-55,-48,-56,-64,-42,-59,24,-47,-53,-52,24,24,-63,-51,-57,-43,24,-54,24,24,-45,-49,24,-68,-46,24,24,-76,-55,-75,-74,-70,-72,-78,24,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'R_SHIFT':([29,31,32,50,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,387,388,389,391,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-293,-278,-244,-268,-275,-242,-296,-289,-284,337,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,-292,-291,-290,-259,337,337,337,337,-294,-295,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'MULT_ASSIGN':([29,31,32,50,141,159,165,174,176,246,284,286,342,350,359,364,370,391,410,412,430,481,],[-31,-30,-32,-33,-326,-32,-325,280,-324,-324,-267,-254,-324,-259,-324,-255,-260,-259,-260,-324,-256,-32,]),'L_SHIFT':([29,31,32,50,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,387,388,389,391,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-293,-278,-244,-268,-275,-242,-296,-289,-284,338,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,-292,-291,-290,-259,338,338,338,338,-294,-295,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'SHORT':([2,3,6,7,8,10,11,13,19,24,26,34,42,53,56,58,60,63,67,68,69,82,90,95,96,106,108,111,114,118,119,123,125,129,134,135,138,140,142,144,150,152,153,155,160,161,163,170,173,175,181,183,186,193,198,199,200,201,202,204,206,209,211,212,234,239,247,255,262,267,269,272,297,299,302,303,304,305,324,332,344,345,346,347,351,358,360,371,376,417,418,419,420,438,440,461,462,474,476,486,493,494,496,497,500,502,516,517,519,523,534,538,542,547,549,551,553,554,557,560,562,564,566,572,574,575,576,584,585,586,596,],[-62,-61,-60,-58,-55,-56,-64,-59,-53,-63,-57,-54,52,52,-76,-55,-75,-74,-72,-78,52,-77,-73,52,-109,52,52,-113,-100,-149,-133,-130,52,-154,-152,-138,-148,-139,-147,-155,52,-141,-153,-150,-151,-156,-140,-137,-128,-132,-157,-136,-80,-111,-88,-108,-107,52,52,-119,-112,52,-131,-129,52,-228,52,-226,52,-134,-224,-160,-79,-110,52,52,-117,-118,52,-227,52,-230,-232,-233,-225,-158,-223,-229,-116,-231,-234,-236,52,-121,-123,-120,-122,-177,-172,-136,-235,-190,52,-178,-175,-168,-186,-179,52,52,-217,-184,-174,-217,-217,-202,-183,-191,-169,-217,-199,-200,-216,-198,-216,-216,-201,-216,-197,-196,-195,]),'RETURN':([95,108,118,119,123,125,129,134,135,138,140,142,144,152,153,155,160,161,163,169,170,173,175,181,183,201,202,211,212,239,255,266,267,269,271,272,303,332,345,346,347,351,358,360,371,417,418,419,433,438,440,452,457,461,462,472,474,476,486,491,493,494,496,497,500,502,504,506,509,511,513,516,517,519,524,528,530,532,534,535,538,542,544,545,547,548,549,550,551,552,553,554,557,558,559,560,561,562,563,564,565,566,570,572,573,574,575,576,580,583,584,585,586,588,590,592,595,596,597,599,601,604,606,609,611,613,616,618,620,623,],[131,131,-149,-133,-130,131,-154,-152,-138,-148,-139,-147,-155,-141,-153,-150,-151,-156,-140,-192,-137,-128,-132,-157,-136,131,131,-131,-129,-228,-226,131,-134,-224,131,-160,131,-227,-230,-232,-233,-225,-158,-223,-229,-231,-234,-236,-171,-121,-123,-189,131,-120,-122,131,-177,-172,-136,-215,-235,-190,131,-178,-175,-168,-173,131,-215,-215,131,-186,-179,131,131,-215,131,131,-217,-213,-184,-174,-171,131,-217,-213,-217,-213,-202,131,-183,-191,-169,-189,131,-217,-213,-199,131,-200,131,-216,131,-198,131,-216,-216,-201,-215,-173,-216,-197,-196,-215,-215,131,131,-195,-215,131,131,-213,131,-213,-213,131,-213,131,131,131,]),'SYNCHRONIZED':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[2,-62,-61,2,-44,-60,-58,-55,-48,-56,-64,-42,-59,2,-47,-53,-52,2,2,-63,-51,-57,-43,2,-54,2,2,-45,-49,2,-68,-46,2,2,-76,-55,-75,-74,-70,-72,-78,2,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'LOGICAL_AND':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,223,224,225,226,227,229,230,231,232,233,235,236,240,242,243,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,399,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,315,-281,-311,-309,-293,-278,-244,-313,-268,-306,-275,-242,-296,-289,-315,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,-316,-310,-308,-307,-292,-291,-290,-312,-259,-305,-302,-303,-304,-301,315,-294,-295,-314,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'FINAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,21,22,23,24,25,26,27,28,34,37,38,39,41,42,44,47,49,53,56,58,60,63,65,67,68,69,82,85,86,88,89,90,96,111,112,173,186,193,198,199,200,204,206,212,297,299,304,305,376,],[10,-62,-61,10,-44,-60,-58,-55,-48,-56,-64,-42,-59,10,-47,-53,-52,10,10,-63,-51,-57,-43,10,-54,10,10,-45,-49,10,-68,-46,10,10,-76,-55,-75,-74,-70,-72,-78,10,-77,-67,-66,-50,-71,-73,-109,-113,-65,-128,-80,-111,-88,-108,-107,-119,-112,-129,-79,-110,-117,-118,-116,]),'GEQ':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-293,-278,-244,-268,327,-275,-242,-296,-289,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,327,327,-292,-291,-290,-259,-305,-302,-303,-304,-301,-294,-295,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'NOT_EQUAL':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,226,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,384,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,317,-293,-278,-244,-268,-306,-275,-242,-296,-289,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,317,-308,-307,-292,-291,-290,-259,-305,-302,-303,-304,-301,-294,-295,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'BITWISE_OR':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,225,226,227,229,230,231,232,233,235,236,240,242,243,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-311,-309,-293,-278,-244,-313,-268,-306,-275,-242,-296,-289,335,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,335,-310,-308,-307,-292,-291,-290,-312,-259,-305,-302,-303,-304,-301,-294,-295,-314,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'LST':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,165,166,168,172,177,210,213,214,215,218,220,224,227,229,230,232,233,235,236,240,242,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,342,353,354,364,366,385,386,387,388,389,391,393,394,395,396,397,400,401,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,464,465,471,487,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,-243,-7,-6,-11,-3,-258,-273,-272,-271,-270,-274,-281,-293,-278,-244,-268,328,-275,-242,-296,-289,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-269,-251,-253,-255,-262,328,328,-292,-291,-290,-259,-305,-302,-303,-304,-301,-294,-295,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-285,-288,-263,-265,]),'COLON':([29,31,32,50,70,72,78,93,105,116,121,126,127,128,132,136,141,147,149,154,156,159,165,166,168,172,177,210,213,214,215,217,218,220,223,224,225,226,227,228,229,230,231,232,233,235,236,237,240,241,242,243,244,245,246,260,261,263,264,265,270,284,286,311,312,313,314,353,354,362,364,366,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,408,410,423,424,426,428,430,431,442,444,451,453,459,463,464,465,471,481,487,521,536,537,],[-31,-30,-32,-33,-27,-25,-26,-28,-29,-257,-4,-237,-240,-9,-2,-238,-245,-10,-5,-239,-8,266,-243,-7,-6,-11,-3,-258,-273,-272,-271,-322,-270,-274,-317,-281,-311,-309,-293,-336,-278,-244,-313,-268,-306,-275,-242,-319,-296,-321,-289,-315,-284,-300,-269,-245,-269,-279,-243,-268,-280,-267,-254,-277,-276,-283,-282,-251,-253,-323,-255,-262,-316,-310,-308,-307,-292,-291,-290,-312,-259,-305,-302,-303,-304,-301,441,-318,-294,-295,-314,-299,-298,-297,-241,-260,-250,-252,-246,-241,-256,-261,-286,-287,-264,-247,-266,-320,-285,-288,-263,506,-265,538,553,-337,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'ClassBodyDeclarations':([42,],[53,]),'PostDecrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[117,117,117,215,215,215,215,215,215,117,117,215,215,215,215,215,215,215,117,117,215,215,215,215,215,117,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,117,215,215,215,215,215,215,215,215,215,215,215,215,117,215,117,215,117,215,117,117,117,215,117,117,117,117,215,117,117,215,117,117,117,117,117,215,117,117,117,215,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'ExpressionStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'PrimitiveType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,519,523,],[55,55,55,55,55,55,55,257,55,55,55,257,340,340,55,55,392,55,55,55,55,55,]),'ElseEndSc':([542,605,],[557,614,]),'Statement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[119,119,119,119,119,358,361,119,476,494,119,358,534,119,542,547,549,560,566,476,574,575,494,584,534,542,547,549,560,566,574,575,584,]),'IntConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'ConstructorBody':([76,104,109,192,],[111,193,206,299,]),'ArgumentList':([285,306,307,355,421,434,],[365,377,379,425,450,458,]),'ClassMemberDeclaration':([42,53,],[63,63,]),'Assignment':([95,108,125,131,178,184,188,201,202,247,259,262,266,271,276,283,285,288,292,303,306,307,330,339,344,352,355,421,432,434,435,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[120,120,120,217,217,217,217,120,120,217,217,217,120,120,217,217,217,217,217,120,217,217,217,217,120,217,217,217,217,217,217,120,217,120,217,120,217,120,120,120,217,120,120,120,120,217,120,120,217,120,120,120,120,120,217,120,120,120,217,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'CharConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'CatchClause':([252,345,],[347,418,]),'PostIncrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[122,122,122,218,218,218,218,218,218,122,122,218,218,218,218,218,218,218,122,122,218,218,218,218,218,122,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,122,218,218,218,218,218,218,218,218,218,218,218,218,122,218,122,218,122,218,122,122,122,218,122,122,122,122,218,122,122,218,122,122,122,122,122,218,122,122,122,218,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ClassBodyDeclaration':([42,53,],[67,90,]),'SwMark1':([473,495,],[498,498,]),'SwMark2':([427,],[454,]),'SwMark3':([474,],[500,]),'BlockStatement':([95,108,125,201,202,303,496,519,],[123,123,211,123,211,211,123,211,]),'SwitchBlockStatementGroups':([473,],[495,]),'SingleTypeImportDeclaration':([0,4,22,37,],[18,18,18,18,]),'ConditionalExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,463,241,241,241,241,241,241,241,241,]),'PreIncrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,421,432,434,435,441,443,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[124,124,124,220,220,220,220,220,220,124,124,220,220,220,220,220,220,220,124,124,220,220,220,220,220,124,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,124,220,220,220,220,220,220,220,220,220,124,220,124,220,124,220,124,124,124,220,124,124,124,124,220,124,124,220,124,124,124,124,124,220,124,124,124,220,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ExplicitConstructorInvocation':([108,],[201,]),'UnaryExpression':([131,158,167,178,184,188,216,219,221,222,247,259,262,276,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,421,432,434,435,441,443,448,467,475,507,520,525,556,567,],[242,263,270,242,242,242,311,312,313,314,242,242,242,242,242,242,242,242,242,242,242,242,242,242,387,388,389,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,442,242,242,242,242,242,464,242,242,242,242,242,242,242,242,]),'VariableInitializers':([292,],[372,]),'DimExpr':([176,246,257,258,261,284,329,342,353,354,359,412,],[286,286,286,286,286,364,286,286,364,364,286,286,]),'Throws':([76,91,98,104,189,191,],[109,113,187,192,296,298,]),'BlockStatements':([95,108,201,496,],[125,202,303,519,]),'ClassTypeList':([110,],[208,]),'PrimaryNoNewArray':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'AssignmentOperator':([174,],[276,]),'ConditionalAndExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,331,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,399,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'EmptyStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'ReturnStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'VariableDeclarator':([61,103,133,185,],[101,101,101,291,]),'PostfixExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[130,130,130,224,224,224,224,224,224,130,130,224,224,224,224,224,224,224,130,130,224,224,224,224,224,130,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,130,224,224,224,224,224,224,224,224,224,224,224,224,130,224,130,224,130,224,130,130,130,224,130,130,130,130,224,130,130,224,130,130,130,130,130,224,130,130,130,224,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'SwitchLabel':([473,495,],[496,496,]),'ArrayInitializer':([188,292,435,],[293,293,293,]),'FormalParameter':([106,209,302,420,],[194,194,375,449,]),'AndExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,322,330,331,335,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,390,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,]),'Type':([42,53,69,95,106,108,125,201,202,209,302,303,344,420,496,519,523,],[61,61,103,133,195,133,133,133,133,195,195,133,133,195,133,133,133,]),'EqualityExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,322,330,331,335,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,384,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,]),'MultiplicativeExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,400,401,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,]),'BreakStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'IfThenStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'doWhMark2':([429,],[455,]),'ElseStartSc':([504,583,],[524,595,]),'Super':([33,46,],[45,87,]),'ArrayCreationExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'AssignmentExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,339,352,355,421,432,434,435,448,467,475,507,520,525,556,567,],[228,228,228,228,228,228,228,362,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,]),'UnaryExpressionNotPlusMinus':([131,158,167,178,184,188,216,219,221,222,247,259,262,276,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,421,428,432,434,435,441,443,445,448,467,475,507,520,525,556,567,],[229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,444,229,444,229,229,229,229,229,465,229,229,229,229,229,229,229,229,]),'SwitchBlock':([454,],[474,]),'IfstartSc':([433,544,],[457,559,]),'FieldDeclaration':([42,53,],[82,82,]),'StatementNoShortIf':([457,506,559,570,592,595,599,601,606,613,618,620,623,],[478,526,571,582,603,605,608,610,615,621,624,625,627,]),'MethodCreateScope':([114,],[209,]),'MethodInvocation':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[139,139,139,230,230,230,230,230,230,139,139,230,230,230,230,230,230,230,139,139,230,230,230,230,230,139,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,139,230,230,230,230,230,230,230,230,230,230,230,230,139,230,139,230,139,230,139,139,139,230,139,139,139,139,230,139,139,230,139,139,139,139,139,230,139,139,139,230,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'IfThenElseStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'ArrayAccess':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[141,141,141,141,260,260,141,141,141,141,141,260,260,260,260,141,141,141,141,141,141,141,141,141,141,141,141,141,260,260,260,260,260,260,260,260,260,260,260,260,141,260,260,260,260,260,260,260,141,141,141,141,260,260,141,260,141,141,141,260,260,260,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'Modifier':([0,4,16,22,23,28,37,38,42,49,53,69,],[19,19,34,19,19,19,19,19,19,19,19,34,]),'Block':([58,95,107,108,125,143,201,202,266,271,303,348,457,470,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[96,142,200,142,142,252,142,142,142,142,142,419,142,493,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'ForUpdate':([492,510,512,529,581,589,591,598,],[515,531,533,546,593,600,602,607,]),'ForInit':([344,523,],[415,540,]),'VariableDeclarators':([61,103,133,],[97,190,249,]),'ThrowStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'ExclusiveOrExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,330,331,335,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,402,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,]),'Primary':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[145,145,145,232,265,265,232,232,232,145,145,265,265,265,265,232,232,232,145,145,232,232,232,232,232,145,232,232,265,265,265,265,265,265,265,265,265,265,265,265,232,265,265,265,265,265,265,265,232,145,232,232,265,265,232,265,232,232,232,265,265,265,145,232,145,232,145,232,145,145,145,232,145,145,145,145,232,145,145,232,145,145,145,145,145,232,145,145,145,232,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'PackageDeclaration':([0,],[22,]),'RelationalExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,330,331,335,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,385,386,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),'WhileStatementNoShortIf':([457,506,559,570,592,595,599,601,606,613,618,620,623,],[479,479,479,479,479,479,479,479,479,479,479,479,479,]),'ConstantExpression':([520,],[536,]),'VariableInitializer':([188,292,435,],[294,373,460,]),'StaticInitializer':([42,53,],[56,56,]),'Literal':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'StringConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'ConstructorDeclaration':([42,53,],[60,60,]),'TypeImportOnDemandDeclaration':([0,4,22,37,],[9,9,9,9,]),'ReferenceType':([42,53,69,95,106,108,125,201,202,209,302,303,324,344,420,496,519,523,],[73,73,73,73,73,73,73,73,73,73,73,73,393,73,73,73,73,73,]),'ClassInstanceCreationExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[151,151,151,236,236,236,236,236,236,151,151,236,236,236,236,236,236,236,151,151,236,236,236,236,236,151,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,151,236,236,236,236,236,236,236,236,236,236,236,236,151,236,151,236,151,236,151,151,151,236,151,151,151,151,236,151,151,236,151,151,151,151,151,236,151,151,151,236,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'ForStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'IfendSc':([476,],[502,]),'FoMark3':([566,574,575,584,621,624,625,627,],[576,585,586,596,626,628,629,630,]),'ContinueStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'ImportDeclaration':([0,4,22,37,],[12,27,12,27,]),'SwitchStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'Dims':([55,70,176,340,342,353,354,392,412,],[93,105,105,407,409,423,424,93,105,]),'ClassBody':([33,45,46,87,],[44,85,86,112,]),'ConditionalOrExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,330,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,]),'SwitchBlockStatementGroup':([473,495,],[499,518,]),'MethodDeclaration':([42,53,],[68,68,]),'Catches':([252,],[345,]),'Modifiers':([0,4,22,23,28,37,38,42,49,53,],[16,16,16,16,16,16,16,69,16,69,]),'DoStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'TryStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'FormalParameterList':([106,209,],[197,310,]),'Expression':([131,178,184,188,247,259,262,283,285,288,292,306,307,330,339,352,355,421,432,434,435,448,467,475,507,520,525,556,567,],[238,287,290,295,341,356,357,363,367,369,295,367,367,398,363,422,367,367,456,367,295,468,488,501,527,537,543,568,577,]),'doWhMark3':([522,],[539,]),'StatementExpressionList':([344,492,510,512,523,529,581,589,591,598,],[414,514,514,514,414,514,514,514,514,514,]),'doWhMark1':([169,],[271,]),'AdditiveExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,325,326,327,328,330,331,335,336,337,338,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,403,404,405,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,]),'FloatingPointType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,519,523,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'LocalVariableDeclaration':([95,108,125,201,202,303,344,496,519,523,],[162,162,162,162,162,162,413,162,162,413,]),'ConstructorDeclarator':([42,53,69,],[76,76,104,]),'Finally':([252,345,],[346,417,]),'InclusiveOrExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,330,331,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[243,243,243,243,243,243,243,243,243,243,243,243,243,243,383,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,]),'ClassType':([42,43,53,69,95,106,108,110,125,150,201,202,209,234,302,303,308,324,344,420,496,519,523,],[78,84,78,78,78,78,78,207,78,258,78,78,78,329,78,78,381,78,78,78,78,78,78,]),'WhileStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'ClassDeclaration':([0,4,22,23,28,37,38,49,],[25,25,25,25,25,25,25,25,]),'NullConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'CastExpression':([131,158,167,178,184,188,216,219,221,222,247,259,262,276,283,285,288,292,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,352,355,406,408,421,428,432,434,435,441,443,445,448,467,475,507,520,525,556,567,],[244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,]),'ImportDeclarations':([0,22,],[4,37,]),'TypeDeclaration':([0,4,22,23,28,37,38,49,],[5,5,5,39,39,5,39,39,]),'LabeledStatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'ArrayType':([42,53,69,95,106,108,125,201,202,209,302,303,324,344,420,496,519,523,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'FoMark5':([534,547,549,560,603,608,610,615,],[551,562,564,572,612,617,619,622,]),'FoMark4':([491,509,511,528,580,588,590,597,],[513,530,532,545,592,599,601,606,]),'StatementExpression':([95,108,125,201,202,266,271,303,344,446,457,472,492,496,506,510,512,513,519,523,524,529,530,532,545,552,559,563,565,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[171,171,171,171,171,171,171,171,411,466,171,171,411,171,171,411,411,171,171,411,171,411,171,171,171,171,171,171,171,171,171,411,411,411,171,171,411,171,171,171,171,171,171,171,]),'FoMark6':([469,489,490,508,569,578,579,587,],[492,510,512,529,581,589,591,598,]),'FoMark1':([416,447,541,555,],[448,467,556,567,]),'FoMark0':([137,477,],[251,503,]),'MethodDeclarator':([54,61,102,103,],[91,98,189,191,]),'FoMark2':([535,548,550,561,604,609,611,616,],[552,563,565,573,613,618,620,623,]),'VariableDeclaratorId':([61,103,133,185,195,],[99,99,99,99,300,]),'IntegralType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,519,523,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'QualifiedName':([14,17,42,43,53,69,95,106,108,110,125,131,150,158,167,178,184,188,201,202,209,216,219,221,222,234,247,259,262,266,271,276,283,285,288,292,302,303,306,307,308,315,316,317,318,319,320,321,322,324,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,420,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NumericType':([42,53,69,95,106,108,125,150,201,202,209,234,247,262,302,303,324,344,420,496,519,523,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LeftHandSide':([95,108,125,131,178,184,188,201,202,247,259,262,266,271,276,283,285,288,292,303,306,307,330,339,344,352,355,421,432,434,435,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'IfThenElseStatementNoShortIf':([457,506,559,570,592,595,599,601,606,613,618,620,623,],[482,482,482,482,482,482,482,482,482,482,482,482,482,]),'LocalVariableDeclarationStatement':([95,108,125,201,202,303,496,519,],[175,175,175,175,175,175,175,175,]),'ShiftExpression':([131,178,184,188,247,259,262,276,283,285,288,292,306,307,315,316,317,318,322,325,326,327,328,330,331,335,339,352,355,421,432,434,435,441,448,467,475,507,520,525,556,567,],[245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,394,395,396,397,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,]),'MethodBody':([107,],[198,]),'Name':([14,17,42,43,53,69,95,106,108,110,125,131,150,158,167,178,184,188,201,202,209,216,219,221,222,234,247,259,262,266,271,276,283,285,288,292,302,303,306,307,308,315,316,317,318,319,320,321,322,324,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,420,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[30,36,70,83,70,70,176,70,176,83,176,246,83,261,261,246,246,246,176,176,70,261,261,261,261,83,342,246,342,359,359,246,246,246,246,246,70,176,246,246,83,261,261,261,261,261,261,261,261,70,261,261,261,261,246,261,261,261,261,261,261,261,246,412,246,246,261,261,70,246,261,246,246,246,261,261,261,359,246,359,246,359,246,359,176,359,246,359,359,359,176,246,412,359,246,359,359,359,359,359,246,359,359,359,246,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,]),'FloatConst':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'MethodAddParentScope':([74,],[107,]),'SimpleName':([14,17,42,43,53,69,95,106,108,110,125,131,150,158,167,178,184,188,201,202,209,216,219,221,222,234,247,259,262,266,271,276,283,285,288,292,302,303,306,307,308,315,316,317,318,319,320,321,322,324,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,420,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[31,31,71,31,71,71,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PreDecrementExpression':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,421,432,434,435,441,443,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[179,179,179,235,235,235,235,235,235,179,179,235,235,235,235,235,235,235,179,179,235,235,235,235,235,179,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,179,235,235,235,235,235,235,235,235,235,179,235,179,235,179,235,179,179,179,235,179,179,179,179,235,179,179,235,179,179,179,179,179,235,179,179,179,235,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'CompilationUnit':([0,],[20,]),'ForStatementNoShortIf':([457,506,559,570,592,595,599,601,606,613,618,620,623,],[483,483,483,483,483,483,483,483,483,483,483,483,483,]),'MethodHeader':([42,53,],[74,74,]),'LabeledStatementNoShortIf':([457,506,559,570,592,595,599,601,606,613,618,620,623,],[485,485,485,485,485,485,485,485,485,485,485,485,485,]),'WhMark1':([148,480,],[256,505,]),'WhMark3':([494,582,],[516,594,]),'WhMark2':([452,558,],[472,570,]),'FieldAccess':([95,108,125,131,158,167,178,184,188,201,202,216,219,221,222,247,259,262,266,271,276,283,285,288,292,303,306,307,315,316,317,318,319,320,321,322,325,326,327,328,330,331,333,334,335,336,337,338,339,344,352,355,406,408,421,428,432,434,435,441,443,445,446,448,457,467,472,475,492,496,506,507,510,512,513,519,520,523,524,525,529,530,532,545,552,556,559,563,565,567,570,573,581,589,591,592,595,598,599,601,606,613,618,620,623,],[165,165,165,165,264,264,165,165,165,165,165,264,264,264,264,165,165,165,165,165,165,165,165,165,165,165,165,165,264,264,264,264,264,264,264,264,264,264,264,264,165,264,264,264,264,264,264,264,165,165,165,165,264,264,165,264,165,165,165,264,264,264,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'TypeDeclarations':([0,4,22,37,],[23,28,38,49,]),'StatementWithoutTrailingSubstatement':([95,108,125,201,202,266,271,303,457,472,496,506,513,519,524,530,532,545,552,559,563,565,570,573,592,595,599,601,606,613,618,620,623,],[183,183,183,183,183,183,183,183,486,183,183,486,183,183,183,183,183,183,183,486,183,183,486,183,486,486,486,486,486,486,486,486,486,]),'DimExprs':([176,246,257,258,261,329,342,359,412,],[284,284,353,354,284,354,284,284,284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','parser.py',20),
  ('Literal -> IntConst','Literal',1,'p_Literal','parser.py',23),
  ('Literal -> FloatConst','Literal',1,'p_Literal','parser.py',24),
  ('Literal -> CharConst','Literal',1,'p_Literal','parser.py',25),
  ('Literal -> StringConst','Literal',1,'p_Literal','parser.py',26),
  ('Literal -> NullConst','Literal',1,'p_Literal','parser.py',27),
  ('IntConst -> INT_LITERAL','IntConst',1,'p_IntConst','parser.py',35),
  ('FloatConst -> FLOAT_LITERAL','FloatConst',1,'p_FloatConst','parser.py',44),
  ('CharConst -> CHAR_LITERAL','CharConst',1,'p_CharConst','parser.py',53),
  ('StringConst -> STRING_LITERAL','StringConst',1,'p_StringConst','parser.py',62),
  ('NullConst -> NULL','NullConst',1,'p_NullConst','parser.py',71),
  ('Type -> PrimitiveType','Type',1,'p_Type','parser.py',79),
  ('Type -> ReferenceType','Type',1,'p_Type','parser.py',80),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser.py',84),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','parser.py',85),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser.py',96),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser.py',97),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','parser.py',102),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','parser.py',103),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','parser.py',104),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','parser.py',105),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','parser.py',106),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','parser.py',113),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser.py',114),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser.py',122),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','parser.py',123),
  ('ClassType -> Name','ClassType',1,'p_ClassType','parser.py',128),
  ('ArrayType -> PrimitiveType Dims','ArrayType',2,'p_ArrayType','parser.py',134),
  ('ArrayType -> Name Dims','ArrayType',2,'p_ArrayType','parser.py',135),
  ('Name -> SimpleName','Name',1,'p_Name','parser.py',150),
  ('Name -> QualifiedName','Name',1,'p_Name','parser.py',151),
  ('SimpleName -> IDENTIFIER','SimpleName',1,'p_SimpleName','parser.py',156),
  ('QualifiedName -> Name DOT IDENTIFIER','QualifiedName',3,'p_QualifiedName','parser.py',163),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','parser.py',170),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',171),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',172),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',173),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','parser.py',174),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',175),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',176),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','parser.py',177),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','parser.py',183),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','parser.py',184),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','parser.py',190),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','parser.py',191),
  ('PackageDeclaration -> PACKAGE Name STMT_TERMINATOR','PackageDeclaration',3,'p_PackageDeclaration','parser.py',197),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',203),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',204),
  ('SingleTypeImportDeclaration -> IMPORT Name STMT_TERMINATOR','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','parser.py',210),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT STMT_TERMINATOR','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser.py',216),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser.py',222),
  ('TypeDeclaration -> STMT_TERMINATOR','TypeDeclaration',1,'p_TypeDeclaration','parser.py',223),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','parser.py',229),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','parser.py',230),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','parser.py',236),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','parser.py',237),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','parser.py',238),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','parser.py',239),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','parser.py',240),
  ('Modifier -> ABSTRACT','Modifier',1,'p_Modifier','parser.py',241),
  ('Modifier -> VOLATILE','Modifier',1,'p_Modifier','parser.py',242),
  ('Modifier -> SYNCHRONIZED','Modifier',1,'p_Modifier','parser.py',243),
  ('Modifier -> TRANSIENT','Modifier',1,'p_Modifier','parser.py',244),
  ('Modifier -> NATIVE','Modifier',1,'p_Modifier','parser.py',245),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER Super ClassBody','ClassDeclaration',5,'p_ClassDeclaration','parser.py',250),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',251),
  ('ClassDeclaration -> CLASS IDENTIFIER Super ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',252),
  ('ClassDeclaration -> CLASS IDENTIFIER ClassBody','ClassDeclaration',3,'p_ClassDeclaration','parser.py',253),
  ('Super -> EXTENDS ClassType','Super',2,'p_Super','parser.py',259),
  ('ClassBody -> L_CURLYBR R_CURLYBR','ClassBody',2,'p_ClassBody','parser.py',264),
  ('ClassBody -> L_CURLYBR ClassBodyDeclarations R_CURLYBR','ClassBody',3,'p_ClassBody','parser.py',265),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','parser.py',271),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','parser.py',272),
  ('ClassBodyDeclaration -> ClassMemberDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',278),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',279),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',280),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',286),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',287),
  ('FieldDeclaration -> Modifiers Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',4,'p_FieldDeclaration','parser.py',293),
  ('FieldDeclaration -> Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',3,'p_FieldDeclaration','parser.py',294),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','parser.py',300),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','parser.py',301),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','parser.py',311),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser.py',312),
  ('VariableDeclaratorId -> IDENTIFIER','VariableDeclaratorId',1,'p_VariableDeclaratorId','parser.py',339),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser.py',346),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser.py',347),
  ('MethodDeclaration -> MethodHeader MethodAddParentScope MethodBody','MethodDeclaration',3,'p_MethodDeclaration','parser.py',354),
  ('MethodAddParentScope -> <empty>','MethodAddParentScope',0,'p_MethodAddParentScope','parser.py',363),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',373),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',374),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',375),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',376),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',377),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',378),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',379),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',380),
  ('MethodDeclarator -> IDENTIFIER L_ROUNDBR MethodCreateScope R_ROUNDBR','MethodDeclarator',4,'p_MethodDeclarator','parser.py',401),
  ('MethodDeclarator -> IDENTIFIER L_ROUNDBR MethodCreateScope FormalParameterList R_ROUNDBR','MethodDeclarator',5,'p_MethodDeclarator','parser.py',402),
  ('MethodCreateScope -> <empty>','MethodCreateScope',0,'p_MethodCreateScope','parser.py',435),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','parser.py',442),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','parser.py',443),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser.py',452),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','parser.py',464),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','parser.py',470),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','parser.py',471),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser.py',477),
  ('MethodBody -> STMT_TERMINATOR','MethodBody',1,'p_MethodBody','parser.py',478),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','parser.py',484),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','parser.py',490),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',491),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',492),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','parser.py',493),
  ('ConstructorDeclarator -> SimpleName L_ROUNDBR FormalParameterList R_ROUNDBR','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser.py',499),
  ('ConstructorDeclarator -> SimpleName L_ROUNDBR R_ROUNDBR','ConstructorDeclarator',3,'p_ConstructorDeclarator','parser.py',500),
  ('ConstructorBody -> L_CURLYBR ExplicitConstructorInvocation BlockStatements R_CURLYBR','ConstructorBody',4,'p_ConstructorBody','parser.py',506),
  ('ConstructorBody -> L_CURLYBR ExplicitConstructorInvocation R_CURLYBR','ConstructorBody',3,'p_ConstructorBody','parser.py',507),
  ('ConstructorBody -> L_CURLYBR BlockStatements R_CURLYBR','ConstructorBody',3,'p_ConstructorBody','parser.py',508),
  ('ConstructorBody -> L_CURLYBR R_CURLYBR','ConstructorBody',2,'p_ConstructorBody','parser.py',509),
  ('ExplicitConstructorInvocation -> THIS L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',515),
  ('ExplicitConstructorInvocation -> THIS L_ROUNDBR R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',516),
  ('ExplicitConstructorInvocation -> SUPER L_ROUNDBR ArgumentList R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',517),
  ('ExplicitConstructorInvocation -> SUPER L_ROUNDBR R_ROUNDBR STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',518),
  ('ArrayInitializer -> L_CURLYBR VariableInitializers R_CURLYBR','ArrayInitializer',3,'p_ArrayInitializer','parser.py',523),
  ('ArrayInitializer -> L_CURLYBR R_CURLYBR','ArrayInitializer',2,'p_ArrayInitializer','parser.py',524),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','parser.py',531),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','parser.py',532),
  ('Block -> L_CURLYBR R_CURLYBR','Block',2,'p_Block','parser.py',537),
  ('Block -> L_CURLYBR BlockStatements R_CURLYBR','Block',3,'p_Block','parser.py',538),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser.py',544),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','parser.py',545),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser.py',550),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser.py',551),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration STMT_TERMINATOR','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser.py',558),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser.py',565),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','parser.py',628),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','parser.py',629),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser.py',630),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','parser.py',631),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','parser.py',632),
  ('Statement -> ForStatement','Statement',1,'p_Statement','parser.py',633),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',640),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',641),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',642),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',643),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',644),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',652),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',653),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',654),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',655),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',656),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',657),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',658),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',659),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',660),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',661),
  ('EmptyStatement -> STMT_TERMINATOR','EmptyStatement',1,'p_EmptyStatement','parser.py',668),
  ('LabeledStatement -> IDENTIFIER COLON Statement','LabeledStatement',3,'p_LabeledStatement','parser.py',674),
  ('LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser.py',680),
  ('ExpressionStatement -> StatementExpression STMT_TERMINATOR','ExpressionStatement',2,'p_ExpressionStatement','parser.py',686),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser.py',694),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',695),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',696),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',697),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',698),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser.py',699),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser.py',700),
  ('IfThenStatement -> IF L_ROUNDBR Expression R_ROUNDBR IfstartSc Statement IfendSc','IfThenStatement',7,'p_IfThenStatement','parser.py',708),
  ('IfThenElseStatement -> IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc Statement ElseEndSc','IfThenElseStatement',10,'p_IfThenElseStatement','parser.py',714),
  ('IfThenElseStatementNoShortIf -> IF L_ROUNDBR Expression R_ROUNDBR IfstartSc StatementNoShortIf ELSE ElseStartSc StatementNoShortIf ElseEndSc','IfThenElseStatementNoShortIf',10,'p_IfThenElseStatementNoShortIf','parser.py',720),
  ('IfstartSc -> <empty>','IfstartSc',0,'p_IfstartSc','parser.py',725),
  ('IfendSc -> <empty>','IfendSc',0,'p_IfendSc','parser.py',735),
  ('ElseStartSc -> <empty>','ElseStartSc',0,'p_ElseStartSc','parser.py',740),
  ('ElseEndSc -> <empty>','ElseEndSc',0,'p_ElseEndSc','parser.py',749),
  ('SwitchStatement -> SWITCH L_ROUNDBR Expression R_ROUNDBR SwMark2 SwitchBlock SwMark3','SwitchStatement',7,'p_SwitchStatement','parser.py',757),
  ('SwMark2 -> <empty>','SwMark2',0,'p_SwMark2','parser.py',765),
  ('SwMark3 -> <empty>','SwMark3',0,'p_SwMark3','parser.py',773),
  ('SwitchBlock -> L_CURLYBR R_CURLYBR','SwitchBlock',2,'p_SwitchBlock','parser.py',787),
  ('SwitchBlock -> L_CURLYBR SwitchBlockStatementGroups R_CURLYBR','SwitchBlock',3,'p_SwitchBlock','parser.py',788),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','parser.py',795),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','parser.py',796),
  ('SwitchBlockStatementGroup -> SwitchLabel BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser.py',812),
  ('SwitchLabel -> SwMark1 CASE ConstantExpression COLON','SwitchLabel',4,'p_SwitchLabel','parser.py',818),
  ('SwitchLabel -> SwMark1 DEFAULT COLON','SwitchLabel',3,'p_SwitchLabel','parser.py',819),
  ('SwMark1 -> <empty>','SwMark1',0,'p_SwMark1','parser.py',832),
  ('WhileStatement -> WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 Statement WhMark3','WhileStatement',8,'p_WhileStatement','parser.py',839),
  ('WhileStatementNoShortIf -> WHILE WhMark1 L_ROUNDBR Expression R_ROUNDBR WhMark2 StatementNoShortIf WhMark3','WhileStatementNoShortIf',8,'p_WhileStatementNoShortIf','parser.py',845),
  ('WhMark1 -> <empty>','WhMark1',0,'p_WhMark1','parser.py',850),
  ('WhMark2 -> <empty>','WhMark2',0,'p_WhMark2','parser.py',859),
  ('WhMark3 -> <empty>','WhMark3',0,'p_WhMark3','parser.py',865),
  ('DoStatement -> DO doWhMark1 Statement WHILE doWhMark2 L_ROUNDBR Expression R_ROUNDBR doWhMark3 STMT_TERMINATOR','DoStatement',10,'p_DoStatement','parser.py',872),
  ('doWhMark1 -> <empty>','doWhMark1',0,'p_doWhMark1','parser.py',877),
  ('doWhMark3 -> <empty>','doWhMark3',0,'p_doWhMark3','parser.py',886),
  ('doWhMark2 -> <empty>','doWhMark2',0,'p_doWhMark2','parser.py',892),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3','ForStatement',14,'p_ForStatement','parser.py',899),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3','ForStatement',13,'p_ForStatement','parser.py',900),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3','ForStatement',13,'p_ForStatement','parser.py',901),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5','ForStatement',12,'p_ForStatement','parser.py',902),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','parser.py',903),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','parser.py',904),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 Statement FoMark3','ForStatement',12,'p_ForStatement','parser.py',905),
  ('ForStatement -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 Statement FoMark5','ForStatement',10,'p_ForStatement','parser.py',906),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',14,'p_ForStatementNoShortIf','parser.py',912),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',13,'p_ForStatementNoShortIf','parser.py',913),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',13,'p_ForStatementNoShortIf','parser.py',914),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','parser.py',915),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','parser.py',916),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','parser.py',917),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_ROUNDBR FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','parser.py',918),
  ('ForStatementNoShortIf -> FOR FoMark0 L_ROUNDBR STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_ROUNDBR FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',10,'p_ForStatementNoShortIf','parser.py',919),
  ('FoMark0 -> <empty>','FoMark0',0,'p_FoMark0','parser.py',924),
  ('FoMark1 -> <empty>','FoMark1',0,'p_FoMark1','parser.py',929),
  ('FoMark2 -> <empty>','FoMark2',0,'p_FoMark2','parser.py',938),
  ('FoMark6 -> <empty>','FoMark6',0,'p_FoMark6','parser.py',944),
  ('FoMark4 -> <empty>','FoMark4',0,'p_FoMark4','parser.py',949),
  ('FoMark3 -> <empty>','FoMark3',0,'p_FoMark3','parser.py',955),
  ('FoMark5 -> <empty>','FoMark5',0,'p_FoMark5','parser.py',961),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','parser.py',968),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','parser.py',969),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','parser.py',975),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','parser.py',981),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','parser.py',982),
  ('BreakStatement -> BREAK IDENTIFIER STMT_TERMINATOR','BreakStatement',3,'p_BreakStatement','parser.py',988),
  ('BreakStatement -> BREAK STMT_TERMINATOR','BreakStatement',2,'p_BreakStatement','parser.py',989),
  ('ContinueStatement -> CONTINUE IDENTIFIER STMT_TERMINATOR','ContinueStatement',3,'p_ContinueStatement','parser.py',997),
  ('ContinueStatement -> CONTINUE STMT_TERMINATOR','ContinueStatement',2,'p_ContinueStatement','parser.py',998),
  ('ReturnStatement -> RETURN Expression STMT_TERMINATOR','ReturnStatement',3,'p_ReturnStatement','parser.py',1007),
  ('ReturnStatement -> RETURN STMT_TERMINATOR','ReturnStatement',2,'p_ReturnStatement','parser.py',1008),
  ('ThrowStatement -> THROW Expression STMT_TERMINATOR','ThrowStatement',3,'p_ThrowStatement','parser.py',1034),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','parser.py',1039),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','parser.py',1040),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','parser.py',1041),
  ('Catches -> CatchClause','Catches',1,'p_Catches','parser.py',1046),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','parser.py',1047),
  ('CatchClause -> CATCH L_ROUNDBR FormalParameter R_ROUNDBR Block','CatchClause',5,'p_CatchClause','parser.py',1052),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','parser.py',1057),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser.py',1062),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','parser.py',1063),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1069),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1070),
  ('PrimaryNoNewArray -> L_ROUNDBR Expression R_ROUNDBR','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser.py',1071),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1072),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1073),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1074),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',1075),
  ('ClassInstanceCreationExpression -> NEW ClassType L_ROUNDBR R_ROUNDBR','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','parser.py',1084),
  ('ClassInstanceCreationExpression -> NEW ClassType L_ROUNDBR ArgumentList R_ROUNDBR','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','parser.py',1085),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','parser.py',1091),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','parser.py',1092),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',1102),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',1103),
  ('ArrayCreationExpression -> NEW ClassType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',1104),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',1105),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','parser.py',1116),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','parser.py',1117),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','parser.py',1126),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','parser.py',1135),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','parser.py',1136),
  ('FieldAccess -> Primary DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',1145),
  ('FieldAccess -> SUPER DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',1146),
  ('MethodInvocation -> Name L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',4,'p_MethodInvocation','parser.py',1152),
  ('MethodInvocation -> Name L_ROUNDBR R_ROUNDBR','MethodInvocation',3,'p_MethodInvocation','parser.py',1153),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',6,'p_MethodInvocation','parser.py',1154),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodInvocation',5,'p_MethodInvocation','parser.py',1155),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_ROUNDBR ArgumentList R_ROUNDBR','MethodInvocation',6,'p_MethodInvocation','parser.py',1156),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_ROUNDBR R_ROUNDBR','MethodInvocation',5,'p_MethodInvocation','parser.py',1157),
  ('ArrayAccess -> Name DimExprs','ArrayAccess',2,'p_ArrayAccess','parser.py',1203),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser.py',1238),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','parser.py',1239),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',1240),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',1241),
  ('PostIncrementExpression -> PostfixExpression INCREMENT','PostIncrementExpression',2,'p_PostIncrementExpression','parser.py',1279),
  ('PostDecrementExpression -> PostfixExpression DECREMENT','PostDecrementExpression',2,'p_PostDecrementExpression','parser.py',1292),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',1306),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',1307),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',1308),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',1309),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser.py',1310),
  ('PreIncrementExpression -> INCREMENT UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','parser.py',1320),
  ('PreDecrementExpression -> DECREMENT UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','parser.py',1333),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',1347),
  ('UnaryExpressionNotPlusMinus -> BITWISE_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',1348),
  ('UnaryExpressionNotPlusMinus -> LOGICAL_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',1349),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',1350),
  ('CastExpression -> L_ROUNDBR PrimitiveType Dims R_ROUNDBR UnaryExpression','CastExpression',5,'p_CastExpression','parser.py',1364),
  ('CastExpression -> L_ROUNDBR PrimitiveType R_ROUNDBR UnaryExpression','CastExpression',4,'p_CastExpression','parser.py',1365),
  ('CastExpression -> L_ROUNDBR Expression R_ROUNDBR UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser.py',1366),
  ('CastExpression -> L_ROUNDBR Name Dims R_ROUNDBR UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser.py',1367),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser.py',1373),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',1374),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVIDE UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',1375),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',1376),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser.py',1422),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',1423),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',1424),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser.py',1469),
  ('ShiftExpression -> ShiftExpression L_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',1470),
  ('ShiftExpression -> ShiftExpression R_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',1471),
  ('ShiftExpression -> ShiftExpression RR_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',1472),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser.py',1506),
  ('RelationalExpression -> RelationalExpression LST ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1507),
  ('RelationalExpression -> RelationalExpression GRT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1508),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1509),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',1510),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser.py',1511),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser.py',1585),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',1586),
  ('EqualityExpression -> EqualityExpression NOT_EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',1587),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','parser.py',1640),
  ('AndExpression -> AndExpression BITWISE_AND EqualityExpression','AndExpression',3,'p_AndExpression','parser.py',1641),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','parser.py',1672),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BITWISE_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','parser.py',1673),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','parser.py',1705),
  ('InclusiveOrExpression -> InclusiveOrExpression BITWISE_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','parser.py',1706),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','parser.py',1738),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGICAL_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','parser.py',1739),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','parser.py',1774),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGICAL_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','parser.py',1775),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','parser.py',1812),
  ('ConditionalExpression -> ConditionalOrExpression QMARK Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','parser.py',1813),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','parser.py',1821),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','parser.py',1822),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','parser.py',1830),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','parser.py',1852),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',1853),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',1854),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1860),
  ('AssignmentOperator -> MULT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1861),
  ('AssignmentOperator -> DIVIDE_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1862),
  ('AssignmentOperator -> MOD_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1863),
  ('AssignmentOperator -> PLUS_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1864),
  ('AssignmentOperator -> MINUS_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1865),
  ('AssignmentOperator -> LSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1866),
  ('AssignmentOperator -> RSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1867),
  ('AssignmentOperator -> RRSHIFT_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',1868),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','parser.py',1876),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','parser.py',1882),
]
